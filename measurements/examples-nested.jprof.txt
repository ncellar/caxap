Method Times by Caller (times inclusive): 5200 ticks
  1: java.lang.Object.<init>: 43,75% (2275 inclusive / 2275 exclusive)
  1: parser.Matcher.parse: 21,19% (1102 inclusive / 1 exclusive)
    2: parser.ParseData.<init>: 21,17% (1101 inclusive / 0 exclusive)
      3: parser.ParseErrors.<init>: 8,96% (466 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 4,77% (248 inclusive / 248 exclusive)
        4: java.util.ArrayList.<init>: 4,19% (218 inclusive / 218 exclusive)
      3: java.lang.Object.<init>: 8,13% (423 inclusive / 423 exclusive)
      3: java.util.ArrayList.<init>: 4,08% (212 inclusive / 0 exclusive)
        4: java.util.ArrayList.<init>: 4,08% (212 inclusive / 212 exclusive)
  1: parser.ParseData.<init>: 21,17% (1101 inclusive / 0 exclusive)
    2: parser.ParseErrors.<init>: 8,96% (466 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 4,77% (248 inclusive / 248 exclusive)
      3: java.util.ArrayList.<init>: 4,19% (218 inclusive / 218 exclusive)
    2: java.lang.Object.<init>: 8,13% (423 inclusive / 423 exclusive)
    2: java.util.ArrayList.<init>: 4,08% (212 inclusive / 0 exclusive)
      3: java.util.ArrayList.<init>: 4,08% (212 inclusive / 212 exclusive)
  1: java.util.ArrayList.<init>: 17,12% (890 inclusive / 432 exclusive)
    2: java.util.AbstractList.<init>: 8,81% (458 inclusive / 0 exclusive)
      3: java.util.AbstractCollection.<init>: 8,81% (458 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 8,81% (458 inclusive / 458 exclusive)
  1: java.util.AbstractCollection.<init>: 9,96% (518 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 9,96% (518 inclusive / 518 exclusive)
  1: sun.misc.Resource.getBytes: 9,67% (503 inclusive / 0 exclusive)
    2: java.util.zip.ZipFile$ZipFileInputStream.read: 8,71% (453 inclusive / 0 exclusive)
      3: java.util.zip.ZipFile.access$1400: 8,71% (453 inclusive / 0 exclusive)
        4: java.util.zip.ZipFile.read: 8,71% (453 inclusive / 453 exclusive)
    2: sun.misc.URLClassPath$FileLoader$1.getContentLength: 0,81% (42 inclusive / 0 exclusive)
      3: java.io.File.length: 0,81% (42 inclusive / 0 exclusive)
        4: java.io.WinNTFileSystem.getLength: 0,81% (42 inclusive / 42 exclusive)
    2: java.io.FileInputStream.close: 0,06% (3 inclusive / 0 exclusive)
      3: java.io.FileInputStream.close0: 0,06% (3 inclusive / 3 exclusive)
    2: java.util.Arrays.copyOf: 0,06% (3 inclusive / 3 exclusive)
    2: java.io.FileInputStream.read: 0,04% (2 inclusive / 0 exclusive)
      3: java.io.FileInputStream.readBytes: 0,04% (2 inclusive / 2 exclusive)
  1: parser.ParseErrors.<init>: 8,96% (466 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 4,77% (248 inclusive / 248 exclusive)
    2: java.util.ArrayList.<init>: 4,19% (218 inclusive / 218 exclusive)
  1: java.util.zip.ZipFile.access$1400: 8,85% (460 inclusive / 0 exclusive)
    2: java.util.zip.ZipFile.read: 8,85% (460 inclusive / 460 exclusive)
  1: java.util.zip.ZipFile.read: 8,85% (460 inclusive / 460 exclusive)
  1: java.util.zip.ZipFile$ZipFileInputStream.read: 8,85% (460 inclusive / 0 exclusive)
    2: java.util.zip.ZipFile.access$1400: 8,85% (460 inclusive / 0 exclusive)
      3: java.util.zip.ZipFile.read: 8,85% (460 inclusive / 460 exclusive)
  1: java.util.AbstractList.<init>: 8,83% (459 inclusive / 0 exclusive)
    2: java.util.AbstractCollection.<init>: 8,83% (459 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 8,83% (459 inclusive / 459 exclusive)
  1: parser.NestedMemo.get: 8,29% (431 inclusive / 0 exclusive)
    2: parser.Matcher.parse: 8,15% (424 inclusive / 1 exclusive)
      3: parser.ParseData.<init>: 8,13% (423 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 8,13% (423 inclusive / 423 exclusive)
    2: parser.NestedMemo.set: 0,13% (7 inclusive / 0 exclusive)
      3: java.util.HashMap.<init>: 0,13% (7 inclusive / 7 exclusive)
  1: java.io.WinNTFileSystem.getBooleanAttributes: 6,25% (325 inclusive / 325 exclusive)
  1: java.io.File.exists: 6,06% (315 inclusive / 0 exclusive)
    2: java.io.WinNTFileSystem.getBooleanAttributes: 6,06% (315 inclusive / 315 exclusive)
  1: sun.misc.URLClassPath.getResource: 5,92% (308 inclusive / 0 exclusive)
    2: sun.misc.URLClassPath$FileLoader.getResource: 5,73% (298 inclusive / 0 exclusive)
      3: java.io.File.exists: 5,6% (291 inclusive / 0 exclusive)
        4: java.io.WinNTFileSystem.getBooleanAttributes: 5,6% (291 inclusive / 291 exclusive)
      3: java.lang.String.replace: 0,06% (3 inclusive / 3 exclusive)
      3: sun.net.www.ParseUtil.encodePath: 0,04% (2 inclusive / 2 exclusive)
      3: java.io.File.<init>: 0,04% (2 inclusive / 0 exclusive)
        4: java.io.Win32FileSystem.resolve: 0,02% (1 inclusive / 1 exclusive)
        4: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
    2: sun.misc.URLClassPath.getLoader: 0,12% (6 inclusive / 1 exclusive)
      3: sun.misc.URLClassPath$JarLoader.getClassPath: 0,1% (5 inclusive / 0 exclusive)
        4: sun.misc.URLClassPath$JarLoader.parseExtensionsDependencies: 0,1% (5 inclusive / 5 exclusive)
    2: sun.misc.URLClassPath$JarLoader.getResource: 0,08% (4 inclusive / 0 exclusive)
      3: sun.misc.URLClassPath$JarLoader.checkResource: 0,08% (4 inclusive / 4 exclusive)
  1: sun.misc.URLClassPath$FileLoader.getResource: 5,81% (302 inclusive / 0 exclusive)
    2: java.io.File.exists: 5,62% (292 inclusive / 0 exclusive)
      3: java.io.WinNTFileSystem.getBooleanAttributes: 5,62% (292 inclusive / 292 exclusive)
    2: java.lang.String.replace: 0,08% (4 inclusive / 3 exclusive)
      3: java.lang.String.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
    2: sun.net.www.ParseUtil.encodePath: 0,06% (3 inclusive / 2 exclusive)
      3: java.lang.String.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
    2: java.io.File.<init>: 0,04% (2 inclusive / 0 exclusive)
      3: java.io.Win32FileSystem.resolve: 0,02% (1 inclusive / 1 exclusive)
      3: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
    2: java.net.URL.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: java.net.URL.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: java.io.FileInputStream.<init>: 5,46% (284 inclusive / 0 exclusive)
    2: java.io.FileInputStream.open: 5,42% (282 inclusive / 282 exclusive)
    2: java.io.FileDescriptor.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
    2: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: java.io.FileInputStream.open: 5,42% (282 inclusive / 282 exclusive)
  1: sun.misc.Resource.cachedInputStream: 4,46% (232 inclusive / 0 exclusive)
    2: sun.misc.URLClassPath$FileLoader$1.getInputStream: 4,38% (228 inclusive / 0 exclusive)
      3: java.io.FileInputStream.<init>: 4,38% (228 inclusive / 0 exclusive)
        4: java.io.FileInputStream.open: 4,37% (227 inclusive / 227 exclusive)
        4: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
    2: sun.misc.URLClassPath$JarLoader$2.getInputStream: 0,08% (4 inclusive / 0 exclusive)
      3: java.util.jar.JarFile.getInputStream: 0,08% (4 inclusive / 0 exclusive)
        4: java.util.jar.JarFile.initializeVerifier: 0,08% (4 inclusive / 4 exclusive)
  1: sun.misc.URLClassPath$FileLoader$1.getInputStream: 4,4% (229 inclusive / 0 exclusive)
    2: java.io.FileInputStream.<init>: 4,4% (229 inclusive / 0 exclusive)
      3: java.io.FileInputStream.open: 4,37% (227 inclusive / 227 exclusive)
      3: java.io.FileDescriptor.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
      3: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: java.lang.String.<init>: 4,33% (225 inclusive / 3 exclusive)
    2: java.lang.Object.<init>: 3,38% (176 inclusive / 176 exclusive)
    2: java.util.Arrays.copyOfRange: 0,62% (32 inclusive / 32 exclusive)
    2: java.lang.StringCoding.decode: 0,25% (13 inclusive / 0 exclusive)
      3: java.lang.StringCoding$StringDecoder.decode: 0,25% (13 inclusive / 13 exclusive)
    2: java.util.Arrays.copyOf: 0,02% (1 inclusive / 1 exclusive)
  1: java.lang.ClassLoader.loadClass: 4,19% (218 inclusive / 0 exclusive)
    2: java.lang.ClassLoader.findBootstrapClassOrNull: 4,04% (210 inclusive / 0 exclusive)
      3: java.lang.ClassLoader.findBootstrapClass: 4,04% (210 inclusive / 210 exclusive)
    2: java.net.URLClassLoader.findClass: 0,08% (4 inclusive / 0 exclusive)
      3: java.net.URLClassLoader$1.<init>: 0,04% (2 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,04% (2 inclusive / 2 exclusive)
      3: java.security.AccessController.doPrivileged: 0,04% (2 inclusive / 2 exclusive)
    2: java.lang.ClassLoader.findLoadedClass: 0,04% (2 inclusive / 0 exclusive)
      3: java.lang.ClassLoader.findLoadedClass0: 0,04% (2 inclusive / 2 exclusive)
    2: java.lang.ClassLoader.getClassLoadingLock: 0,04% (2 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,04% (2 inclusive / 2 exclusive)
  1: util.apache.CharSequenceTranslator.translate: 4,1% (213 inclusive / 0 exclusive)
    2: java.lang.Character.toChars: 4% (208 inclusive / 208 exclusive)
    2: java.io.StringWriter.<init>: 0,1% (5 inclusive / 0 exclusive)
      3: java.io.Writer.<init>: 0,06% (3 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,06% (3 inclusive / 3 exclusive)
      3: java.lang.StringBuffer.<init>: 0,04% (2 inclusive / 0 exclusive)
        4: java.lang.AbstractStringBuilder.<init>: 0,04% (2 inclusive / 2 exclusive)
  1: java.lang.ClassLoader.findBootstrapClass: 4,04% (210 inclusive / 210 exclusive)
  1: java.lang.ClassLoader.findBootstrapClassOrNull: 4,04% (210 inclusive / 0 exclusive)
    2: java.lang.ClassLoader.findBootstrapClass: 4,04% (210 inclusive / 210 exclusive)
  1: java.lang.Character.toChars: 4% (208 inclusive / 208 exclusive)
  1: source.SourceString.<init>: 3,92% (204 inclusive / 0 exclusive)
    2: util.apache.CharSequenceTranslator.translate: 3,87% (201 inclusive / 0 exclusive)
      3: util.apache.CharSequenceTranslator.translate: 3,87% (201 inclusive / 0 exclusive)
        4: java.lang.Character.toChars: 3,87% (201 inclusive / 201 exclusive)
    2: java.lang.Object.<init>: 0,06% (3 inclusive / 3 exclusive)
  1: java.lang.Integer.<init>: 2,81% (146 inclusive / 0 exclusive)
    2: java.lang.Number.<init>: 2,81% (146 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 2,81% (146 inclusive / 146 exclusive)
  1: java.lang.Number.<init>: 2,81% (146 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 2,81% (146 inclusive / 146 exclusive)
  1: java.lang.Integer.valueOf: 2,79% (145 inclusive / 0 exclusive)
    2: java.lang.Integer.<init>: 2,79% (145 inclusive / 0 exclusive)
      3: java.lang.Number.<init>: 2,79% (145 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 2,79% (145 inclusive / 145 exclusive)
  1: java.util.AbstractList.iterator: 2,73% (142 inclusive / 1 exclusive)
    2: java.util.AbstractList$Itr.<init>: 2,71% (141 inclusive / 0 exclusive)
      3: java.util.AbstractList$Itr.<init>: 2,71% (141 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 2,71% (141 inclusive / 141 exclusive)
  1: java.util.AbstractList$Itr.<init>: 2,71% (141 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 2,71% (141 inclusive / 141 exclusive)
  1: java.util.HashMap.put: 2,44% (127 inclusive / 0 exclusive)
    2: java.util.HashMap.addEntry: 2,42% (126 inclusive / 0 exclusive)
      3: java.util.HashMap$Entry.<init>: 2,37% (123 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 2,37% (123 inclusive / 123 exclusive)
      3: java.util.HashMap.resize: 0,06% (3 inclusive / 3 exclusive)
    2: java.lang.Object.hashCode: 0,02% (1 inclusive / 1 exclusive)
  1: java.util.HashMap.addEntry: 2,42% (126 inclusive / 0 exclusive)
    2: java.util.HashMap$Entry.<init>: 2,37% (123 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 2,37% (123 inclusive / 123 exclusive)
    2: java.util.HashMap.resize: 0,06% (3 inclusive / 3 exclusive)
  1: java.util.HashMap$Entry.<init>: 2,37% (123 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 2,37% (123 inclusive / 123 exclusive)
  1: java.lang.String.substring: 2,27% (118 inclusive / 0 exclusive)
    2: java.lang.String.<init>: 2,27% (118 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 2,27% (118 inclusive / 118 exclusive)
  1: java.util.zip.ZipFile.getEntry: 1,83% (95 inclusive / 87 exclusive)
    2: java.util.zip.ZipFile.getZipEntry: 0,08% (4 inclusive / 3 exclusive)
      3: java.util.zip.ZipFile.getEntryFlag: 0,02% (1 inclusive / 1 exclusive)
    2: java.util.zip.ZipCoder.getBytes: 0,08% (4 inclusive / 2 exclusive)
      3: java.util.Arrays.copyOf: 0,02% (1 inclusive / 1 exclusive)
      3: java.lang.String.toCharArray: 0,02% (1 inclusive / 1 exclusive)
  1: java.util.jar.JarFile.getEntry: 1,83% (95 inclusive / 0 exclusive)
    2: java.util.zip.ZipFile.getEntry: 1,83% (95 inclusive / 0 exclusive)
      3: java.util.zip.ZipFile.getEntry: 1,67% (87 inclusive / 87 exclusive)
      3: java.util.zip.ZipFile.getZipEntry: 0,08% (4 inclusive / 3 exclusive)
        4: java.util.zip.ZipFile.getEntryFlag: 0,02% (1 inclusive / 1 exclusive)
      3: java.util.zip.ZipCoder.getBytes: 0,08% (4 inclusive / 2 exclusive)
        4: java.util.Arrays.copyOf: 0,02% (1 inclusive / 1 exclusive)
        4: java.lang.String.toCharArray: 0,02% (1 inclusive / 1 exclusive)
  1: java.util.jar.JarFile.getJarEntry: 1,77% (92 inclusive / 0 exclusive)
    2: java.util.jar.JarFile.getEntry: 1,77% (92 inclusive / 0 exclusive)
      3: java.util.zip.ZipFile.getEntry: 1,77% (92 inclusive / 0 exclusive)
        4: java.util.zip.ZipFile.getEntry: 1,67% (87 inclusive / 87 exclusive)
        4: java.util.zip.ZipFile.getZipEntry: 0,06% (3 inclusive / 3 exclusive)
        4: java.util.zip.ZipCoder.getBytes: 0,04% (2 inclusive / 2 exclusive)
  1: java.util.ArrayList.iterator: 1,62% (84 inclusive / 2 exclusive)
    2: java.util.ArrayList$Itr.<init>: 1,58% (82 inclusive / 0 exclusive)
      3: java.util.ArrayList$Itr.<init>: 1,58% (82 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 1,58% (82 inclusive / 82 exclusive)
  1: java.util.ArrayList$Itr.<init>: 1,58% (82 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 1,58% (82 inclusive / 82 exclusive)
  1: java.util.zip.ZipFile.<init>: 1,56% (81 inclusive / 20 exclusive)
    2: java.util.zip.ZipFile.open: 1,17% (61 inclusive / 61 exclusive)
  1: java.io.RandomAccessFile.read: 1,56% (81 inclusive / 0 exclusive)
    2: java.io.RandomAccessFile.readBytes: 1,56% (81 inclusive / 81 exclusive)
  1: java.io.RandomAccessFile.readFully: 1,56% (81 inclusive / 0 exclusive)
    2: java.io.RandomAccessFile.read: 1,56% (81 inclusive / 0 exclusive)
      3: java.io.RandomAccessFile.readBytes: 1,56% (81 inclusive / 81 exclusive)
  1: java.util.jar.JarFile.<init>: 1,56% (81 inclusive / 0 exclusive)
    2: java.util.zip.ZipFile.<init>: 1,56% (81 inclusive / 4 exclusive)
      3: java.util.zip.ZipFile.<init>: 1,48% (77 inclusive / 16 exclusive)
        4: java.util.zip.ZipFile.open: 1,17% (61 inclusive / 61 exclusive)
  1: java.io.RandomAccessFile.readBytes: 1,56% (81 inclusive / 81 exclusive)
  1: parser.ParseData.succeed: 1,54% (80 inclusive / 0 exclusive)
    2: parser.Match.<init>: 1,54% (80 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 1,54% (80 inclusive / 80 exclusive)
  1: parser.Match.<init>: 1,54% (80 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 1,54% (80 inclusive / 80 exclusive)
  1: parser.Matcher.succeed: 1,54% (80 inclusive / 0 exclusive)
    2: parser.ParseData.succeed: 1,54% (80 inclusive / 0 exclusive)
      3: parser.Match.<init>: 1,54% (80 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 1,54% (80 inclusive / 80 exclusive)
  1: java.util.Collections$UnmodifiableRandomAccessList.<init>: 1,33% (69 inclusive / 0 exclusive)
    2: java.util.Collections$UnmodifiableList.<init>: 1,33% (69 inclusive / 0 exclusive)
      3: java.util.Collections$UnmodifiableCollection.<init>: 1,33% (69 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 1,33% (69 inclusive / 69 exclusive)
  1: java.util.Collections$UnmodifiableList.<init>: 1,33% (69 inclusive / 0 exclusive)
    2: java.util.Collections$UnmodifiableCollection.<init>: 1,33% (69 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 1,33% (69 inclusive / 69 exclusive)
  1: java.util.Collections$UnmodifiableCollection.<init>: 1,33% (69 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 1,33% (69 inclusive / 69 exclusive)
  1: java.util.zip.ZipFile.open: 1,17% (61 inclusive / 61 exclusive)
  1: source.SourceFileText.at: 1,15% (60 inclusive / 0 exclusive)
    2: java.lang.String.substring: 1,15% (60 inclusive / 0 exclusive)
      3: java.lang.String.<init>: 1,15% (60 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 1,15% (60 inclusive / 60 exclusive)
  1: trees.MatchIterator$NodeState.<init>: 1,1% (57 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 1,1% (57 inclusive / 57 exclusive)
  1: trees.MatchIterator.next: 1,1% (57 inclusive / 0 exclusive)
    2: trees.MatchIterator.forward: 1,1% (57 inclusive / 0 exclusive)
      3: trees.MatchIterator$NodeState.<init>: 1,1% (57 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 1,1% (57 inclusive / 57 exclusive)
  1: trees.MatchIterator.forward: 1,1% (57 inclusive / 0 exclusive)
    2: trees.MatchIterator$NodeState.<init>: 1,1% (57 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 1,1% (57 inclusive / 57 exclusive)
  1: source.SourceFileText.<init>: 1,06% (55 inclusive / 0 exclusive)
    2: java.io.FileInputStream.getChannel: 0,63% (33 inclusive / 14 exclusive)
      3: sun.nio.ch.FileChannelImpl.<clinit>: 0,17% (9 inclusive / 3 exclusive)
        4: sun.nio.ch.Util.<clinit>: 0,08% (4 inclusive / 4 exclusive)
        4: sun.nio.ch.Util.load: 0,04% (2 inclusive / 2 exclusive)
      3: sun.nio.ch.FileChannelImpl.open: 0,15% (8 inclusive / 0 exclusive)
        4: sun.nio.ch.FileChannelImpl.<init>: 0,15% (8 inclusive / 8 exclusive)
      3: java.nio.channels.FileChannel.<clinit>: 0,04% (2 inclusive / 2 exclusive)
    2: java.io.FileInputStream.<init>: 0,23% (12 inclusive / 0 exclusive)
      3: java.io.FileInputStream.open: 0,23% (12 inclusive / 12 exclusive)
    2: util.apache.CharSequenceTranslator.translate: 0,13% (7 inclusive / 0 exclusive)
      3: util.apache.CharSequenceTranslator.translate: 0,13% (7 inclusive / 0 exclusive)
        4: java.lang.Character.toChars: 0,13% (7 inclusive / 7 exclusive)
    2: sun.nio.ch.FileChannelImpl.map: 0,04% (2 inclusive / 1 exclusive)
      3: sun.nio.ch.Util.newMappedByteBufferR: 0,02% (1 inclusive / 0 exclusive)
        4: sun.nio.ch.Util.initDBBRConstructor: 0,02% (1 inclusive / 1 exclusive)
    2: sun.nio.ch.FileChannelImpl.size: 0,02% (1 inclusive / 0 exclusive)
      3: java.nio.channels.spi.AbstractInterruptibleChannel.begin: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.file.RelativePath$RelativeFile.<init>: 1,04% (54 inclusive / 0 exclusive)
    2: java.lang.StringBuilder.toString: 0,46% (24 inclusive / 0 exclusive)
      3: java.lang.String.<init>: 0,46% (24 inclusive / 0 exclusive)
        4: java.util.Arrays.copyOfRange: 0,29% (15 inclusive / 15 exclusive)
        4: java.lang.Object.<init>: 0,17% (9 inclusive / 9 exclusive)
    2: java.lang.StringBuilder.<init>: 0,37% (19 inclusive / 0 exclusive)
      3: java.lang.AbstractStringBuilder.<init>: 0,37% (19 inclusive / 10 exclusive)
        4: java.lang.Object.<init>: 0,17% (9 inclusive / 9 exclusive)
    2: com.sun.tools.javac.file.RelativePath.<init>: 0,21% (11 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,21% (11 inclusive / 11 exclusive)
  1: com.sun.tools.javac.util.List.<init>: 1,04% (54 inclusive / 0 exclusive)
    2: java.util.AbstractCollection.<init>: 1,04% (54 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 1,04% (54 inclusive / 54 exclusive)
  1: java.lang.StringBuilder.toString: 1,02% (53 inclusive / 0 exclusive)
    2: java.lang.String.<init>: 1,02% (53 inclusive / 0 exclusive)
      3: java.util.Arrays.copyOfRange: 0,56% (29 inclusive / 29 exclusive)
      3: java.lang.Object.<init>: 0,46% (24 inclusive / 24 exclusive)
  1: java.util.Arrays.copyOf: 0,88% (46 inclusive / 45 exclusive)
    2: java.lang.Class.getComponentType: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.readEntry: 0,83% (43 inclusive / 0 exclusive)
    2: java.lang.String.<init>: 0,56% (29 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,31% (16 inclusive / 16 exclusive)
      3: java.lang.StringCoding.decode: 0,25% (13 inclusive / 0 exclusive)
        4: java.lang.StringCoding$StringDecoder.decode: 0,25% (13 inclusive / 13 exclusive)
    2: com.sun.tools.javac.file.ZipFileIndex$Entry.<init>: 0,23% (12 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,23% (12 inclusive / 12 exclusive)
    2: com.sun.tools.javac.file.ZipFileIndex$DirectoryEntry.<init>: 0,04% (2 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,04% (2 inclusive / 2 exclusive)
  1: sun.misc.URLClassPath$FileLoader$1.getContentLength: 0,81% (42 inclusive / 0 exclusive)
    2: java.io.File.length: 0,81% (42 inclusive / 0 exclusive)
      3: java.io.WinNTFileSystem.getLength: 0,81% (42 inclusive / 42 exclusive)
  1: java.io.File.length: 0,81% (42 inclusive / 0 exclusive)
    2: java.io.WinNTFileSystem.getLength: 0,81% (42 inclusive / 42 exclusive)
  1: java.io.WinNTFileSystem.getLength: 0,81% (42 inclusive / 42 exclusive)
  1: util.ArrayIterator.<init>: 0,79% (41 inclusive / 0 exclusive)
    2: util.AbstractBiIterator.<init>: 0,79% (41 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,79% (41 inclusive / 41 exclusive)
  1: com.sun.tools.javac.jvm.ClassReader.fillIn: 0,79% (41 inclusive / 0 exclusive)
    2: com.sun.tools.javac.file.RegularFileObject.openInputStream: 0,79% (41 inclusive / 0 exclusive)
      3: java.io.FileInputStream.<init>: 0,79% (41 inclusive / 0 exclusive)
        4: java.io.FileInputStream.open: 0,79% (41 inclusive / 41 exclusive)
  1: util.AbstractBiIterator.<init>: 0,79% (41 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,79% (41 inclusive / 41 exclusive)
  1: com.sun.tools.javac.util.List.reverse: 0,79% (41 inclusive / 0 exclusive)
    2: com.sun.tools.javac.util.List.<init>: 0,79% (41 inclusive / 0 exclusive)
      3: java.util.AbstractCollection.<init>: 0,79% (41 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,79% (41 inclusive / 41 exclusive)
  1: com.sun.tools.javac.file.RegularFileObject.openInputStream: 0,79% (41 inclusive / 0 exclusive)
    2: java.io.FileInputStream.<init>: 0,79% (41 inclusive / 0 exclusive)
      3: java.io.FileInputStream.open: 0,79% (41 inclusive / 41 exclusive)
  1: java.lang.AbstractStringBuilder.<init>: 0,73% (38 inclusive / 20 exclusive)
    2: java.lang.Object.<init>: 0,35% (18 inclusive / 18 exclusive)
  1: com.sun.tools.javac.file.JavacFileManager.listDirectory: 0,71% (37 inclusive / 1 exclusive)
    2: java.io.File.listFiles: 0,54% (28 inclusive / 0 exclusive)
      3: java.io.File.list: 0,48% (25 inclusive / 0 exclusive)
        4: java.io.WinNTFileSystem.list: 0,48% (25 inclusive / 25 exclusive)
      3: java.io.File.<init>: 0,06% (3 inclusive / 0 exclusive)
        4: java.io.Win32FileSystem.resolve: 0,06% (3 inclusive / 3 exclusive)
    2: java.io.File.isDirectory: 0,13% (7 inclusive / 0 exclusive)
      3: java.io.WinNTFileSystem.getBooleanAttributes: 0,13% (7 inclusive / 7 exclusive)
    2: java.io.File.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: source.SourceString.at: 0,69% (36 inclusive / 0 exclusive)
    2: java.lang.String.substring: 0,69% (36 inclusive / 0 exclusive)
      3: java.lang.String.<init>: 0,69% (36 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,69% (36 inclusive / 36 exclusive)
  1: java.io.FileInputStream.getChannel: 0,63% (33 inclusive / 14 exclusive)
    2: sun.nio.ch.FileChannelImpl.<clinit>: 0,17% (9 inclusive / 3 exclusive)
      3: sun.nio.ch.Util.<clinit>: 0,08% (4 inclusive / 4 exclusive)
      3: sun.nio.ch.Util.load: 0,04% (2 inclusive / 2 exclusive)
    2: sun.nio.ch.FileChannelImpl.open: 0,15% (8 inclusive / 0 exclusive)
      3: sun.nio.ch.FileChannelImpl.<init>: 0,15% (8 inclusive / 8 exclusive)
    2: java.nio.channels.FileChannel.<clinit>: 0,04% (2 inclusive / 2 exclusive)
  1: java.net.URLClassLoader.defineClass: 0,62% (32 inclusive / 1 exclusive)
    2: java.security.SecureClassLoader.defineClass: 0,27% (14 inclusive / 0 exclusive)
      3: java.lang.ClassLoader.defineClass: 0,27% (14 inclusive / 0 exclusive)
        4: java.lang.ClassLoader.defineClass1: 0,27% (14 inclusive / 14 exclusive)
    2: sun.misc.Resource.getBytes: 0,15% (8 inclusive / 0 exclusive)
      3: java.io.FileInputStream.close: 0,06% (3 inclusive / 0 exclusive)
        4: java.io.FileInputStream.close0: 0,06% (3 inclusive / 3 exclusive)
      3: java.util.Arrays.copyOf: 0,06% (3 inclusive / 3 exclusive)
      3: java.io.FileInputStream.read: 0,04% (2 inclusive / 0 exclusive)
        4: java.io.FileInputStream.readBytes: 0,04% (2 inclusive / 2 exclusive)
    2: java.net.URLClassLoader.getAndVerifyPackage: 0,08% (4 inclusive / 0 exclusive)
      3: java.lang.ClassLoader.getPackage: 0,04% (2 inclusive / 0 exclusive)
        4: java.lang.ClassLoader.getPackage: 0,04% (2 inclusive / 2 exclusive)
      3: java.net.URLClassLoader.isSealed: 0,04% (2 inclusive / 0 exclusive)
        4: java.lang.String.replace: 0,04% (2 inclusive / 2 exclusive)
    2: sun.misc.URLClassPath$JarLoader$2.getManifest: 0,06% (3 inclusive / 0 exclusive)
      3: java.util.jar.JarFile.getManifest: 0,06% (3 inclusive / 0 exclusive)
        4: java.util.jar.JarFile.getManifestFromReference: 0,06% (3 inclusive / 3 exclusive)
    2: java.lang.String.substring: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.String.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
    2: sun.misc.PerfCounter.<clinit>: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.buildIndex: 0,62% (32 inclusive / 1 exclusive)
    2: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.readEntry: 0,58% (30 inclusive / 0 exclusive)
      3: java.lang.String.<init>: 0,31% (16 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,31% (16 inclusive / 16 exclusive)
      3: com.sun.tools.javac.file.ZipFileIndex$Entry.<init>: 0,23% (12 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,23% (12 inclusive / 12 exclusive)
      3: com.sun.tools.javac.file.ZipFileIndex$DirectoryEntry.<init>: 0,04% (2 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,04% (2 inclusive / 2 exclusive)
    2: java.util.Arrays.sort: 0,02% (1 inclusive / 0 exclusive)
      3: java.util.Arrays$LegacyMergeSort.<clinit>: 0,02% (1 inclusive / 1 exclusive)
  1: java.util.Arrays.copyOfRange: 0,62% (32 inclusive / 32 exclusive)
  1: java.lang.StringBuilder.<init>: 0,6% (31 inclusive / 0 exclusive)
    2: java.lang.AbstractStringBuilder.<init>: 0,6% (31 inclusive / 15 exclusive)
      3: java.lang.Object.<init>: 0,31% (16 inclusive / 16 exclusive)
  1: java.io.File.listFiles: 0,54% (28 inclusive / 0 exclusive)
    2: java.io.File.list: 0,48% (25 inclusive / 0 exclusive)
      3: java.io.WinNTFileSystem.list: 0,48% (25 inclusive / 25 exclusive)
    2: java.io.File.<init>: 0,06% (3 inclusive / 0 exclusive)
      3: java.io.Win32FileSystem.resolve: 0,06% (3 inclusive / 3 exclusive)
  1: sun.misc.URLClassPath$JarLoader.getJarFile: 0,52% (27 inclusive / 9 exclusive)
    2: sun.misc.FileURLMapper.exists: 0,27% (14 inclusive / 0 exclusive)
      3: java.io.File.exists: 0,27% (14 inclusive / 0 exclusive)
        4: java.io.WinNTFileSystem.getBooleanAttributes: 0,27% (14 inclusive / 14 exclusive)
    2: java.util.jar.JarFile.<init>: 0,08% (4 inclusive / 0 exclusive)
      3: java.util.jar.JarFile.<init>: 0,08% (4 inclusive / 0 exclusive)
        4: java.util.zip.ZipFile.<init>: 0,08% (4 inclusive / 4 exclusive)
  1: java.lang.AbstractStringBuilder.append: 0,52% (27 inclusive / 0 exclusive)
    2: java.lang.AbstractStringBuilder.ensureCapacityInternal: 0,52% (27 inclusive / 0 exclusive)
      3: java.lang.AbstractStringBuilder.expandCapacity: 0,52% (27 inclusive / 0 exclusive)
        4: java.util.Arrays.copyOf: 0,52% (27 inclusive / 27 exclusive)
  1: java.lang.AbstractStringBuilder.expandCapacity: 0,52% (27 inclusive / 0 exclusive)
    2: java.util.Arrays.copyOf: 0,52% (27 inclusive / 27 exclusive)
  1: java.lang.AbstractStringBuilder.ensureCapacityInternal: 0,52% (27 inclusive / 0 exclusive)
    2: java.lang.AbstractStringBuilder.expandCapacity: 0,52% (27 inclusive / 0 exclusive)
      3: java.util.Arrays.copyOf: 0,52% (27 inclusive / 27 exclusive)
  1: java.lang.String.replace: 0,52% (27 inclusive / 22 exclusive)
    2: java.lang.String.<init>: 0,1% (5 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,1% (5 inclusive / 5 exclusive)
  1: com.sun.tools.javac.file.ZipFileIndex.openFile: 0,5% (26 inclusive / 0 exclusive)
    2: java.io.RandomAccessFile.<init>: 0,5% (26 inclusive / 0 exclusive)
      3: java.io.RandomAccessFile.open: 0,5% (26 inclusive / 26 exclusive)
  1: java.io.RandomAccessFile.<init>: 0,5% (26 inclusive / 0 exclusive)
    2: java.io.RandomAccessFile.open: 0,5% (26 inclusive / 26 exclusive)
  1: java.io.RandomAccessFile.open: 0,5% (26 inclusive / 26 exclusive)
  1: java.util.regex.Pattern.sequence: 0,48% (25 inclusive / 12 exclusive)
    2: java.util.regex.Pattern.family: 0,19% (10 inclusive / 2 exclusive)
      3: java.util.regex.Pattern.charPropertyNodeFor: 0,15% (8 inclusive / 1 exclusive)
        4: java.util.regex.Pattern$CharPropertyNames.<clinit>: 0,13% (7 inclusive / 7 exclusive)
    2: java.util.regex.Pattern.atom: 0,04% (2 inclusive / 0 exclusive)
      3: java.util.regex.Pattern.newSlice: 0,04% (2 inclusive / 2 exclusive)
    2: java.util.regex.Pattern.group0: 0,02% (1 inclusive / 1 exclusive)
  1: java.io.File.list: 0,48% (25 inclusive / 0 exclusive)
    2: java.io.WinNTFileSystem.list: 0,48% (25 inclusive / 25 exclusive)
  1: java.io.WinNTFileSystem.list: 0,48% (25 inclusive / 25 exclusive)
  1: parser.NestedMemo.set: 0,46% (24 inclusive / 0 exclusive)
    2: java.util.HashMap.<init>: 0,4% (21 inclusive / 7 exclusive)
      3: java.util.AbstractMap.<init>: 0,27% (14 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,27% (14 inclusive / 14 exclusive)
    2: java.util.HashMap.put: 0,06% (3 inclusive / 0 exclusive)
      3: java.util.HashMap.addEntry: 0,06% (3 inclusive / 0 exclusive)
        4: java.util.HashMap.resize: 0,06% (3 inclusive / 3 exclusive)
  1: java.util.HashMap.<init>: 0,46% (24 inclusive / 8 exclusive)
    2: java.util.AbstractMap.<init>: 0,31% (16 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,31% (16 inclusive / 16 exclusive)
  1: com.sun.tools.javac.file.ZipFileIndex.read: 0,42% (22 inclusive / 0 exclusive)
    2: com.sun.tools.javac.file.ZipFileIndex.openFile: 0,4% (21 inclusive / 0 exclusive)
      3: java.io.RandomAccessFile.<init>: 0,4% (21 inclusive / 0 exclusive)
        4: java.io.RandomAccessFile.open: 0,4% (21 inclusive / 21 exclusive)
    2: com.sun.tools.javac.file.ZipFileIndex.closeFile: 0,02% (1 inclusive / 0 exclusive)
      3: java.io.RandomAccessFile.close: 0,02% (1 inclusive / 0 exclusive)
        4: java.io.RandomAccessFile.close0: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.file.RelativePath.<init>: 0,38% (20 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,38% (20 inclusive / 20 exclusive)
  1: java.util.jar.JarFile.hasClassPathAttribute: 0,37% (19 inclusive / 8 exclusive)
    2: java.util.zip.ZipFile.getInputStream: 0,21% (11 inclusive / 6 exclusive)
      3: java.util.zip.ZipFile.getInflater: 0,1% (5 inclusive / 5 exclusive)
  1: java.util.regex.Pattern.compile: 0,37% (19 inclusive / 6 exclusive)
    2: java.util.regex.Pattern.expr: 0,25% (13 inclusive / 0 exclusive)
      3: java.util.regex.Pattern.sequence: 0,25% (13 inclusive / 12 exclusive)
        4: java.util.regex.Pattern.group0: 0,02% (1 inclusive / 1 exclusive)
  1: java.util.jar.JavaUtilJarAccessImpl.jarFileHasClassPathAttribute: 0,37% (19 inclusive / 0 exclusive)
    2: java.util.jar.JarFile.hasClassPathAttribute: 0,37% (19 inclusive / 8 exclusive)
      3: java.util.zip.ZipFile.getInputStream: 0,21% (11 inclusive / 6 exclusive)
        4: java.util.zip.ZipFile.getInflater: 0,1% (5 inclusive / 5 exclusive)
  1: sun.misc.URLClassPath$JarLoader.getClassPath: 0,37% (19 inclusive / 0 exclusive)
    2: java.util.jar.JavaUtilJarAccessImpl.jarFileHasClassPathAttribute: 0,27% (14 inclusive / 0 exclusive)
      3: java.util.jar.JarFile.hasClassPathAttribute: 0,27% (14 inclusive / 8 exclusive)
        4: java.util.zip.ZipFile.getInputStream: 0,12% (6 inclusive / 6 exclusive)
    2: sun.misc.URLClassPath$JarLoader.parseExtensionsDependencies: 0,1% (5 inclusive / 5 exclusive)
  1: java.util.regex.Pattern.<init>: 0,35% (18 inclusive / 0 exclusive)
    2: java.util.regex.Pattern.compile: 0,35% (18 inclusive / 6 exclusive)
      3: java.util.regex.Pattern.expr: 0,23% (12 inclusive / 0 exclusive)
        4: java.util.regex.Pattern.sequence: 0,23% (12 inclusive / 12 exclusive)
  1: java.util.regex.Pattern.expr: 0,35% (18 inclusive / 0 exclusive)
    2: java.util.regex.Pattern.sequence: 0,35% (18 inclusive / 12 exclusive)
      3: java.util.regex.Pattern.family: 0,06% (3 inclusive / 2 exclusive)
        4: java.util.regex.Pattern.charPropertyNodeFor: 0,02% (1 inclusive / 1 exclusive)
      3: java.util.regex.Pattern.atom: 0,04% (2 inclusive / 0 exclusive)
        4: java.util.regex.Pattern.newSlice: 0,04% (2 inclusive / 2 exclusive)
      3: java.util.regex.Pattern.group0: 0,02% (1 inclusive / 1 exclusive)
  1: java.util.jar.JarFile.getManifestFromReference: 0,35% (18 inclusive / 3 exclusive)
    2: java.util.jar.JarVerifier.<init>: 0,23% (12 inclusive / 12 exclusive)
    2: java.util.jar.Manifest.<init>: 0,06% (3 inclusive / 1 exclusive)
      3: java.util.jar.Manifest.read: 0,04% (2 inclusive / 2 exclusive)
  1: driver.SourceFile.<init>: 0,35% (18 inclusive / 0 exclusive)
    2: source.SourceFileText.<init>: 0,29% (15 inclusive / 0 exclusive)
      3: source.SourceFileText.<init>: 0,29% (15 inclusive / 0 exclusive)
        4: java.io.FileInputStream.getChannel: 0,27% (14 inclusive / 14 exclusive)
        4: sun.nio.ch.FileChannelImpl.map: 0,02% (1 inclusive / 1 exclusive)
    2: driver.Requires.imports: 0,06% (3 inclusive / 0 exclusive)
      3: java.util.HashSet.iterator: 0,06% (3 inclusive / 0 exclusive)
        4: java.util.HashMap.keySet: 0,06% (3 inclusive / 3 exclusive)
  1: driver.EntryPoint.getPaths: 0,35% (18 inclusive / 0 exclusive)
    2: util.FileUtils.glob: 0,31% (16 inclusive / 0 exclusive)
      3: sun.nio.fs.WindowsFileSystem.getPathMatcher: 0,15% (8 inclusive / 6 exclusive)
        4: java.util.regex.Pattern.<clinit>: 0,04% (2 inclusive / 2 exclusive)
      3: java.nio.file.Files.walkFileTree: 0,15% (8 inclusive / 4 exclusive)
        4: java.util.EnumSet.noneOf: 0,08% (4 inclusive / 4 exclusive)
    2: java.util.ArrayList.iterator: 0,04% (2 inclusive / 2 exclusive)
  1: java.util.jar.JarFile.getManifest: 0,35% (18 inclusive / 0 exclusive)
    2: java.util.jar.JarFile.getManifestFromReference: 0,35% (18 inclusive / 3 exclusive)
      3: java.util.jar.JarVerifier.<init>: 0,23% (12 inclusive / 12 exclusive)
      3: java.util.jar.Manifest.<init>: 0,06% (3 inclusive / 1 exclusive)
        4: java.util.jar.Manifest.read: 0,04% (2 inclusive / 2 exclusive)
  1: sun.nio.cs.FastCharsetProvider.lookup: 0,33% (17 inclusive / 6 exclusive)
    2: java.lang.Class.forName: 0,21% (11 inclusive / 0 exclusive)
      3: java.lang.Class.forName0: 0,21% (11 inclusive / 10 exclusive)
        4: sun.nio.cs.MS1252.<clinit>: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.file.ZipFileIndexArchive$ZipFileIndexFileObject.inferBinaryName: 0,33% (17 inclusive / 0 exclusive)
    2: java.lang.String.replace: 0,33% (17 inclusive / 13 exclusive)
      3: java.lang.String.<init>: 0,08% (4 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,08% (4 inclusive / 4 exclusive)
  1: util.FileUtils.glob: 0,33% (17 inclusive / 0 exclusive)
    2: java.nio.file.Files.walkFileTree: 0,17% (9 inclusive / 4 exclusive)
      3: java.util.EnumSet.noneOf: 0,08% (4 inclusive / 4 exclusive)
      3: java.nio.file.Files.walkFileTree: 0,02% (1 inclusive / 0 exclusive)
        4: java.nio.file.FileTreeWalker.<init>: 0,02% (1 inclusive / 1 exclusive)
    2: sun.nio.fs.WindowsFileSystem.getPathMatcher: 0,15% (8 inclusive / 6 exclusive)
      3: java.util.regex.Pattern.<clinit>: 0,04% (2 inclusive / 2 exclusive)
  1: java.net.URLClassLoader$1.run: 0,33% (17 inclusive / 0 exclusive)
    2: sun.misc.URLClassPath.getResource: 0,19% (10 inclusive / 0 exclusive)
      3: sun.misc.URLClassPath$FileLoader.getResource: 0,1% (5 inclusive / 0 exclusive)
        4: java.lang.String.replace: 0,06% (3 inclusive / 3 exclusive)
        4: sun.net.www.ParseUtil.encodePath: 0,04% (2 inclusive / 2 exclusive)
      3: sun.misc.URLClassPath$JarLoader.getResource: 0,08% (4 inclusive / 0 exclusive)
        4: sun.misc.URLClassPath$JarLoader.checkResource: 0,08% (4 inclusive / 4 exclusive)
      3: sun.misc.URLClassPath.getLoader: 0,02% (1 inclusive / 1 exclusive)
    2: java.lang.String.concat: 0,06% (3 inclusive / 0 exclusive)
      3: java.lang.String.<init>: 0,06% (3 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,06% (3 inclusive / 3 exclusive)
    2: java.lang.String.replace: 0,04% (2 inclusive / 2 exclusive)
    2: java.net.URLClassLoader.access$100: 0,04% (2 inclusive / 0 exclusive)
      3: java.net.URLClassLoader.defineClass: 0,04% (2 inclusive / 1 exclusive)
        4: sun.misc.PerfCounter.<clinit>: 0,02% (1 inclusive / 1 exclusive)
  1: java.io.FileOutputStream.<init>: 0,31% (16 inclusive / 0 exclusive)
    2: java.io.FileOutputStream.open: 0,31% (16 inclusive / 16 exclusive)
  1: java.io.FileOutputStream.open: 0,31% (16 inclusive / 16 exclusive)
  1: sun.misc.URLClassPath$JarLoader$2.getManifest: 0,31% (16 inclusive / 0 exclusive)
    2: java.util.jar.JarFile.getManifest: 0,31% (16 inclusive / 0 exclusive)
      3: java.util.jar.JarFile.getManifestFromReference: 0,31% (16 inclusive / 3 exclusive)
        4: java.util.jar.JarVerifier.<init>: 0,23% (12 inclusive / 12 exclusive)
        4: java.util.jar.Manifest.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: compiler.java.CompiledClass.dump: 0,31% (16 inclusive / 1 exclusive)
    2: util.FileUtils.create: 0,15% (8 inclusive / 0 exclusive)
      3: java.io.File.createNewFile: 0,13% (7 inclusive / 0 exclusive)
        4: java.io.WinNTFileSystem.createFileExclusively: 0,13% (7 inclusive / 7 exclusive)
      3: java.io.File.exists: 0,02% (1 inclusive / 0 exclusive)
        4: java.io.WinNTFileSystem.getBooleanAttributes: 0,02% (1 inclusive / 1 exclusive)
    2: java.io.FilterOutputStream.close: 0,08% (4 inclusive / 0 exclusive)
      3: java.io.FileOutputStream.close: 0,08% (4 inclusive / 0 exclusive)
        4: java.io.FileOutputStream.close0: 0,08% (4 inclusive / 4 exclusive)
    2: java.io.FileOutputStream.<init>: 0,06% (3 inclusive / 0 exclusive)
      3: java.io.FileOutputStream.<init>: 0,06% (3 inclusive / 0 exclusive)
        4: java.io.FileOutputStream.open: 0,06% (3 inclusive / 3 exclusive)
  1: sun.nio.cs.FastCharsetProvider.charsetForName: 0,31% (16 inclusive / 0 exclusive)
    2: sun.nio.cs.FastCharsetProvider.lookup: 0,31% (16 inclusive / 6 exclusive)
      3: java.lang.Class.forName: 0,19% (10 inclusive / 0 exclusive)
        4: java.lang.Class.forName0: 0,19% (10 inclusive / 10 exclusive)
  1: java.util.AbstractMap.<init>: 0,31% (16 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,31% (16 inclusive / 16 exclusive)
  1: java.lang.Class.forName: 0,29% (15 inclusive / 0 exclusive)
    2: java.lang.Class.forName0: 0,29% (15 inclusive / 14 exclusive)
      3: sun.nio.cs.MS1252.<clinit>: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.file.ZipFileIndex$Entry.<init>: 0,29% (15 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,29% (15 inclusive / 15 exclusive)
  1: java.lang.Class.forName0: 0,29% (15 inclusive / 14 exclusive)
    2: sun.nio.cs.MS1252.<clinit>: 0,02% (1 inclusive / 1 exclusive)
  1: compiler.java.CollectingJavaFileManager.inferBinaryName: 0,29% (15 inclusive / 0 exclusive)
    2: com.sun.tools.javac.file.JavacFileManager.inferBinaryName: 0,29% (15 inclusive / 0 exclusive)
      3: com.sun.tools.javac.file.ZipFileIndexArchive$ZipFileIndexFileObject.inferBinaryName: 0,25% (13 inclusive / 0 exclusive)
        4: java.lang.String.replace: 0,25% (13 inclusive / 13 exclusive)
      3: com.sun.tools.javac.file.RegularFileObject.inferBinaryName: 0,04% (2 inclusive / 0 exclusive)
        4: java.lang.String.replace: 0,04% (2 inclusive / 2 exclusive)
  1: util.FileUtils.write: 0,29% (15 inclusive / 0 exclusive)
    2: java.io.FileOutputStream.<init>: 0,25% (13 inclusive / 0 exclusive)
      3: java.io.FileOutputStream.<init>: 0,25% (13 inclusive / 0 exclusive)
        4: java.io.FileOutputStream.open: 0,25% (13 inclusive / 13 exclusive)
    2: util.FileUtils.create: 0,04% (2 inclusive / 0 exclusive)
      3: java.io.File.createNewFile: 0,04% (2 inclusive / 0 exclusive)
        4: java.io.WinNTFileSystem.createFileExclusively: 0,04% (2 inclusive / 2 exclusive)
  1: com.sun.tools.javac.code.Type.<init>: 0,29% (15 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,29% (15 inclusive / 15 exclusive)
  1: com.sun.tools.javac.file.JavacFileManager.inferBinaryName: 0,29% (15 inclusive / 0 exclusive)
    2: com.sun.tools.javac.file.ZipFileIndexArchive$ZipFileIndexFileObject.inferBinaryName: 0,25% (13 inclusive / 0 exclusive)
      3: java.lang.String.replace: 0,25% (13 inclusive / 13 exclusive)
    2: com.sun.tools.javac.file.RegularFileObject.inferBinaryName: 0,04% (2 inclusive / 0 exclusive)
      3: java.lang.String.replace: 0,04% (2 inclusive / 2 exclusive)
  1: java.lang.ClassLoader.defineClass: 0,27% (14 inclusive / 0 exclusive)
    2: java.lang.ClassLoader.defineClass1: 0,27% (14 inclusive / 14 exclusive)
  1: com.sun.tools.javac.code.Symbol$ClassSymbol.<init>: 0,27% (14 inclusive / 0 exclusive)
    2: com.sun.tools.javac.code.Symbol$TypeSymbol.<init>: 0,1% (5 inclusive / 0 exclusive)
      3: com.sun.tools.javac.code.Symbol.<init>: 0,1% (5 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,1% (5 inclusive / 5 exclusive)
    2: com.sun.tools.javac.code.Type$ClassType.<init>: 0,08% (4 inclusive / 0 exclusive)
      3: com.sun.tools.javac.code.Type.<init>: 0,08% (4 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,08% (4 inclusive / 4 exclusive)
    2: com.sun.tools.javac.code.Symbol$TypeSymbol.formFlatName: 0,06% (3 inclusive / 0 exclusive)
      3: com.sun.tools.javac.util.Name.append: 0,06% (3 inclusive / 3 exclusive)
    2: com.sun.tools.javac.code.Symbol$TypeSymbol.formFullName: 0,04% (2 inclusive / 0 exclusive)
      3: com.sun.tools.javac.util.Name.append: 0,04% (2 inclusive / 2 exclusive)
  1: java.lang.ClassLoader.defineClass1: 0,27% (14 inclusive / 14 exclusive)
  1: java.lang.StringCoding.decode: 0,27% (14 inclusive / 0 exclusive)
    2: java.lang.StringCoding$StringDecoder.decode: 0,25% (13 inclusive / 13 exclusive)
    2: java.lang.StringCoding$StringDecoder.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.StringCoding$StringDecoder.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: sun.nio.cs.MS1252.newDecoder: 0,02% (1 inclusive / 1 exclusive)
  1: sun.misc.FileURLMapper.exists: 0,27% (14 inclusive / 0 exclusive)
    2: java.io.File.exists: 0,27% (14 inclusive / 0 exclusive)
      3: java.io.WinNTFileSystem.getBooleanAttributes: 0,27% (14 inclusive / 14 exclusive)
  1: java.security.SecureClassLoader.defineClass: 0,27% (14 inclusive / 0 exclusive)
    2: java.lang.ClassLoader.defineClass: 0,27% (14 inclusive / 0 exclusive)
      3: java.lang.ClassLoader.defineClass1: 0,27% (14 inclusive / 14 exclusive)
  1: sun.misc.URLClassPath.getLoader: 0,27% (14 inclusive / 1 exclusive)
    2: sun.misc.URLClassPath$JarLoader.getClassPath: 0,25% (13 inclusive / 0 exclusive)
      3: java.util.jar.JavaUtilJarAccessImpl.jarFileHasClassPathAttribute: 0,15% (8 inclusive / 0 exclusive)
        4: java.util.jar.JarFile.hasClassPathAttribute: 0,15% (8 inclusive / 8 exclusive)
      3: sun.misc.URLClassPath$JarLoader.parseExtensionsDependencies: 0,1% (5 inclusive / 5 exclusive)
  1: sun.misc.URLClassPath$JarLoader$2.getInputStream: 0,25% (13 inclusive / 0 exclusive)
    2: java.util.jar.JarFile.getInputStream: 0,25% (13 inclusive / 0 exclusive)
      3: java.util.jar.JarFile.initializeVerifier: 0,25% (13 inclusive / 4 exclusive)
        4: sun.security.util.ManifestEntryVerifier.<init>: 0,13% (7 inclusive / 7 exclusive)
        4: java.util.jar.JarVerifier.beginEntry: 0,04% (2 inclusive / 2 exclusive)
  1: java.io.WinNTFileSystem.canonicalize0: 0,25% (13 inclusive / 13 exclusive)
  1: java.util.zip.ZipFile.getInputStream: 0,25% (13 inclusive / 6 exclusive)
    2: java.util.zip.ZipFile.getInflater: 0,1% (5 inclusive / 5 exclusive)
    2: java.util.zip.ZipFile$ZipFileInputStream.<init>: 0,04% (2 inclusive / 0 exclusive)
      3: java.io.InputStream.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
      3: java.util.zip.ZipFile.access$1100: 0,02% (1 inclusive / 0 exclusive)
        4: java.util.zip.ZipFile.getEntryCSize: 0,02% (1 inclusive / 1 exclusive)
  1: java.util.jar.JarFile.initializeVerifier: 0,25% (13 inclusive / 4 exclusive)
    2: sun.security.util.ManifestEntryVerifier.<init>: 0,13% (7 inclusive / 7 exclusive)
    2: java.util.jar.JarVerifier.beginEntry: 0,04% (2 inclusive / 2 exclusive)
  1: java.util.jar.JarFile.getInputStream: 0,25% (13 inclusive / 0 exclusive)
    2: java.util.jar.JarFile.initializeVerifier: 0,25% (13 inclusive / 4 exclusive)
      3: sun.security.util.ManifestEntryVerifier.<init>: 0,13% (7 inclusive / 7 exclusive)
      3: java.util.jar.JarVerifier.beginEntry: 0,04% (2 inclusive / 2 exclusive)
  1: java.io.File.getCanonicalPath: 0,25% (13 inclusive / 0 exclusive)
    2: java.io.Win32FileSystem.canonicalize: 0,25% (13 inclusive / 0 exclusive)
      3: java.io.WinNTFileSystem.canonicalize0: 0,25% (13 inclusive / 13 exclusive)
  1: java.io.Win32FileSystem.canonicalize: 0,25% (13 inclusive / 0 exclusive)
    2: java.io.WinNTFileSystem.canonicalize0: 0,25% (13 inclusive / 13 exclusive)
  1: java.lang.StringCoding$StringDecoder.decode: 0,25% (13 inclusive / 13 exclusive)
  1: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.findCENRecord: 0,25% (13 inclusive / 1 exclusive)
    2: java.io.RandomAccessFile.readFully: 0,23% (12 inclusive / 0 exclusive)
      3: java.io.RandomAccessFile.read: 0,23% (12 inclusive / 0 exclusive)
        4: java.io.RandomAccessFile.readBytes: 0,23% (12 inclusive / 12 exclusive)
  1: javax.tools.ToolProvider.findSystemToolClass: 0,23% (12 inclusive / 5 exclusive)
    2: java.net.URLClassLoader.newInstance: 0,08% (4 inclusive / 4 exclusive)
    2: java.io.File.exists: 0,06% (3 inclusive / 0 exclusive)
      3: java.io.WinNTFileSystem.getBooleanAttributes: 0,06% (3 inclusive / 3 exclusive)
  1: com.sun.tools.javac.file.RelativePath$RelativeDirectory.<init>: 0,23% (12 inclusive / 0 exclusive)
    2: com.sun.tools.javac.file.RelativePath.<init>: 0,17% (9 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,17% (9 inclusive / 9 exclusive)
    2: java.lang.StringBuilder.toString: 0,04% (2 inclusive / 0 exclusive)
      3: java.lang.String.<init>: 0,04% (2 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,04% (2 inclusive / 2 exclusive)
    2: java.lang.StringBuilder.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.AbstractStringBuilder.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: java.util.ArrayList.grow: 0,23% (12 inclusive / 0 exclusive)
    2: java.util.Arrays.copyOf: 0,23% (12 inclusive / 0 exclusive)
      3: java.util.Arrays.copyOf: 0,23% (12 inclusive / 12 exclusive)
  1: com.sun.tools.javac.processing.JavacProcessingEnvironment.<init>: 0,23% (12 inclusive / 0 exclusive)
    2: com.sun.tools.javac.processing.JavacProcessingEnvironment.initProcessorOptions: 0,13% (7 inclusive / 0 exclusive)
      3: java.util.Collections.unmodifiableMap: 0,08% (4 inclusive / 4 exclusive)
      3: java.util.HashMap$KeySet.iterator: 0,06% (3 inclusive / 0 exclusive)
        4: java.util.LinkedHashMap.newKeyIterator: 0,06% (3 inclusive / 3 exclusive)
    2: com.sun.tools.javac.processing.JavacFiler.<init>: 0,1% (5 inclusive / 0 exclusive)
      3: java.util.Collections.synchronizedMap: 0,1% (5 inclusive / 5 exclusive)
  1: java.util.jar.JarVerifier.<init>: 0,23% (12 inclusive / 12 exclusive)
  1: sun.nio.fs.WindowsFileAttributeViews$Basic.readAttributes: 0,23% (12 inclusive / 1 exclusive)
    2: sun.nio.fs.WindowsFileAttributes.get: 0,21% (11 inclusive / 5 exclusive)
      3: sun.nio.fs.WindowsNativeDispatcher.GetFileAttributesEx: 0,06% (3 inclusive / 0 exclusive)
        4: sun.nio.fs.WindowsNativeDispatcher.GetFileAttributesEx0: 0,06% (3 inclusive / 3 exclusive)
      3: sun.nio.fs.WindowsNativeDispatcher.<clinit>: 0,06% (3 inclusive / 1 exclusive)
        4: sun.nio.fs.WindowsNativeDispatcher.initIDs: 0,04% (2 inclusive / 2 exclusive)
  1: driver.EntryPoint.run: 0,23% (12 inclusive / 0 exclusive)
    2: driver.EntryPoint.getPaths: 0,23% (12 inclusive / 0 exclusive)
      3: util.FileUtils.glob: 0,19% (10 inclusive / 0 exclusive)
        4: sun.nio.fs.WindowsFileSystem.getPathMatcher: 0,12% (6 inclusive / 6 exclusive)
        4: java.nio.file.Files.walkFileTree: 0,08% (4 inclusive / 4 exclusive)
      3: java.util.ArrayList.iterator: 0,04% (2 inclusive / 2 exclusive)
  1: sun.nio.fs.WindowsFileAttributes.get: 0,23% (12 inclusive / 5 exclusive)
    2: sun.nio.fs.WindowsNativeDispatcher.GetFileAttributesEx: 0,06% (3 inclusive / 0 exclusive)
      3: sun.nio.fs.WindowsNativeDispatcher.GetFileAttributesEx0: 0,06% (3 inclusive / 3 exclusive)
    2: sun.nio.fs.WindowsNativeDispatcher.<clinit>: 0,06% (3 inclusive / 1 exclusive)
      3: sun.nio.fs.WindowsNativeDispatcher.initIDs: 0,04% (2 inclusive / 2 exclusive)
    2: sun.nio.fs.NativeBuffers.getNativeBuffer: 0,02% (1 inclusive / 0 exclusive)
      3: sun.nio.fs.NativeBuffers.allocNativeBuffer: 0,02% (1 inclusive / 0 exclusive)
        4: sun.nio.fs.NativeBuffer.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: javax.tools.ToolProvider.getSystemToolClass: 0,23% (12 inclusive / 0 exclusive)
    2: javax.tools.ToolProvider.findSystemToolClass: 0,23% (12 inclusive / 5 exclusive)
      3: java.net.URLClassLoader.newInstance: 0,08% (4 inclusive / 4 exclusive)
      3: java.io.File.exists: 0,06% (3 inclusive / 0 exclusive)
        4: java.io.WinNTFileSystem.getBooleanAttributes: 0,06% (3 inclusive / 3 exclusive)
  1: java.util.ArrayList.ensureCapacityInternal: 0,23% (12 inclusive / 0 exclusive)
    2: java.util.ArrayList.grow: 0,23% (12 inclusive / 0 exclusive)
      3: java.util.Arrays.copyOf: 0,23% (12 inclusive / 0 exclusive)
        4: java.util.Arrays.copyOf: 0,23% (12 inclusive / 12 exclusive)
  1: java.nio.file.Files.walkFileTree: 0,21% (11 inclusive / 4 exclusive)
    2: java.util.EnumSet.noneOf: 0,08% (4 inclusive / 4 exclusive)
    2: java.nio.file.FileTreeWalker.walk: 0,04% (2 inclusive / 0 exclusive)
      3: java.nio.file.FileTreeWalker.walk: 0,04% (2 inclusive / 2 exclusive)
    2: java.nio.file.FileTreeWalker.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: sun.misc.URLClassPath$JarLoader$1.run: 0,21% (11 inclusive / 2 exclusive)
    2: sun.misc.URLClassPath$JarLoader.access$600: 0,17% (9 inclusive / 0 exclusive)
      3: sun.misc.URLClassPath$JarLoader.getJarFile: 0,17% (9 inclusive / 9 exclusive)
  1: java.security.AccessController.doPrivileged: 0,21% (11 inclusive / 2 exclusive)
    2: java.net.URLClassLoader$6.run: 0,1% (5 inclusive / 0 exclusive)
      3: java.net.URLClassLoader$6.run: 0,1% (5 inclusive / 5 exclusive)
    2: sun.misc.URLClassPath$JarLoader$1.run: 0,04% (2 inclusive / 0 exclusive)
      3: sun.misc.URLClassPath$JarLoader$1.run: 0,04% (2 inclusive / 2 exclusive)
    2: java.net.URLClassLoader$1.run: 0,04% (2 inclusive / 0 exclusive)
      3: java.net.URLClassLoader$1.run: 0,04% (2 inclusive / 0 exclusive)
        4: java.lang.String.replace: 0,04% (2 inclusive / 2 exclusive)
  1: java.util.regex.Pattern.family: 0,21% (11 inclusive / 2 exclusive)
    2: java.util.regex.Pattern.charPropertyNodeFor: 0,17% (9 inclusive / 1 exclusive)
      3: java.util.regex.Pattern$CharPropertyNames.<clinit>: 0,13% (7 inclusive / 7 exclusive)
      3: java.util.regex.Pattern$CharPropertyNames.charPropertyFor: 0,02% (1 inclusive / 0 exclusive)
        4: java.util.regex.Pattern$CharPropertyNames$5.make: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.file.JavacFileManager.caseMapCheck: 0,21% (11 inclusive / 0 exclusive)
    2: java.io.File.getCanonicalPath: 0,21% (11 inclusive / 0 exclusive)
      3: java.io.Win32FileSystem.canonicalize: 0,21% (11 inclusive / 0 exclusive)
        4: java.io.WinNTFileSystem.canonicalize0: 0,21% (11 inclusive / 11 exclusive)
  1: util.FileUtils.create: 0,19% (10 inclusive / 0 exclusive)
    2: java.io.File.createNewFile: 0,17% (9 inclusive / 0 exclusive)
      3: java.io.WinNTFileSystem.createFileExclusively: 0,17% (9 inclusive / 9 exclusive)
    2: java.io.File.exists: 0,02% (1 inclusive / 0 exclusive)
      3: java.io.WinNTFileSystem.getBooleanAttributes: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.code.Scope$Entry.<init>: 0,19% (10 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,19% (10 inclusive / 10 exclusive)
  1: java.lang.reflect.Field.acquireFieldAccessor: 0,19% (10 inclusive / 0 exclusive)
    2: sun.reflect.ReflectionFactory.newFieldAccessor: 0,19% (10 inclusive / 6 exclusive)
      3: sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor: 0,08% (4 inclusive / 4 exclusive)
  1: com.sun.tools.javac.file.JavacFileManager.listContainer: 0,19% (10 inclusive / 0 exclusive)
    2: com.sun.tools.javac.file.JavacFileManager.listDirectory: 0,17% (9 inclusive / 1 exclusive)
      3: java.io.File.isDirectory: 0,13% (7 inclusive / 0 exclusive)
        4: java.io.WinNTFileSystem.getBooleanAttributes: 0,13% (7 inclusive / 7 exclusive)
      3: java.io.File.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
    2: com.sun.tools.javac.file.FSInfo.isDirectory: 0,02% (1 inclusive / 0 exclusive)
      3: java.io.File.isDirectory: 0,02% (1 inclusive / 0 exclusive)
        4: java.io.WinNTFileSystem.getBooleanAttributes: 0,02% (1 inclusive / 1 exclusive)
  1: java.lang.reflect.Field.getFieldAccessor: 0,19% (10 inclusive / 0 exclusive)
    2: java.lang.reflect.Field.acquireFieldAccessor: 0,19% (10 inclusive / 0 exclusive)
      3: sun.reflect.ReflectionFactory.newFieldAccessor: 0,19% (10 inclusive / 6 exclusive)
        4: sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor: 0,08% (4 inclusive / 4 exclusive)
  1: sun.nio.fs.WindowsFileSystemProvider.newDirectoryStream: 0,19% (10 inclusive / 2 exclusive)
    2: sun.nio.fs.WindowsDirectoryStream.<init>: 0,15% (8 inclusive / 0 exclusive)
      3: sun.nio.fs.WindowsNativeDispatcher.FindFirstFile: 0,15% (8 inclusive / 0 exclusive)
        4: sun.nio.fs.WindowsNativeDispatcher.FindFirstFile0: 0,15% (8 inclusive / 8 exclusive)
  1: sun.reflect.ReflectionFactory.newFieldAccessor: 0,19% (10 inclusive / 6 exclusive)
    2: sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor: 0,08% (4 inclusive / 4 exclusive)
  1: com.sun.tools.javac.file.ZipFileIndex$Entry.getName: 0,17% (9 inclusive / 0 exclusive)
    2: com.sun.tools.javac.file.RelativePath$RelativeFile.<init>: 0,17% (9 inclusive / 0 exclusive)
      3: java.lang.StringBuilder.<init>: 0,17% (9 inclusive / 0 exclusive)
        4: java.lang.AbstractStringBuilder.<init>: 0,17% (9 inclusive / 9 exclusive)
  1: sun.misc.URLClassPath$JarLoader.access$600: 0,17% (9 inclusive / 0 exclusive)
    2: sun.misc.URLClassPath$JarLoader.getJarFile: 0,17% (9 inclusive / 9 exclusive)
  1: java.util.ResourceBundle$Control$CandidateListCache.createObject: 0,17% (9 inclusive / 0 exclusive)
    2: java.util.ResourceBundle$Control$CandidateListCache.getDefaultList: 0,17% (9 inclusive / 5 exclusive)
      3: java.util.LinkedList.add: 0,08% (4 inclusive / 0 exclusive)
        4: java.util.LinkedList.linkLast: 0,08% (4 inclusive / 4 exclusive)
  1: java.net.URLClassLoader.newInstance: 0,17% (9 inclusive / 4 exclusive)
    2: java.security.AccessController.doPrivileged: 0,1% (5 inclusive / 0 exclusive)
      3: java.net.URLClassLoader$6.run: 0,1% (5 inclusive / 0 exclusive)
        4: java.net.URLClassLoader$6.run: 0,1% (5 inclusive / 5 exclusive)
  1: sun.nio.fs.WindowsFileSystemProvider.readAttributes: 0,17% (9 inclusive / 0 exclusive)
    2: sun.nio.fs.WindowsFileAttributeViews$Basic.readAttributes: 0,12% (6 inclusive / 0 exclusive)
      3: sun.nio.fs.WindowsFileAttributeViews$Basic.readAttributes: 0,12% (6 inclusive / 1 exclusive)
        4: sun.nio.fs.WindowsFileAttributes.get: 0,1% (5 inclusive / 5 exclusive)
    2: sun.nio.fs.WindowsFileSystemProvider.getFileAttributeView: 0,06% (3 inclusive / 1 exclusive)
      3: sun.nio.fs.WindowsFileAttributeViews.createBasicView: 0,04% (2 inclusive / 2 exclusive)
  1: java.io.File.createNewFile: 0,17% (9 inclusive / 0 exclusive)
    2: java.io.WinNTFileSystem.createFileExclusively: 0,17% (9 inclusive / 9 exclusive)
  1: com.sun.tools.javac.main.JavaCompiler.initProcessAnnotations: 0,17% (9 inclusive / 0 exclusive)
    2: com.sun.tools.javac.processing.JavacProcessingEnvironment.<init>: 0,17% (9 inclusive / 0 exclusive)
      3: com.sun.tools.javac.processing.JavacFiler.<init>: 0,1% (5 inclusive / 0 exclusive)
        4: java.util.Collections.synchronizedMap: 0,1% (5 inclusive / 5 exclusive)
      3: com.sun.tools.javac.processing.JavacProcessingEnvironment.initProcessorOptions: 0,08% (4 inclusive / 0 exclusive)
        4: java.util.Collections.unmodifiableMap: 0,08% (4 inclusive / 4 exclusive)
  1: java.lang.ClassLoader.getResource: 0,17% (9 inclusive / 0 exclusive)
    2: java.lang.ClassLoader.getBootstrapResource: 0,13% (7 inclusive / 0 exclusive)
      3: java.lang.ClassLoader.getBootstrapClassPath: 0,13% (7 inclusive / 0 exclusive)
        4: sun.misc.Launcher.getBootstrapClassPath: 0,13% (7 inclusive / 7 exclusive)
    2: java.net.URLClassLoader.findResource: 0,04% (2 inclusive / 2 exclusive)
  1: java.lang.String.toCharArray: 0,17% (9 inclusive / 9 exclusive)
  1: java.util.regex.Pattern.charPropertyNodeFor: 0,17% (9 inclusive / 1 exclusive)
    2: java.util.regex.Pattern$CharPropertyNames.<clinit>: 0,13% (7 inclusive / 7 exclusive)
    2: java.util.regex.Pattern$CharPropertyNames.charPropertyFor: 0,02% (1 inclusive / 0 exclusive)
      3: java.util.regex.Pattern$CharPropertyNames$5.make: 0,02% (1 inclusive / 1 exclusive)
  1: sun.net.www.protocol.file.Handler.createFileURLConnection: 0,17% (9 inclusive / 7 exclusive)
    2: sun.net.www.protocol.file.FileURLConnection.<init>: 0,04% (2 inclusive / 0 exclusive)
      3: sun.net.www.URLConnection.<init>: 0,04% (2 inclusive / 2 exclusive)
  1: com.sun.tools.javac.util.Name.append: 0,17% (9 inclusive / 9 exclusive)
  1: sun.net.www.protocol.file.Handler.openConnection: 0,17% (9 inclusive / 0 exclusive)
    2: sun.net.www.protocol.file.Handler.createFileURLConnection: 0,17% (9 inclusive / 7 exclusive)
      3: sun.net.www.protocol.file.FileURLConnection.<init>: 0,04% (2 inclusive / 0 exclusive)
        4: sun.net.www.URLConnection.<init>: 0,04% (2 inclusive / 2 exclusive)
  1: java.net.URLStreamHandler.parseURL: 0,17% (9 inclusive / 0 exclusive)
    2: java.lang.StringBuilder.toString: 0,1% (5 inclusive / 0 exclusive)
      3: java.lang.String.<init>: 0,1% (5 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,06% (3 inclusive / 3 exclusive)
        4: java.util.Arrays.copyOfRange: 0,04% (2 inclusive / 2 exclusive)
    2: java.lang.StringBuilder.<init>: 0,06% (3 inclusive / 0 exclusive)
      3: java.lang.AbstractStringBuilder.<init>: 0,06% (3 inclusive / 2 exclusive)
        4: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
    2: java.lang.String.substring: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.String.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: sun.nio.ch.FileChannelImpl.<clinit>: 0,17% (9 inclusive / 3 exclusive)
    2: sun.nio.ch.Util.<clinit>: 0,08% (4 inclusive / 4 exclusive)
    2: sun.nio.ch.Util.load: 0,04% (2 inclusive / 2 exclusive)
  1: javax.tools.ToolProvider.getSystemTool: 0,17% (9 inclusive / 0 exclusive)
    2: javax.tools.ToolProvider.getSystemToolClass: 0,17% (9 inclusive / 0 exclusive)
      3: javax.tools.ToolProvider.findSystemToolClass: 0,17% (9 inclusive / 5 exclusive)
        4: java.net.URLClassLoader.newInstance: 0,08% (4 inclusive / 4 exclusive)
  1: grammar.ExpressionTreeCleaner.visit: 0,17% (9 inclusive / 0 exclusive)
    2: java.lang.StringBuilder.toString: 0,1% (5 inclusive / 0 exclusive)
      3: java.lang.String.<init>: 0,1% (5 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,06% (3 inclusive / 3 exclusive)
        4: java.util.Arrays.copyOfRange: 0,04% (2 inclusive / 2 exclusive)
    2: util.StringUtils.escape: 0,06% (3 inclusive / 0 exclusive)
      3: java.lang.String.toCharArray: 0,06% (3 inclusive / 3 exclusive)
    2: java.lang.StringBuilder.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.AbstractStringBuilder.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: java.util.ResourceBundle$Control$CandidateListCache.getDefaultList: 0,17% (9 inclusive / 5 exclusive)
    2: java.util.LinkedList.add: 0,08% (4 inclusive / 0 exclusive)
      3: java.util.LinkedList.linkLast: 0,08% (4 inclusive / 4 exclusive)
  1: java.io.WinNTFileSystem.createFileExclusively: 0,17% (9 inclusive / 9 exclusive)
  1: sun.nio.fs.WindowsDirectoryStream.<init>: 0,15% (8 inclusive / 0 exclusive)
    2: sun.nio.fs.WindowsNativeDispatcher.FindFirstFile: 0,15% (8 inclusive / 0 exclusive)
      3: sun.nio.fs.WindowsNativeDispatcher.FindFirstFile0: 0,15% (8 inclusive / 8 exclusive)
  1: sun.nio.fs.WindowsNativeDispatcher.FindFirstFile0: 0,15% (8 inclusive / 8 exclusive)
  1: sun.nio.fs.WindowsFileSystem.getPathMatcher: 0,15% (8 inclusive / 6 exclusive)
    2: java.util.regex.Pattern.<clinit>: 0,04% (2 inclusive / 2 exclusive)
  1: sun.nio.fs.WindowsNativeDispatcher.FindFirstFile: 0,15% (8 inclusive / 0 exclusive)
    2: sun.nio.fs.WindowsNativeDispatcher.FindFirstFile0: 0,15% (8 inclusive / 8 exclusive)
  1: java.lang.StringBuffer.toString: 0,15% (8 inclusive / 0 exclusive)
    2: java.lang.String.<init>: 0,15% (8 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,1% (5 inclusive / 5 exclusive)
      3: java.util.Arrays.copyOfRange: 0,06% (3 inclusive / 3 exclusive)
  1: com.sun.tools.javac.code.Scope.makeEntry: 0,15% (8 inclusive / 0 exclusive)
    2: com.sun.tools.javac.code.Scope$Entry.<init>: 0,15% (8 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,15% (8 inclusive / 8 exclusive)
  1: com.sun.tools.javac.util.Name.<init>: 0,15% (8 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,15% (8 inclusive / 8 exclusive)
  1: java.io.File.<init>: 0,15% (8 inclusive / 0 exclusive)
    2: java.io.Win32FileSystem.resolve: 0,1% (5 inclusive / 4 exclusive)
      3: java.lang.String.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: java.util.Arrays.copyOf: 0,02% (1 inclusive / 1 exclusive)
    2: java.lang.Object.<init>: 0,06% (3 inclusive / 3 exclusive)
  1: com.sun.tools.javac.util.SharedNameTable$NameImpl.<init>: 0,15% (8 inclusive / 0 exclusive)
    2: com.sun.tools.javac.util.Name.<init>: 0,15% (8 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,15% (8 inclusive / 8 exclusive)
  1: sun.misc.URLClassPath$JarLoader.ensureOpen: 0,15% (8 inclusive / 6 exclusive)
    2: java.security.AccessController.doPrivileged: 0,04% (2 inclusive / 0 exclusive)
      3: sun.misc.URLClassPath$JarLoader$1.run: 0,04% (2 inclusive / 0 exclusive)
        4: sun.misc.URLClassPath$JarLoader$1.run: 0,04% (2 inclusive / 2 exclusive)
  1: java.io.File.isDirectory: 0,15% (8 inclusive / 0 exclusive)
    2: java.io.WinNTFileSystem.getBooleanAttributes: 0,15% (8 inclusive / 8 exclusive)
  1: sun.nio.ch.FileChannelImpl.open: 0,15% (8 inclusive / 0 exclusive)
    2: sun.nio.ch.FileChannelImpl.<init>: 0,15% (8 inclusive / 8 exclusive)
  1: com.sun.tools.javac.code.Symbol.<init>: 0,15% (8 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,15% (8 inclusive / 8 exclusive)
  1: com.sun.tools.javac.code.Type$MethodType.<init>: 0,15% (8 inclusive / 0 exclusive)
    2: com.sun.tools.javac.code.Type.<init>: 0,15% (8 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,15% (8 inclusive / 8 exclusive)
  1: com.sun.tools.javac.code.Scope.enter: 0,15% (8 inclusive / 0 exclusive)
    2: com.sun.tools.javac.code.Scope.makeEntry: 0,15% (8 inclusive / 0 exclusive)
      3: com.sun.tools.javac.code.Scope$Entry.<init>: 0,15% (8 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,15% (8 inclusive / 8 exclusive)
  1: trees.MatchFinder.find: 0,15% (8 inclusive / 0 exclusive)
    2: trees.MatchFinder.trace: 0,08% (4 inclusive / 1 exclusive)
      3: trees.MatchIterator.trace: 0,06% (3 inclusive / 0 exclusive)
        4: java.util.Vector.iterator: 0,06% (3 inclusive / 3 exclusive)
    2: trees.BoundedMatchIterator.<init>: 0,08% (4 inclusive / 0 exclusive)
      3: util.PeekIterator.<init>: 0,08% (4 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,08% (4 inclusive / 4 exclusive)
  1: parser.Matcher.visitChild: 0,15% (8 inclusive / 0 exclusive)
    2: parser.NestedMemo.get: 0,15% (8 inclusive / 0 exclusive)
      3: parser.NestedMemo.set: 0,13% (7 inclusive / 0 exclusive)
        4: java.util.HashMap.<init>: 0,13% (7 inclusive / 7 exclusive)
      3: parser.Matcher.parse: 0,02% (1 inclusive / 1 exclusive)
  1: sun.nio.ch.FileChannelImpl.<init>: 0,15% (8 inclusive / 8 exclusive)
  1: java.io.Win32FileSystem.normalize: 0,15% (8 inclusive / 0 exclusive)
    2: java.lang.StringBuffer.toString: 0,08% (4 inclusive / 0 exclusive)
      3: java.lang.String.<init>: 0,08% (4 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,08% (4 inclusive / 4 exclusive)
    2: java.lang.StringBuffer.<init>: 0,06% (3 inclusive / 0 exclusive)
      3: java.lang.AbstractStringBuilder.<init>: 0,06% (3 inclusive / 2 exclusive)
        4: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
    2: java.lang.String.substring: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.String.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.jvm.ClassReader.sigToType: 0,13% (7 inclusive / 0 exclusive)
    2: com.sun.tools.javac.code.Type$MethodType.<init>: 0,12% (6 inclusive / 0 exclusive)
      3: com.sun.tools.javac.code.Type.<init>: 0,12% (6 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,12% (6 inclusive / 6 exclusive)
    2: com.sun.tools.javac.code.Type$WildcardType.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.code.Type.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: java.net.URL.openConnection: 0,13% (7 inclusive / 0 exclusive)
    2: sun.net.www.protocol.file.Handler.openConnection: 0,13% (7 inclusive / 0 exclusive)
      3: sun.net.www.protocol.file.Handler.openConnection: 0,13% (7 inclusive / 0 exclusive)
        4: sun.net.www.protocol.file.Handler.createFileURLConnection: 0,13% (7 inclusive / 7 exclusive)
  1: java.lang.ClassLoader.loadLibrary: 0,13% (7 inclusive / 0 exclusive)
    2: java.lang.ClassLoader.loadLibrary0: 0,13% (7 inclusive / 0 exclusive)
      3: java.lang.ClassLoader$NativeLibrary.load: 0,13% (7 inclusive / 7 exclusive)
  1: java.lang.StringBuffer.<init>: 0,13% (7 inclusive / 0 exclusive)
    2: java.lang.AbstractStringBuilder.<init>: 0,13% (7 inclusive / 5 exclusive)
      3: java.lang.Object.<init>: 0,04% (2 inclusive / 2 exclusive)
  1: com.sun.tools.javac.processing.JavacProcessingEnvironment.initProcessorOptions: 0,13% (7 inclusive / 0 exclusive)
    2: java.util.Collections.unmodifiableMap: 0,08% (4 inclusive / 4 exclusive)
    2: java.util.HashMap$KeySet.iterator: 0,06% (3 inclusive / 0 exclusive)
      3: java.util.LinkedHashMap.newKeyIterator: 0,06% (3 inclusive / 3 exclusive)
  1: util.PeekIterator.<init>: 0,13% (7 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,08% (4 inclusive / 4 exclusive)
    2: java.util.Collections$EmptyList.iterator: 0,06% (3 inclusive / 0 exclusive)
      3: java.util.Collections.emptyIterator: 0,06% (3 inclusive / 3 exclusive)
  1: com.sun.tools.javac.util.JavacMessages.getBundles: 0,13% (7 inclusive / 0 exclusive)
    2: java.util.ResourceBundle.getBundle: 0,13% (7 inclusive / 1 exclusive)
      3: java.util.ResourceBundle$Control.<clinit>: 0,08% (4 inclusive / 4 exclusive)
      3: java.util.ResourceBundle.getBundleImpl: 0,04% (2 inclusive / 2 exclusive)
  1: java.util.regex.Pattern$CharPropertyNames.<clinit>: 0,13% (7 inclusive / 7 exclusive)
  1: java.util.HashSet.iterator: 0,13% (7 inclusive / 0 exclusive)
    2: java.util.HashMap$KeySet.iterator: 0,08% (4 inclusive / 0 exclusive)
      3: java.util.HashMap.newKeyIterator: 0,08% (4 inclusive / 4 exclusive)
    2: java.util.HashMap.keySet: 0,06% (3 inclusive / 3 exclusive)
  1: java.lang.ClassLoader.getBootstrapResource: 0,13% (7 inclusive / 0 exclusive)
    2: java.lang.ClassLoader.getBootstrapClassPath: 0,13% (7 inclusive / 0 exclusive)
      3: sun.misc.Launcher.getBootstrapClassPath: 0,13% (7 inclusive / 7 exclusive)
  1: java.lang.ClassLoader.getBootstrapClassPath: 0,13% (7 inclusive / 0 exclusive)
    2: sun.misc.Launcher.getBootstrapClassPath: 0,13% (7 inclusive / 7 exclusive)
  1: sun.security.util.ManifestEntryVerifier.<init>: 0,13% (7 inclusive / 7 exclusive)
  1: com.sun.tools.javac.code.Symbol$TypeSymbol.formFlatName: 0,13% (7 inclusive / 0 exclusive)
    2: com.sun.tools.javac.util.Name.append: 0,13% (7 inclusive / 7 exclusive)
  1: java.util.HashMap$KeySet.iterator: 0,13% (7 inclusive / 0 exclusive)
    2: java.util.HashMap.newKeyIterator: 0,08% (4 inclusive / 4 exclusive)
    2: java.util.LinkedHashMap.newKeyIterator: 0,06% (3 inclusive / 3 exclusive)
  1: sun.misc.Launcher.getBootstrapClassPath: 0,13% (7 inclusive / 7 exclusive)
  1: driver.Requires.imports: 0,13% (7 inclusive / 0 exclusive)
    2: java.util.HashSet.iterator: 0,13% (7 inclusive / 0 exclusive)
      3: java.util.HashMap$KeySet.iterator: 0,08% (4 inclusive / 0 exclusive)
        4: java.util.HashMap.newKeyIterator: 0,08% (4 inclusive / 4 exclusive)
      3: java.util.HashMap.keySet: 0,06% (3 inclusive / 3 exclusive)
  1: java.lang.Runtime.loadLibrary0: 0,13% (7 inclusive / 0 exclusive)
    2: java.lang.ClassLoader.loadLibrary: 0,13% (7 inclusive / 0 exclusive)
      3: java.lang.ClassLoader.loadLibrary0: 0,13% (7 inclusive / 0 exclusive)
        4: java.lang.ClassLoader$NativeLibrary.load: 0,13% (7 inclusive / 7 exclusive)
  1: java.util.ResourceBundle.getBundle: 0,13% (7 inclusive / 1 exclusive)
    2: java.util.ResourceBundle$Control.<clinit>: 0,08% (4 inclusive / 4 exclusive)
    2: java.util.ResourceBundle.getBundleImpl: 0,04% (2 inclusive / 2 exclusive)
  1: java.lang.ClassLoader.loadLibrary0: 0,13% (7 inclusive / 0 exclusive)
    2: java.lang.ClassLoader$NativeLibrary.load: 0,13% (7 inclusive / 7 exclusive)
  1: java.lang.ClassLoader$NativeLibrary.load: 0,13% (7 inclusive / 7 exclusive)
  1: trees.BoundedMatchIterator.<init>: 0,13% (7 inclusive / 0 exclusive)
    2: util.PeekIterator.<init>: 0,13% (7 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,08% (4 inclusive / 4 exclusive)
      3: java.util.Collections$EmptyList.iterator: 0,06% (3 inclusive / 0 exclusive)
        4: java.util.Collections.emptyIterator: 0,06% (3 inclusive / 3 exclusive)
  1: com.sun.tools.javac.file.ZipFileIndex.checkIndex: 0,13% (7 inclusive / 0 exclusive)
    2: com.sun.tools.javac.file.ZipFileIndex.openFile: 0,1% (5 inclusive / 0 exclusive)
      3: java.io.RandomAccessFile.<init>: 0,1% (5 inclusive / 0 exclusive)
        4: java.io.RandomAccessFile.open: 0,1% (5 inclusive / 5 exclusive)
    2: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.findCENRecord: 0,02% (1 inclusive / 1 exclusive)
    2: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.access$000: 0,02% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.buildIndex: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.util.JavacMessages.setCurrentLocale: 0,13% (7 inclusive / 0 exclusive)
    2: com.sun.tools.javac.util.JavacMessages.getBundles: 0,13% (7 inclusive / 0 exclusive)
      3: java.util.ResourceBundle.getBundle: 0,13% (7 inclusive / 1 exclusive)
        4: java.util.ResourceBundle$Control.<clinit>: 0,08% (4 inclusive / 4 exclusive)
        4: java.util.ResourceBundle.getBundleImpl: 0,04% (2 inclusive / 2 exclusive)
  1: com.sun.tools.javac.util.SharedNameTable.fromChars: 0,12% (6 inclusive / 1 exclusive)
    2: com.sun.tools.javac.util.SharedNameTable$NameImpl.<init>: 0,1% (5 inclusive / 0 exclusive)
      3: com.sun.tools.javac.util.Name.<init>: 0,1% (5 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,1% (5 inclusive / 5 exclusive)
  1: com.sun.tools.javac.file.ZipFileIndex.readBytes: 0,12% (6 inclusive / 0 exclusive)
    2: java.io.RandomAccessFile.readFully: 0,12% (6 inclusive / 0 exclusive)
      3: java.io.RandomAccessFile.read: 0,12% (6 inclusive / 0 exclusive)
        4: java.io.RandomAccessFile.readBytes: 0,12% (6 inclusive / 6 exclusive)
  1: java.util.jar.Manifest.<init>: 0,12% (6 inclusive / 1 exclusive)
    2: java.util.jar.Manifest.read: 0,1% (5 inclusive / 2 exclusive)
      3: java.util.jar.Attributes.read: 0,06% (3 inclusive / 0 exclusive)
        4: java.util.jar.Attributes.putValue: 0,04% (2 inclusive / 2 exclusive)
        4: java.lang.String.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: sun.nio.cs.StreamEncoder.writeBytes: 0,12% (6 inclusive / 0 exclusive)
    2: java.io.BufferedOutputStream.write: 0,12% (6 inclusive / 0 exclusive)
      3: java.io.FileOutputStream.write: 0,12% (6 inclusive / 0 exclusive)
        4: java.io.FileOutputStream.writeBytes: 0,12% (6 inclusive / 6 exclusive)
  1: java.util.ResourceBundle.findBundle: 0,12% (6 inclusive / 0 exclusive)
    2: java.util.ResourceBundle.loadBundle: 0,08% (4 inclusive / 0 exclusive)
      3: java.util.ResourceBundle$Control.newBundle: 0,08% (4 inclusive / 4 exclusive)
    2: java.util.ResourceBundle.putBundleInCache: 0,04% (2 inclusive / 2 exclusive)
  1: java.io.FileOutputStream.writeBytes: 0,12% (6 inclusive / 6 exclusive)
  1: sun.misc.URLClassPath$3.run: 0,12% (6 inclusive / 0 exclusive)
    2: sun.misc.URLClassPath$JarLoader.<init>: 0,12% (6 inclusive / 0 exclusive)
      3: sun.misc.URLClassPath$JarLoader.ensureOpen: 0,12% (6 inclusive / 6 exclusive)
  1: com.sun.tools.javac.util.List.of: 0,12% (6 inclusive / 0 exclusive)
    2: com.sun.tools.javac.util.List.<init>: 0,12% (6 inclusive / 0 exclusive)
      3: java.util.AbstractCollection.<init>: 0,12% (6 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,12% (6 inclusive / 6 exclusive)
  1: sun.misc.URLClassPath$JarLoader.<init>: 0,12% (6 inclusive / 0 exclusive)
    2: sun.misc.URLClassPath$JarLoader.ensureOpen: 0,12% (6 inclusive / 6 exclusive)
  1: java.net.URLClassLoader.getPermissions: 0,12% (6 inclusive / 0 exclusive)
    2: java.security.Permissions.add: 0,06% (3 inclusive / 1 exclusive)
      3: java.security.Permissions.getPermissionCollection: 0,04% (2 inclusive / 0 exclusive)
        4: java.io.FilePermission.newPermissionCollection: 0,04% (2 inclusive / 2 exclusive)
    2: sun.net.www.protocol.file.FileURLConnection.getPermission: 0,04% (2 inclusive / 2 exclusive)
    2: java.security.SecureClassLoader.getPermissions: 0,02% (1 inclusive / 1 exclusive)
  1: java.nio.charset.Charset.lookup: 0,12% (6 inclusive / 0 exclusive)
    2: java.nio.charset.Charset.lookup2: 0,12% (6 inclusive / 0 exclusive)
      3: sun.nio.cs.FastCharsetProvider.charsetForName: 0,12% (6 inclusive / 0 exclusive)
        4: sun.nio.cs.FastCharsetProvider.lookup: 0,12% (6 inclusive / 6 exclusive)
  1: java.lang.reflect.Field.get: 0,12% (6 inclusive / 0 exclusive)
    2: java.lang.reflect.Field.getFieldAccessor: 0,12% (6 inclusive / 0 exclusive)
      3: java.lang.reflect.Field.acquireFieldAccessor: 0,12% (6 inclusive / 0 exclusive)
        4: sun.reflect.ReflectionFactory.newFieldAccessor: 0,12% (6 inclusive / 6 exclusive)
  1: util.StringUtils.escape: 0,12% (6 inclusive / 0 exclusive)
    2: java.lang.String.toCharArray: 0,06% (3 inclusive / 3 exclusive)
    2: java.lang.StringBuilder.toString: 0,04% (2 inclusive / 0 exclusive)
      3: java.lang.String.<init>: 0,04% (2 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,04% (2 inclusive / 2 exclusive)
    2: java.lang.StringBuilder.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.AbstractStringBuilder.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.file.RegularFileObject.inferBinaryName: 0,12% (6 inclusive / 0 exclusive)
    2: java.lang.StringBuilder.toString: 0,08% (4 inclusive / 0 exclusive)
      3: java.lang.String.<init>: 0,08% (4 inclusive / 0 exclusive)
        4: java.util.Arrays.copyOfRange: 0,08% (4 inclusive / 4 exclusive)
    2: java.lang.String.replace: 0,04% (2 inclusive / 2 exclusive)
  1: java.nio.charset.Charset.lookup2: 0,12% (6 inclusive / 0 exclusive)
    2: sun.nio.cs.FastCharsetProvider.charsetForName: 0,12% (6 inclusive / 0 exclusive)
      3: sun.nio.cs.FastCharsetProvider.lookup: 0,12% (6 inclusive / 6 exclusive)
  1: java.io.FileOutputStream.write: 0,12% (6 inclusive / 0 exclusive)
    2: java.io.FileOutputStream.writeBytes: 0,12% (6 inclusive / 6 exclusive)
  1: java.io.BufferedOutputStream.write: 0,12% (6 inclusive / 0 exclusive)
    2: java.io.FileOutputStream.write: 0,12% (6 inclusive / 0 exclusive)
      3: java.io.FileOutputStream.writeBytes: 0,12% (6 inclusive / 6 exclusive)
  1: sun.misc.URLClassPath$JarLoader.parseExtensionsDependencies: 0,1% (5 inclusive / 5 exclusive)
  1: java.io.StringWriter.<init>: 0,1% (5 inclusive / 0 exclusive)
    2: java.io.Writer.<init>: 0,06% (3 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,06% (3 inclusive / 3 exclusive)
    2: java.lang.StringBuffer.<init>: 0,04% (2 inclusive / 0 exclusive)
      3: java.lang.AbstractStringBuilder.<init>: 0,04% (2 inclusive / 2 exclusive)
  1: java.net.URLClassLoader.access$100: 0,1% (5 inclusive / 0 exclusive)
    2: java.net.URLClassLoader.defineClass: 0,1% (5 inclusive / 1 exclusive)
      3: sun.misc.Resource.getBytes: 0,06% (3 inclusive / 0 exclusive)
        4: java.util.Arrays.copyOf: 0,06% (3 inclusive / 3 exclusive)
      3: sun.misc.PerfCounter.<clinit>: 0,02% (1 inclusive / 1 exclusive)
  1: javax.tools.ToolProvider.getSystemJavaCompiler: 0,1% (5 inclusive / 0 exclusive)
    2: javax.tools.ToolProvider.getSystemTool: 0,1% (5 inclusive / 0 exclusive)
      3: javax.tools.ToolProvider.getSystemToolClass: 0,1% (5 inclusive / 0 exclusive)
        4: javax.tools.ToolProvider.findSystemToolClass: 0,1% (5 inclusive / 5 exclusive)
  1: source.SourceComposed.strFromMatches: 0,1% (5 inclusive / 0 exclusive)
    2: java.lang.StringBuilder.<init>: 0,06% (3 inclusive / 0 exclusive)
      3: java.lang.AbstractStringBuilder.<init>: 0,06% (3 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,06% (3 inclusive / 3 exclusive)
    2: java.lang.StringBuilder.toString: 0,04% (2 inclusive / 0 exclusive)
      3: java.lang.String.<init>: 0,04% (2 inclusive / 0 exclusive)
        4: java.util.Arrays.copyOfRange: 0,02% (1 inclusive / 1 exclusive)
        4: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.file.RelativePath$RelativeDirectory.dirname: 0,1% (5 inclusive / 0 exclusive)
    2: com.sun.tools.javac.file.RelativePath$RelativeDirectory.<init>: 0,08% (4 inclusive / 0 exclusive)
      3: com.sun.tools.javac.file.RelativePath.<init>: 0,08% (4 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,08% (4 inclusive / 4 exclusive)
    2: java.lang.String.substring: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.String.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: sun.misc.PerfCounter.<init>: 0,1% (5 inclusive / 0 exclusive)
    2: sun.misc.Perf.createLong: 0,08% (4 inclusive / 4 exclusive)
    2: java.nio.DirectByteBuffer.asLongBuffer: 0,02% (1 inclusive / 1 exclusive)
  1: sun.misc.URLClassPath$JarLoader.getResource: 0,1% (5 inclusive / 0 exclusive)
    2: sun.misc.URLClassPath$JarLoader.checkResource: 0,1% (5 inclusive / 4 exclusive)
      3: sun.net.www.ParseUtil.encodePath: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.String.toCharArray: 0,02% (1 inclusive / 1 exclusive)
  1: java.util.jar.Manifest.read: 0,1% (5 inclusive / 2 exclusive)
    2: java.util.jar.Attributes.read: 0,06% (3 inclusive / 0 exclusive)
      3: java.util.jar.Attributes.putValue: 0,04% (2 inclusive / 2 exclusive)
      3: java.lang.String.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: java.nio.file.FileTreeWalker.walk: 0,1% (5 inclusive / 2 exclusive)
    2: java.nio.file.Files.newDirectoryStream: 0,04% (2 inclusive / 0 exclusive)
      3: sun.nio.fs.WindowsFileSystemProvider.newDirectoryStream: 0,04% (2 inclusive / 2 exclusive)
    2: java.nio.file.Files.readAttributes: 0,02% (1 inclusive / 0 exclusive)
      3: sun.nio.fs.WindowsFileSystemProvider.readAttributes: 0,02% (1 inclusive / 0 exclusive)
        4: sun.nio.fs.WindowsFileSystemProvider.getFileAttributeView: 0,02% (1 inclusive / 1 exclusive)
  1: java.lang.String.toLowerCase: 0,1% (5 inclusive / 2 exclusive)
    2: java.lang.String.<init>: 0,06% (3 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,06% (3 inclusive / 3 exclusive)
  1: java.io.Win32FileSystem.hashCode: 0,1% (5 inclusive / 0 exclusive)
    2: java.lang.String.toLowerCase: 0,1% (5 inclusive / 2 exclusive)
      3: java.lang.String.<init>: 0,06% (3 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,06% (3 inclusive / 3 exclusive)
  1: java.io.Win32FileSystem.resolve: 0,1% (5 inclusive / 4 exclusive)
    2: java.lang.String.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: java.util.Arrays.copyOf: 0,02% (1 inclusive / 1 exclusive)
  1: java.util.Collections.synchronizedMap: 0,1% (5 inclusive / 5 exclusive)
  1: java.net.URLClassLoader$6.run: 0,1% (5 inclusive / 5 exclusive)
  1: com.sun.tools.javac.processing.JavacFiler.<init>: 0,1% (5 inclusive / 0 exclusive)
    2: java.util.Collections.synchronizedMap: 0,1% (5 inclusive / 5 exclusive)
  1: sun.misc.PerfCounter.newPerfCounter: 0,1% (5 inclusive / 0 exclusive)
    2: sun.misc.PerfCounter.<init>: 0,1% (5 inclusive / 0 exclusive)
      3: sun.misc.Perf.createLong: 0,08% (4 inclusive / 4 exclusive)
      3: java.nio.DirectByteBuffer.asLongBuffer: 0,02% (1 inclusive / 1 exclusive)
  1: java.util.Stack.<init>: 0,1% (5 inclusive / 0 exclusive)
    2: java.util.Vector.<init>: 0,1% (5 inclusive / 0 exclusive)
      3: java.util.Vector.<init>: 0,1% (5 inclusive / 0 exclusive)
        4: java.util.Vector.<init>: 0,1% (5 inclusive / 5 exclusive)
  1: driver.DependencyResolver.run: 0,1% (5 inclusive / 0 exclusive)
    2: driver.SourceRepository.hint: 0,1% (5 inclusive / 0 exclusive)
      3: java.io.File.exists: 0,1% (5 inclusive / 0 exclusive)
        4: java.io.WinNTFileSystem.getBooleanAttributes: 0,1% (5 inclusive / 5 exclusive)
  1: java.net.URLStreamHandler.toExternalForm: 0,1% (5 inclusive / 0 exclusive)
    2: java.lang.StringBuffer.toString: 0,06% (3 inclusive / 0 exclusive)
      3: java.lang.String.<init>: 0,06% (3 inclusive / 0 exclusive)
        4: java.util.Arrays.copyOfRange: 0,04% (2 inclusive / 2 exclusive)
        4: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
    2: java.lang.StringBuffer.<init>: 0,04% (2 inclusive / 0 exclusive)
      3: java.lang.AbstractStringBuilder.<init>: 0,04% (2 inclusive / 1 exclusive)
        4: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: sun.misc.PerfCounter$CoreCounters.<clinit>: 0,1% (5 inclusive / 0 exclusive)
    2: sun.misc.PerfCounter.newPerfCounter: 0,1% (5 inclusive / 0 exclusive)
      3: sun.misc.PerfCounter.<init>: 0,1% (5 inclusive / 0 exclusive)
        4: sun.misc.Perf.createLong: 0,08% (4 inclusive / 4 exclusive)
        4: java.nio.DirectByteBuffer.asLongBuffer: 0,02% (1 inclusive / 1 exclusive)
  1: sun.misc.URLClassPath$JarLoader.checkResource: 0,1% (5 inclusive / 4 exclusive)
    2: sun.net.www.ParseUtil.encodePath: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.String.toCharArray: 0,02% (1 inclusive / 1 exclusive)
  1: java.util.Vector.<init>: 0,1% (5 inclusive / 5 exclusive)
  1: sun.util.locale.LocaleObjectCache.get: 0,1% (5 inclusive / 0 exclusive)
    2: java.util.ResourceBundle$Control$CandidateListCache.createObject: 0,1% (5 inclusive / 0 exclusive)
      3: java.util.ResourceBundle$Control$CandidateListCache.createObject: 0,1% (5 inclusive / 0 exclusive)
        4: java.util.ResourceBundle$Control$CandidateListCache.getDefaultList: 0,1% (5 inclusive / 5 exclusive)
  1: java.util.zip.ZipFile.getInflater: 0,1% (5 inclusive / 5 exclusive)
  1: java.util.regex.Pattern.matches: 0,1% (5 inclusive / 0 exclusive)
    2: java.util.regex.Pattern.compile: 0,1% (5 inclusive / 0 exclusive)
      3: java.util.regex.Pattern.<init>: 0,1% (5 inclusive / 0 exclusive)
        4: java.util.regex.Pattern.compile: 0,1% (5 inclusive / 5 exclusive)
  1: sun.nio.fs.DefaultFileSystemProvider.create: 0,1% (5 inclusive / 2 exclusive)
    2: sun.nio.fs.WindowsFileSystemProvider.<init>: 0,06% (3 inclusive / 0 exclusive)
      3: sun.nio.fs.WindowsFileSystem.<init>: 0,04% (2 inclusive / 2 exclusive)
      3: sun.nio.fs.WindowsFileSystem.<clinit>: 0,02% (1 inclusive / 0 exclusive)
        4: java.util.Collections.unmodifiableSet: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.code.Symbol$TypeSymbol.<init>: 0,1% (5 inclusive / 0 exclusive)
    2: com.sun.tools.javac.code.Symbol.<init>: 0,1% (5 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,1% (5 inclusive / 5 exclusive)
  1: java.util.HashSet.<init>: 0,1% (5 inclusive / 0 exclusive)
    2: java.util.AbstractSet.<init>: 0,04% (2 inclusive / 0 exclusive)
      3: java.util.AbstractCollection.<init>: 0,04% (2 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,04% (2 inclusive / 2 exclusive)
    2: java.util.HashMap.<init>: 0,04% (2 inclusive / 1 exclusive)
      3: java.util.AbstractMap.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
    2: java.util.AbstractCollection.addAll: 0,02% (1 inclusive / 0 exclusive)
      3: java.util.AbstractList.iterator: 0,02% (1 inclusive / 1 exclusive)
  1: driver.SourceRepository.hint: 0,1% (5 inclusive / 0 exclusive)
    2: java.io.File.exists: 0,1% (5 inclusive / 0 exclusive)
      3: java.io.WinNTFileSystem.getBooleanAttributes: 0,1% (5 inclusive / 5 exclusive)
  1: java.io.FilterOutputStream.close: 0,08% (4 inclusive / 0 exclusive)
    2: java.io.FileOutputStream.close: 0,08% (4 inclusive / 0 exclusive)
      3: java.io.FileOutputStream.close0: 0,08% (4 inclusive / 4 exclusive)
  1: java.io.FileOutputStream.close0: 0,08% (4 inclusive / 4 exclusive)
  1: java.net.URLClassLoader.findClass: 0,08% (4 inclusive / 0 exclusive)
    2: java.net.URLClassLoader$1.<init>: 0,04% (2 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,04% (2 inclusive / 2 exclusive)
    2: java.security.AccessController.doPrivileged: 0,04% (2 inclusive / 2 exclusive)
  1: com.sun.tools.javac.util.Name$Table.fromString: 0,08% (4 inclusive / 0 exclusive)
    2: java.lang.String.toCharArray: 0,08% (4 inclusive / 4 exclusive)
  1: java.io.FileOutputStream.close: 0,08% (4 inclusive / 0 exclusive)
    2: java.io.FileOutputStream.close0: 0,08% (4 inclusive / 4 exclusive)
  1: java.lang.Throwable.<init>: 0,08% (4 inclusive / 0 exclusive)
    2: java.lang.Throwable.fillInStackTrace: 0,04% (2 inclusive / 0 exclusive)
      3: java.lang.Throwable.fillInStackTrace: 0,04% (2 inclusive / 2 exclusive)
    2: java.lang.Object.<init>: 0,04% (2 inclusive / 2 exclusive)
  1: trees.MatchFinder.trace: 0,08% (4 inclusive / 1 exclusive)
    2: trees.MatchIterator.trace: 0,06% (3 inclusive / 0 exclusive)
      3: java.util.Vector.iterator: 0,06% (3 inclusive / 3 exclusive)
  1: java.net.URLClassLoader.getAndVerifyPackage: 0,08% (4 inclusive / 0 exclusive)
    2: java.lang.ClassLoader.getPackage: 0,04% (2 inclusive / 0 exclusive)
      3: java.lang.ClassLoader.getPackage: 0,04% (2 inclusive / 2 exclusive)
    2: java.net.URLClassLoader.isSealed: 0,04% (2 inclusive / 0 exclusive)
      3: java.lang.String.replace: 0,04% (2 inclusive / 2 exclusive)
  1: com.sun.tools.javac.util.Names.fromString: 0,08% (4 inclusive / 0 exclusive)
    2: com.sun.tools.javac.util.Name$Table.fromString: 0,08% (4 inclusive / 0 exclusive)
      3: java.lang.String.toCharArray: 0,08% (4 inclusive / 4 exclusive)
  1: java.util.EnumSet.noneOf: 0,08% (4 inclusive / 4 exclusive)
  1: com.sun.tools.javac.jvm.ClassReader.enterClass: 0,08% (4 inclusive / 0 exclusive)
    2: com.sun.tools.javac.code.Symbol$TypeSymbol.formFlatName: 0,08% (4 inclusive / 0 exclusive)
      3: com.sun.tools.javac.util.Name.append: 0,08% (4 inclusive / 4 exclusive)
  1: java.lang.Exception.<init>: 0,08% (4 inclusive / 0 exclusive)
    2: java.lang.Throwable.<init>: 0,08% (4 inclusive / 0 exclusive)
      3: java.lang.Throwable.fillInStackTrace: 0,04% (2 inclusive / 0 exclusive)
        4: java.lang.Throwable.fillInStackTrace: 0,04% (2 inclusive / 2 exclusive)
      3: java.lang.Object.<init>: 0,04% (2 inclusive / 2 exclusive)
  1: java.util.Collections.unmodifiableMap: 0,08% (4 inclusive / 4 exclusive)
  1: com.sun.tools.javac.file.ZipFileIndex.getRelativeDirectory: 0,08% (4 inclusive / 0 exclusive)
    2: com.sun.tools.javac.file.RelativePath$RelativeDirectory.<init>: 0,08% (4 inclusive / 0 exclusive)
      3: com.sun.tools.javac.file.RelativePath.<init>: 0,06% (3 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,06% (3 inclusive / 3 exclusive)
      3: java.lang.StringBuilder.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.AbstractStringBuilder.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: sun.nio.ch.Util.<clinit>: 0,08% (4 inclusive / 4 exclusive)
  1: com.sun.tools.javac.code.Types$DefaultTypeVisitor.<init>: 0,08% (4 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,08% (4 inclusive / 4 exclusive)
  1: java.util.ResourceBundle$Control.newBundle: 0,08% (4 inclusive / 4 exclusive)
  1: java.nio.file.FileSystems$DefaultFileSystemHolder.defaultFileSystem: 0,08% (4 inclusive / 2 exclusive)
    2: java.net.URI.create: 0,04% (2 inclusive / 0 exclusive)
      3: java.net.URI.<init>: 0,04% (2 inclusive / 2 exclusive)
  1: sun.nio.ch.Util$4.run: 0,08% (4 inclusive / 0 exclusive)
    2: java.lang.Class.forName: 0,08% (4 inclusive / 0 exclusive)
      3: java.lang.Class.forName0: 0,08% (4 inclusive / 4 exclusive)
  1: java.util.zip.ZipFile.getZipEntry: 0,08% (4 inclusive / 3 exclusive)
    2: java.util.zip.ZipFile.getEntryFlag: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.jvm.ClassReader.includeClassFile: 0,08% (4 inclusive / 0 exclusive)
    2: com.sun.tools.javac.jvm.ClassReader.enterClass: 0,08% (4 inclusive / 0 exclusive)
      3: com.sun.tools.javac.code.Symbol$TypeSymbol.formFlatName: 0,08% (4 inclusive / 0 exclusive)
        4: com.sun.tools.javac.util.Name.append: 0,08% (4 inclusive / 4 exclusive)
  1: java.nio.file.Paths.get: 0,08% (4 inclusive / 0 exclusive)
    2: sun.nio.fs.WindowsFileSystem.getPath: 0,04% (2 inclusive / 2 exclusive)
    2: java.nio.file.FileSystems.getDefault: 0,04% (2 inclusive / 0 exclusive)
      3: java.nio.file.FileSystems$DefaultFileSystemHolder.<clinit>: 0,04% (2 inclusive / 0 exclusive)
        4: java.nio.file.FileSystems$DefaultFileSystemHolder.defaultFileSystem: 0,04% (2 inclusive / 2 exclusive)
  1: java.nio.file.FileSystems$DefaultFileSystemHolder.<clinit>: 0,08% (4 inclusive / 0 exclusive)
    2: java.nio.file.FileSystems$DefaultFileSystemHolder.defaultFileSystem: 0,08% (4 inclusive / 2 exclusive)
      3: java.net.URI.create: 0,04% (2 inclusive / 0 exclusive)
        4: java.net.URI.<init>: 0,04% (2 inclusive / 2 exclusive)
  1: java.security.SecureClassLoader.getProtectionDomain: 0,08% (4 inclusive / 0 exclusive)
    2: sun.misc.Launcher$AppClassLoader.getPermissions: 0,08% (4 inclusive / 0 exclusive)
      3: java.net.URLClassLoader.getPermissions: 0,08% (4 inclusive / 0 exclusive)
        4: sun.net.www.protocol.file.FileURLConnection.getPermission: 0,04% (2 inclusive / 2 exclusive)
        4: java.security.Permissions.add: 0,02% (1 inclusive / 1 exclusive)
        4: java.security.SecureClassLoader.getPermissions: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.file.ZipFileIndexArchive.getFileObject: 0,08% (4 inclusive / 0 exclusive)
    2: com.sun.tools.javac.file.ZipFileIndexArchive$ZipFileIndexFileObject.<init>: 0,06% (3 inclusive / 0 exclusive)
      3: com.sun.tools.javac.file.BaseFileObject.<init>: 0,06% (3 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,06% (3 inclusive / 3 exclusive)
    2: com.sun.tools.javac.file.RelativePath$RelativeFile.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.StringBuilder.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.AbstractStringBuilder.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: sun.misc.Perf.createLong: 0,08% (4 inclusive / 4 exclusive)
  1: java.util.ResourceBundle$Control.<clinit>: 0,08% (4 inclusive / 4 exclusive)
  1: com.sun.tools.javac.code.Type$ClassType.<init>: 0,08% (4 inclusive / 0 exclusive)
    2: com.sun.tools.javac.code.Type.<init>: 0,08% (4 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,08% (4 inclusive / 4 exclusive)
  1: java.util.ResourceBundle.loadBundle: 0,08% (4 inclusive / 0 exclusive)
    2: java.util.ResourceBundle$Control.newBundle: 0,08% (4 inclusive / 4 exclusive)
  1: java.util.LinkedList.linkLast: 0,08% (4 inclusive / 4 exclusive)
  1: java.util.zip.ZipFile$ZipFileInflaterInputStream.fill: 0,08% (4 inclusive / 0 exclusive)
    2: java.util.zip.ZipFile$ZipFileInputStream.read: 0,08% (4 inclusive / 0 exclusive)
      3: java.util.zip.ZipFile.access$1400: 0,08% (4 inclusive / 0 exclusive)
        4: java.util.zip.ZipFile.read: 0,08% (4 inclusive / 4 exclusive)
  1: java.lang.Class.getAnnotation: 0,08% (4 inclusive / 0 exclusive)
    2: java.lang.Class.initAnnotationsIfNecessary: 0,08% (4 inclusive / 4 exclusive)
  1: java.util.HashMap.newKeyIterator: 0,08% (4 inclusive / 4 exclusive)
  1: com.sun.tools.javac.util.JCDiagnostic$Factory.qualify: 0,08% (4 inclusive / 0 exclusive)
    2: java.lang.StringBuilder.toString: 0,04% (2 inclusive / 0 exclusive)
      3: java.lang.String.<init>: 0,04% (2 inclusive / 0 exclusive)
        4: java.util.Arrays.copyOfRange: 0,02% (1 inclusive / 1 exclusive)
        4: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
    2: java.lang.StringBuilder.<init>: 0,04% (2 inclusive / 0 exclusive)
      3: java.lang.AbstractStringBuilder.<init>: 0,04% (2 inclusive / 1 exclusive)
        4: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.api.ClientCodeWrapper.isTrusted: 0,08% (4 inclusive / 0 exclusive)
    2: java.lang.Class.isAnnotationPresent: 0,08% (4 inclusive / 0 exclusive)
      3: java.lang.Class.getAnnotation: 0,08% (4 inclusive / 0 exclusive)
        4: java.lang.Class.initAnnotationsIfNecessary: 0,08% (4 inclusive / 4 exclusive)
  1: java.lang.Class.isAnnotationPresent: 0,08% (4 inclusive / 0 exclusive)
    2: java.lang.Class.getAnnotation: 0,08% (4 inclusive / 0 exclusive)
      3: java.lang.Class.initAnnotationsIfNecessary: 0,08% (4 inclusive / 4 exclusive)
  1: com.sun.tools.javac.util.ListBuffer.append: 0,08% (4 inclusive / 0 exclusive)
    2: com.sun.tools.javac.util.List.<init>: 0,08% (4 inclusive / 0 exclusive)
      3: java.util.AbstractCollection.<init>: 0,08% (4 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,08% (4 inclusive / 4 exclusive)
  1: java.nio.file.FileSystems$DefaultFileSystemHolder.getDefaultProvider: 0,08% (4 inclusive / 0 exclusive)
    2: sun.nio.fs.DefaultFileSystemProvider.create: 0,08% (4 inclusive / 2 exclusive)
      3: sun.nio.fs.WindowsFileSystemProvider.<init>: 0,04% (2 inclusive / 0 exclusive)
        4: sun.nio.fs.WindowsFileSystem.<init>: 0,04% (2 inclusive / 2 exclusive)
  1: com.sun.tools.javac.file.BaseFileObject.removeExtension: 0,08% (4 inclusive / 0 exclusive)
    2: java.lang.String.substring: 0,08% (4 inclusive / 0 exclusive)
      3: java.lang.String.<init>: 0,08% (4 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,08% (4 inclusive / 4 exclusive)
  1: java.util.LinkedList.add: 0,08% (4 inclusive / 0 exclusive)
    2: java.util.LinkedList.linkLast: 0,08% (4 inclusive / 4 exclusive)
  1: sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor: 0,08% (4 inclusive / 4 exclusive)
  1: sun.misc.Launcher$AppClassLoader.getPermissions: 0,08% (4 inclusive / 0 exclusive)
    2: java.net.URLClassLoader.getPermissions: 0,08% (4 inclusive / 0 exclusive)
      3: sun.net.www.protocol.file.FileURLConnection.getPermission: 0,04% (2 inclusive / 2 exclusive)
      3: java.security.Permissions.add: 0,02% (1 inclusive / 1 exclusive)
      3: java.security.SecureClassLoader.getPermissions: 0,02% (1 inclusive / 1 exclusive)
  1: sun.net.www.ParseUtil.encodePath: 0,08% (4 inclusive / 2 exclusive)
    2: java.lang.String.toCharArray: 0,02% (1 inclusive / 1 exclusive)
    2: java.lang.String.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: java.util.zip.ZipCoder.getBytes: 0,08% (4 inclusive / 2 exclusive)
    2: java.util.Arrays.copyOf: 0,02% (1 inclusive / 1 exclusive)
    2: java.lang.String.toCharArray: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.code.Types$SimpleVisitor.<init>: 0,08% (4 inclusive / 0 exclusive)
    2: com.sun.tools.javac.code.Types$DefaultTypeVisitor.<init>: 0,08% (4 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,08% (4 inclusive / 4 exclusive)
  1: java.lang.Class.initAnnotationsIfNecessary: 0,08% (4 inclusive / 4 exclusive)
  1: java.nio.file.Files.readAttributes: 0,08% (4 inclusive / 0 exclusive)
    2: sun.nio.fs.WindowsFileSystemProvider.readAttributes: 0,08% (4 inclusive / 0 exclusive)
      3: sun.nio.fs.WindowsFileSystemProvider.getFileAttributeView: 0,06% (3 inclusive / 1 exclusive)
        4: sun.nio.fs.WindowsFileAttributeViews.createBasicView: 0,04% (2 inclusive / 2 exclusive)
      3: sun.nio.fs.WindowsFileAttributeViews$Basic.readAttributes: 0,02% (1 inclusive / 0 exclusive)
        4: sun.nio.fs.WindowsFileAttributeViews$Basic.readAttributes: 0,02% (1 inclusive / 1 exclusive)
  1: java.util.Vector.iterator: 0,06% (3 inclusive / 3 exclusive)
  1: java.io.FileInputStream.close: 0,06% (3 inclusive / 0 exclusive)
    2: java.io.FileInputStream.close0: 0,06% (3 inclusive / 3 exclusive)
  1: com.sun.tools.javac.util.ListBuffer.<init>: 0,06% (3 inclusive / 0 exclusive)
    2: java.util.AbstractQueue.<init>: 0,06% (3 inclusive / 0 exclusive)
      3: java.util.AbstractCollection.<init>: 0,06% (3 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,06% (3 inclusive / 3 exclusive)
  1: java.util.HashMap.keySet: 0,06% (3 inclusive / 3 exclusive)
  1: compiler.java.DynamicJavaCompiler.compile: 0,06% (3 inclusive / 0 exclusive)
    2: com.sun.tools.javac.api.JavacTool.getTask: 0,06% (3 inclusive / 0 exclusive)
      3: com.sun.tools.javac.api.JavacTool.getTask: 0,06% (3 inclusive / 0 exclusive)
        4: java.util.Collections$UnmodifiableCollection.iterator: 0,06% (3 inclusive / 3 exclusive)
  1: java.util.concurrent.ConcurrentHashMap$HashEntry.<init>: 0,06% (3 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,06% (3 inclusive / 3 exclusive)
  1: java.util.concurrent.ConcurrentHashMap.putIfAbsent: 0,06% (3 inclusive / 0 exclusive)
    2: java.util.concurrent.ConcurrentHashMap$Segment.put: 0,06% (3 inclusive / 0 exclusive)
      3: java.util.concurrent.ConcurrentHashMap$HashEntry.<init>: 0,06% (3 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,06% (3 inclusive / 3 exclusive)
  1: sun.nio.fs.WindowsFileSystemProvider.<init>: 0,06% (3 inclusive / 0 exclusive)
    2: sun.nio.fs.WindowsFileSystem.<init>: 0,04% (2 inclusive / 2 exclusive)
    2: sun.nio.fs.WindowsFileSystem.<clinit>: 0,02% (1 inclusive / 0 exclusive)
      3: java.util.Collections.unmodifiableSet: 0,02% (1 inclusive / 1 exclusive)
  1: java.lang.ThreadLocal.get: 0,06% (3 inclusive / 0 exclusive)
    2: java.lang.ThreadLocal.setInitialValue: 0,04% (2 inclusive / 0 exclusive)
      3: java.lang.ThreadLocal.createMap: 0,04% (2 inclusive / 2 exclusive)
    2: java.lang.Thread.currentThread: 0,02% (1 inclusive / 1 exclusive)
  1: java.io.Writer.<init>: 0,06% (3 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,06% (3 inclusive / 3 exclusive)
  1: java.util.Collections.emptyIterator: 0,06% (3 inclusive / 3 exclusive)
  1: trees.MatchIterator.trace: 0,06% (3 inclusive / 0 exclusive)
    2: java.util.Vector.iterator: 0,06% (3 inclusive / 3 exclusive)
  1: com.sun.tools.javac.api.JavacTool.getTask: 0,06% (3 inclusive / 0 exclusive)
    2: java.util.Collections$UnmodifiableCollection.iterator: 0,06% (3 inclusive / 3 exclusive)
  1: java.io.FileInputStream.close0: 0,06% (3 inclusive / 3 exclusive)
  1: com.sun.tools.javac.util.SharedNameTable.fromUtf: 0,06% (3 inclusive / 0 exclusive)
    2: com.sun.tools.javac.util.SharedNameTable$NameImpl.<init>: 0,06% (3 inclusive / 0 exclusive)
      3: com.sun.tools.javac.util.Name.<init>: 0,06% (3 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,06% (3 inclusive / 3 exclusive)
  1: com.sun.tools.javac.comp.Resolve.selectBest: 0,06% (3 inclusive / 0 exclusive)
    2: com.sun.tools.javac.comp.Resolve.rawInstantiate: 0,06% (3 inclusive / 0 exclusive)
      3: com.sun.tools.javac.comp.Resolve.checkRawArgumentsAcceptable: 0,06% (3 inclusive / 2 exclusive)
        4: com.sun.tools.javac.comp.Resolve$InapplicableMethodException.setMessage: 0,02% (1 inclusive / 1 exclusive)
  1: java.util.Collections$EmptyList.iterator: 0,06% (3 inclusive / 0 exclusive)
    2: java.util.Collections.emptyIterator: 0,06% (3 inclusive / 3 exclusive)
  1: sun.misc.Launcher$AppClassLoader.loadClass: 0,06% (3 inclusive / 0 exclusive)
    2: java.lang.ClassLoader.loadClass: 0,06% (3 inclusive / 0 exclusive)
      3: java.net.URLClassLoader.findClass: 0,02% (1 inclusive / 0 exclusive)
        4: java.security.AccessController.doPrivileged: 0,02% (1 inclusive / 1 exclusive)
      3: java.lang.ClassLoader.findLoadedClass: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.ClassLoader.findLoadedClass0: 0,02% (1 inclusive / 1 exclusive)
      3: java.lang.ClassLoader.getClassLoadingLock: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: sun.nio.fs.WindowsPath.resolve: 0,06% (3 inclusive / 3 exclusive)
  1: com.sun.tools.javac.file.ZipFileIndex$DirectoryEntry.getEntry: 0,06% (3 inclusive / 0 exclusive)
    2: com.sun.tools.javac.file.ZipFileIndex$Entry.<init>: 0,06% (3 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,06% (3 inclusive / 3 exclusive)
  1: com.sun.tools.javac.file.RelativePath$RelativeFile.dirname: 0,06% (3 inclusive / 0 exclusive)
    2: com.sun.tools.javac.file.RelativePath$RelativeDirectory.<init>: 0,04% (2 inclusive / 0 exclusive)
      3: com.sun.tools.javac.file.RelativePath.<init>: 0,04% (2 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,04% (2 inclusive / 2 exclusive)
    2: java.lang.String.substring: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.String.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: sun.net.www.protocol.jar.Handler.parseContextSpec: 0,06% (3 inclusive / 0 exclusive)
    2: java.lang.StringBuilder.toString: 0,04% (2 inclusive / 0 exclusive)
      3: java.lang.String.<init>: 0,04% (2 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
        4: java.util.Arrays.copyOfRange: 0,02% (1 inclusive / 1 exclusive)
    2: java.lang.StringBuilder.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.AbstractStringBuilder.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: grammar.Expression$StringLiteral.accept: 0,06% (3 inclusive / 0 exclusive)
    2: grammar.ExpressionTreeCleaner.visit: 0,06% (3 inclusive / 0 exclusive)
      3: util.StringUtils.escape: 0,06% (3 inclusive / 0 exclusive)
        4: java.lang.String.toCharArray: 0,06% (3 inclusive / 3 exclusive)
  1: sun.nio.fs.WindowsNativeDispatcher.GetFileAttributesEx0: 0,06% (3 inclusive / 3 exclusive)
  1: java.util.concurrent.ConcurrentHashMap$Segment.put: 0,06% (3 inclusive / 0 exclusive)
    2: java.util.concurrent.ConcurrentHashMap$HashEntry.<init>: 0,06% (3 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,06% (3 inclusive / 3 exclusive)
  1: java.util.AbstractQueue.<init>: 0,06% (3 inclusive / 0 exclusive)
    2: java.util.AbstractCollection.<init>: 0,06% (3 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,06% (3 inclusive / 3 exclusive)
  1: files.RelativeSourcePath.<init>: 0,06% (3 inclusive / 0 exclusive)
    2: sun.nio.fs.WindowsPath.resolve: 0,06% (3 inclusive / 0 exclusive)
      3: sun.nio.fs.WindowsPath.resolve: 0,06% (3 inclusive / 3 exclusive)
  1: sun.nio.fs.WindowsDirectoryStream$WindowsDirectoryIterator.readNextEntry: 0,06% (3 inclusive / 0 exclusive)
    2: sun.nio.fs.WindowsDirectoryStream$WindowsDirectoryIterator.acceptEntry: 0,04% (2 inclusive / 0 exclusive)
      3: sun.nio.fs.WindowsPath.createFromNormalizedPath: 0,04% (2 inclusive / 2 exclusive)
    2: sun.nio.fs.WindowsFileAttributes.fromFindData: 0,02% (1 inclusive / 0 exclusive)
      3: sun.nio.fs.WindowsFileAttributes.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: sun.nio.fs.WindowsNativeDispatcher.<clinit>: 0,06% (3 inclusive / 1 exclusive)
    2: sun.nio.fs.WindowsNativeDispatcher.initIDs: 0,04% (2 inclusive / 2 exclusive)
  1: com.sun.tools.javac.code.Symtab.enterBinop: 0,06% (3 inclusive / 0 exclusive)
    2: com.sun.tools.javac.util.Names.fromString: 0,04% (2 inclusive / 0 exclusive)
      3: com.sun.tools.javac.util.Name$Table.fromString: 0,04% (2 inclusive / 0 exclusive)
        4: java.lang.String.toCharArray: 0,04% (2 inclusive / 2 exclusive)
    2: com.sun.tools.javac.code.Type$MethodType.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.code.Type.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.file.BaseFileObject.<init>: 0,06% (3 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,06% (3 inclusive / 3 exclusive)
  1: java.security.Permissions.add: 0,06% (3 inclusive / 1 exclusive)
    2: java.security.Permissions.getPermissionCollection: 0,04% (2 inclusive / 0 exclusive)
      3: java.io.FilePermission.newPermissionCollection: 0,04% (2 inclusive / 2 exclusive)
  1: java.lang.String.concat: 0,06% (3 inclusive / 0 exclusive)
    2: java.lang.String.<init>: 0,06% (3 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,06% (3 inclusive / 3 exclusive)
  1: driver.RequiresParser.parseRequire: 0,06% (3 inclusive / 0 exclusive)
    2: files.RelativeSourcePath.<init>: 0,06% (3 inclusive / 0 exclusive)
      3: sun.nio.fs.WindowsPath.resolve: 0,06% (3 inclusive / 0 exclusive)
        4: sun.nio.fs.WindowsPath.resolve: 0,06% (3 inclusive / 3 exclusive)
  1: java.util.Collections$UnmodifiableCollection.iterator: 0,06% (3 inclusive / 3 exclusive)
  1: java.util.HashMap.resize: 0,06% (3 inclusive / 3 exclusive)
  1: java.util.jar.Attributes.read: 0,06% (3 inclusive / 0 exclusive)
    2: java.util.jar.Attributes.putValue: 0,04% (2 inclusive / 2 exclusive)
    2: java.lang.String.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.file.ZipFileIndexArchive$ZipFileIndexFileObject.<init>: 0,06% (3 inclusive / 0 exclusive)
    2: com.sun.tools.javac.file.BaseFileObject.<init>: 0,06% (3 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,06% (3 inclusive / 3 exclusive)
  1: com.sun.tools.javac.code.Types$UnaryVisitor.<init>: 0,06% (3 inclusive / 0 exclusive)
    2: com.sun.tools.javac.code.Types$SimpleVisitor.<init>: 0,06% (3 inclusive / 0 exclusive)
      3: com.sun.tools.javac.code.Types$DefaultTypeVisitor.<init>: 0,06% (3 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,06% (3 inclusive / 3 exclusive)
  1: com.sun.tools.javac.file.ZipFileIndex$DirectoryEntry.access$100: 0,06% (3 inclusive / 0 exclusive)
    2: com.sun.tools.javac.file.ZipFileIndex$DirectoryEntry.getEntry: 0,06% (3 inclusive / 0 exclusive)
      3: com.sun.tools.javac.file.ZipFileIndex$Entry.<init>: 0,06% (3 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,06% (3 inclusive / 3 exclusive)
  1: sun.nio.fs.WindowsFileSystemProvider.getFileAttributeView: 0,06% (3 inclusive / 1 exclusive)
    2: sun.nio.fs.WindowsFileAttributeViews.createBasicView: 0,04% (2 inclusive / 2 exclusive)
  1: com.sun.tools.javac.comp.Resolve.checkRawArgumentsAcceptable: 0,06% (3 inclusive / 2 exclusive)
    2: com.sun.tools.javac.comp.Resolve$InapplicableMethodException.setMessage: 0,02% (1 inclusive / 1 exclusive)
  1: java.util.LinkedHashMap.newKeyIterator: 0,06% (3 inclusive / 3 exclusive)
  1: sun.nio.fs.WindowsNativeDispatcher.GetFileAttributesEx: 0,06% (3 inclusive / 0 exclusive)
    2: sun.nio.fs.WindowsNativeDispatcher.GetFileAttributesEx0: 0,06% (3 inclusive / 3 exclusive)
  1: java.util.regex.Pattern.group0: 0,06% (3 inclusive / 1 exclusive)
    2: java.util.regex.Pattern.expr: 0,04% (2 inclusive / 0 exclusive)
      3: java.util.regex.Pattern.sequence: 0,04% (2 inclusive / 0 exclusive)
        4: java.util.regex.Pattern.family: 0,04% (2 inclusive / 2 exclusive)
  1: com.sun.tools.javac.comp.Resolve.rawInstantiate: 0,06% (3 inclusive / 0 exclusive)
    2: com.sun.tools.javac.comp.Resolve.checkRawArgumentsAcceptable: 0,06% (3 inclusive / 2 exclusive)
      3: com.sun.tools.javac.comp.Resolve$InapplicableMethodException.setMessage: 0,02% (1 inclusive / 1 exclusive)
  1: compiler.MatchTreeTransformer.transformChilds: 0,06% (3 inclusive / 0 exclusive)
    2: java.util.Collections$UnmodifiableCollection.size: 0,04% (2 inclusive / 2 exclusive)
    2: java.util.ArrayList.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.access$000: 0,04% (2 inclusive / 0 exclusive)
    2: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.buildIndex: 0,04% (2 inclusive / 1 exclusive)
      3: java.util.Arrays.sort: 0,02% (1 inclusive / 0 exclusive)
        4: java.util.Arrays$LegacyMergeSort.<clinit>: 0,02% (1 inclusive / 1 exclusive)
  1: sun.misc.MetaIndex.registerDirectory: 0,04% (2 inclusive / 0 exclusive)
    2: java.io.FileReader.<init>: 0,04% (2 inclusive / 0 exclusive)
      3: java.io.FileInputStream.<init>: 0,04% (2 inclusive / 0 exclusive)
        4: java.io.FileInputStream.open: 0,04% (2 inclusive / 2 exclusive)
  1: parser.Matcher.<init>: 0,04% (2 inclusive / 0 exclusive)
    2: source.SourceStream.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
    2: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.util.Options.isSet: 0,04% (2 inclusive / 0 exclusive)
    2: java.lang.StringBuilder.toString: 0,04% (2 inclusive / 0 exclusive)
      3: java.lang.String.<init>: 0,04% (2 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,04% (2 inclusive / 2 exclusive)
  1: com.sun.tools.javac.parser.Keywords.<init>: 0,04% (2 inclusive / 1 exclusive)
    2: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: sun.net.www.protocol.file.FileURLConnection.getPermission: 0,04% (2 inclusive / 2 exclusive)
  1: sun.nio.ch.FileChannelImpl.map: 0,04% (2 inclusive / 1 exclusive)
    2: sun.nio.ch.Util.newMappedByteBufferR: 0,02% (1 inclusive / 0 exclusive)
      3: sun.nio.ch.Util.initDBBRConstructor: 0,02% (1 inclusive / 1 exclusive)
  1: java.io.FileReader.<init>: 0,04% (2 inclusive / 0 exclusive)
    2: java.io.FileInputStream.<init>: 0,04% (2 inclusive / 0 exclusive)
      3: java.io.FileInputStream.open: 0,04% (2 inclusive / 2 exclusive)
  1: sun.nio.fs.WindowsPath.createFromNormalizedPath: 0,04% (2 inclusive / 2 exclusive)
  1: java.net.URLClassLoader.isSealed: 0,04% (2 inclusive / 0 exclusive)
    2: java.lang.String.replace: 0,04% (2 inclusive / 2 exclusive)
  1: java.nio.file.Files.newDirectoryStream: 0,04% (2 inclusive / 0 exclusive)
    2: sun.nio.fs.WindowsFileSystemProvider.newDirectoryStream: 0,04% (2 inclusive / 2 exclusive)
  1: java.lang.ThreadLocal.setInitialValue: 0,04% (2 inclusive / 0 exclusive)
    2: java.lang.ThreadLocal.createMap: 0,04% (2 inclusive / 2 exclusive)
  1: java.io.File.hashCode: 0,04% (2 inclusive / 0 exclusive)
    2: java.io.Win32FileSystem.hashCode: 0,04% (2 inclusive / 0 exclusive)
      3: java.lang.String.toLowerCase: 0,04% (2 inclusive / 2 exclusive)
  1: sun.nio.fs.WindowsDirectoryStream$WindowsDirectoryIterator.acceptEntry: 0,04% (2 inclusive / 0 exclusive)
    2: sun.nio.fs.WindowsPath.createFromNormalizedPath: 0,04% (2 inclusive / 2 exclusive)
  1: sun.nio.fs.WindowsFileSystem.getPath: 0,04% (2 inclusive / 2 exclusive)
  1: com.sun.tools.javac.jvm.ClassReader.readMethod: 0,04% (2 inclusive / 0 exclusive)
    2: com.sun.tools.javac.code.Symbol$MethodSymbol.<init>: 0,04% (2 inclusive / 0 exclusive)
      3: com.sun.tools.javac.code.Symbol.<init>: 0,04% (2 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,04% (2 inclusive / 2 exclusive)
  1: java.util.HashMap.get: 0,04% (2 inclusive / 0 exclusive)
    2: java.io.File.hashCode: 0,04% (2 inclusive / 0 exclusive)
      3: java.io.Win32FileSystem.hashCode: 0,04% (2 inclusive / 0 exclusive)
        4: java.lang.String.toLowerCase: 0,04% (2 inclusive / 2 exclusive)
  1: com.sun.tools.javac.comp.Lower.translateTopLevelClass: 0,04% (2 inclusive / 0 exclusive)
    2: com.sun.tools.javac.code.Scope.<init>: 0,02% (1 inclusive / 1 exclusive)
    2: java.util.HashMap.values: 0,02% (1 inclusive / 1 exclusive)
  1: sun.net.www.protocol.file.FileURLConnection.<init>: 0,04% (2 inclusive / 0 exclusive)
    2: sun.net.www.URLConnection.<init>: 0,04% (2 inclusive / 2 exclusive)
  1: java.security.Permissions.getPermissionCollection: 0,04% (2 inclusive / 0 exclusive)
    2: java.io.FilePermission.newPermissionCollection: 0,04% (2 inclusive / 2 exclusive)
  1: sun.reflect.ReflectionFactory.newMethodAccessor: 0,04% (2 inclusive / 2 exclusive)
  1: com.sun.tools.javac.file.ZipFileIndex.<init>: 0,04% (2 inclusive / 0 exclusive)
    2: com.sun.tools.javac.file.ZipFileIndex.checkIndex: 0,04% (2 inclusive / 0 exclusive)
      3: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.findCENRecord: 0,02% (1 inclusive / 1 exclusive)
      3: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.access$000: 0,02% (1 inclusive / 0 exclusive)
        4: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.buildIndex: 0,02% (1 inclusive / 1 exclusive)
  1: java.lang.ClassLoader.findLoadedClass0: 0,04% (2 inclusive / 2 exclusive)
  1: java.lang.Throwable.fillInStackTrace: 0,04% (2 inclusive / 2 exclusive)
  1: sun.net.www.URLConnection.<init>: 0,04% (2 inclusive / 2 exclusive)
  1: java.util.ResourceBundle.getBundleImpl: 0,04% (2 inclusive / 2 exclusive)
  1: java.lang.ThreadLocal.createMap: 0,04% (2 inclusive / 2 exclusive)
  1: java.net.URI.create: 0,04% (2 inclusive / 0 exclusive)
    2: java.net.URI.<init>: 0,04% (2 inclusive / 2 exclusive)
  1: compiler.util.MatchCreator.new_match: 0,04% (2 inclusive / 0 exclusive)
    2: source.SourceComposed.<init>: 0,04% (2 inclusive / 0 exclusive)
      3: source.SourceString.<init>: 0,04% (2 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,04% (2 inclusive / 2 exclusive)
  1: com.sun.tools.javac.parser.Keywords.instance: 0,04% (2 inclusive / 0 exclusive)
    2: com.sun.tools.javac.parser.Keywords.<init>: 0,04% (2 inclusive / 1 exclusive)
      3: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: java.io.FileInputStream.readBytes: 0,04% (2 inclusive / 2 exclusive)
  1: com.sun.tools.javac.util.ListBuffer.iterator: 0,04% (2 inclusive / 0 exclusive)
    2: com.sun.tools.javac.util.ListBuffer$1.<init>: 0,04% (2 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,04% (2 inclusive / 2 exclusive)
  1: com.sun.tools.javac.util.List.prepend: 0,04% (2 inclusive / 0 exclusive)
    2: com.sun.tools.javac.util.List.<init>: 0,04% (2 inclusive / 0 exclusive)
      3: java.util.AbstractCollection.<init>: 0,04% (2 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,04% (2 inclusive / 2 exclusive)
  1: sun.nio.fs.WindowsFileAttributeViews.createBasicView: 0,04% (2 inclusive / 2 exclusive)
  1: com.sun.tools.javac.main.JavaCompiler.desugar: 0,04% (2 inclusive / 0 exclusive)
    2: com.sun.tools.javac.comp.Lower.translateTopLevelClass: 0,04% (2 inclusive / 0 exclusive)
      3: com.sun.tools.javac.code.Scope.<init>: 0,02% (1 inclusive / 1 exclusive)
      3: java.util.HashMap.values: 0,02% (1 inclusive / 1 exclusive)
  1: java.lang.Class.getEnumConstantsShared: 0,04% (2 inclusive / 0 exclusive)
    2: java.lang.reflect.Method.invoke: 0,04% (2 inclusive / 0 exclusive)
      3: java.lang.reflect.Method.acquireMethodAccessor: 0,04% (2 inclusive / 0 exclusive)
        4: sun.reflect.ReflectionFactory.newMethodAccessor: 0,04% (2 inclusive / 2 exclusive)
  1: com.sun.tools.javac.jvm.Gen.initCode: 0,04% (2 inclusive / 0 exclusive)
    2: com.sun.tools.javac.jvm.Code.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.jvm.Code$State.<init>: 0,02% (1 inclusive / 1 exclusive)
    2: com.sun.tools.javac.jvm.Items.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: sun.nio.fs.WindowsFileSystem.<clinit>: 0,04% (2 inclusive / 0 exclusive)
    2: java.util.HashSet.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: java.util.AbstractCollection.addAll: 0,02% (1 inclusive / 0 exclusive)
        4: java.util.AbstractList.iterator: 0,02% (1 inclusive / 1 exclusive)
    2: java.util.Collections.unmodifiableSet: 0,02% (1 inclusive / 1 exclusive)
  1: java.lang.reflect.Method.invoke: 0,04% (2 inclusive / 0 exclusive)
    2: java.lang.reflect.Method.acquireMethodAccessor: 0,04% (2 inclusive / 0 exclusive)
      3: sun.reflect.ReflectionFactory.newMethodAccessor: 0,04% (2 inclusive / 2 exclusive)
  1: java.util.regex.Pattern.newSlice: 0,04% (2 inclusive / 2 exclusive)
  1: java.lang.reflect.Field.<init>: 0,04% (2 inclusive / 0 exclusive)
    2: java.lang.reflect.AccessibleObject.<init>: 0,04% (2 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,04% (2 inclusive / 2 exclusive)
  1: java.util.regex.Pattern.<clinit>: 0,04% (2 inclusive / 2 exclusive)
  1: sun.net.www.protocol.file.Handler.parseURL: 0,04% (2 inclusive / 0 exclusive)
    2: java.net.URLStreamHandler.parseURL: 0,04% (2 inclusive / 0 exclusive)
      3: java.lang.StringBuilder.<init>: 0,04% (2 inclusive / 0 exclusive)
        4: java.lang.AbstractStringBuilder.<init>: 0,04% (2 inclusive / 2 exclusive)
  1: java.io.FilePermission$1.run: 0,04% (2 inclusive / 0 exclusive)
    2: java.io.File.getCanonicalPath: 0,04% (2 inclusive / 0 exclusive)
      3: java.io.Win32FileSystem.canonicalize: 0,04% (2 inclusive / 0 exclusive)
        4: java.io.WinNTFileSystem.canonicalize0: 0,04% (2 inclusive / 2 exclusive)
  1: java.util.zip.ZipFile$ZipFileInputStream.<init>: 0,04% (2 inclusive / 0 exclusive)
    2: java.io.InputStream.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
    2: java.util.zip.ZipFile.access$1100: 0,02% (1 inclusive / 0 exclusive)
      3: java.util.zip.ZipFile.getEntryCSize: 0,02% (1 inclusive / 1 exclusive)
  1: java.util.AbstractSet.<init>: 0,04% (2 inclusive / 0 exclusive)
    2: java.util.AbstractCollection.<init>: 0,04% (2 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,04% (2 inclusive / 2 exclusive)
  1: java.util.jar.Attributes.putValue: 0,04% (2 inclusive / 2 exclusive)
  1: util.CollectingFileVisitor.visitFile: 0,04% (2 inclusive / 0 exclusive)
    2: sun.nio.fs.WindowsFileSystem$2.matches: 0,04% (2 inclusive / 0 exclusive)
      3: java.util.regex.Pattern.matcher: 0,04% (2 inclusive / 2 exclusive)
  1: com.sun.tools.javac.file.FSInfo.isFile: 0,04% (2 inclusive / 0 exclusive)
    2: java.io.File.isFile: 0,04% (2 inclusive / 0 exclusive)
      3: java.io.WinNTFileSystem.getBooleanAttributes: 0,04% (2 inclusive / 2 exclusive)
  1: com.sun.tools.javac.code.Symbol$MethodSymbol.<init>: 0,04% (2 inclusive / 0 exclusive)
    2: com.sun.tools.javac.code.Symbol.<init>: 0,04% (2 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,04% (2 inclusive / 2 exclusive)
  1: sun.launcher.LauncherHelper.makePlatformString: 0,04% (2 inclusive / 0 exclusive)
    2: java.lang.String.<init>: 0,04% (2 inclusive / 0 exclusive)
      3: java.lang.String.<init>: 0,04% (2 inclusive / 2 exclusive)
  1: sun.nio.ch.Util.load: 0,04% (2 inclusive / 2 exclusive)
  1: com.sun.tools.javac.code.Scope$ImportScope.makeEntry: 0,04% (2 inclusive / 0 exclusive)
    2: com.sun.tools.javac.code.Scope$ImportScope$ImportEntry.<init>: 0,04% (2 inclusive / 0 exclusive)
      3: com.sun.tools.javac.code.Scope$Entry.<init>: 0,04% (2 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,04% (2 inclusive / 2 exclusive)
  1: com.sun.tools.javac.code.Scope$ImportScope$ImportEntry.<init>: 0,04% (2 inclusive / 0 exclusive)
    2: com.sun.tools.javac.code.Scope$Entry.<init>: 0,04% (2 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,04% (2 inclusive / 2 exclusive)
  1: com.sun.tools.javac.jvm.ClassReader.<init>: 0,04% (2 inclusive / 1 exclusive)
    2: com.sun.tools.javac.code.Symtab.instance: 0,02% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.code.Symtab.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: java.nio.file.FileSystems$DefaultFileSystemHolder$1.run: 0,04% (2 inclusive / 0 exclusive)
    2: java.nio.file.FileSystems$DefaultFileSystemHolder.access$000: 0,04% (2 inclusive / 0 exclusive)
      3: java.nio.file.FileSystems$DefaultFileSystemHolder.getDefaultProvider: 0,04% (2 inclusive / 0 exclusive)
        4: sun.nio.fs.DefaultFileSystemProvider.create: 0,04% (2 inclusive / 2 exclusive)
  1: com.sun.tools.javac.code.Symbol$TypeSymbol.formFullName: 0,04% (2 inclusive / 0 exclusive)
    2: com.sun.tools.javac.util.Name.append: 0,04% (2 inclusive / 2 exclusive)
  1: java.lang.ClassLoader.getClassLoadingLock: 0,04% (2 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,04% (2 inclusive / 2 exclusive)
  1: java.util.regex.Pattern.atom: 0,04% (2 inclusive / 0 exclusive)
    2: java.util.regex.Pattern.newSlice: 0,04% (2 inclusive / 2 exclusive)
  1: sun.nio.fs.WindowsDirectoryStream$WindowsDirectoryIterator.hasNext: 0,04% (2 inclusive / 0 exclusive)
    2: sun.nio.fs.WindowsDirectoryStream$WindowsDirectoryIterator.readNextEntry: 0,04% (2 inclusive / 0 exclusive)
      3: sun.nio.fs.WindowsDirectoryStream$WindowsDirectoryIterator.acceptEntry: 0,04% (2 inclusive / 0 exclusive)
        4: sun.nio.fs.WindowsPath.createFromNormalizedPath: 0,04% (2 inclusive / 2 exclusive)
  1: com.sun.tools.javac.main.JavaCompiler.<init>: 0,04% (2 inclusive / 0 exclusive)
    2: com.sun.tools.javac.jvm.ClassReader.instance: 0,02% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.jvm.ClassReader.<init>: 0,02% (1 inclusive / 1 exclusive)
    2: com.sun.tools.javac.util.RichDiagnosticFormatter.instance: 0,02% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.util.RichDiagnosticFormatter.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.util.ListBuffer$1.<init>: 0,04% (2 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,04% (2 inclusive / 2 exclusive)
  1: java.util.ResourceBundle.putBundleInCache: 0,04% (2 inclusive / 2 exclusive)
  1: java.net.URLClassLoader$1.<init>: 0,04% (2 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,04% (2 inclusive / 2 exclusive)
  1: com.sun.tools.javac.file.Paths$Path.addFile: 0,04% (2 inclusive / 0 exclusive)
    2: com.sun.tools.javac.file.FSInfo.isFile: 0,04% (2 inclusive / 0 exclusive)
      3: java.io.File.isFile: 0,04% (2 inclusive / 0 exclusive)
        4: java.io.WinNTFileSystem.getBooleanAttributes: 0,04% (2 inclusive / 2 exclusive)
  1: com.sun.tools.javac.parser.ParserFactory.<init>: 0,04% (2 inclusive / 0 exclusive)
    2: com.sun.tools.javac.parser.Keywords.instance: 0,04% (2 inclusive / 0 exclusive)
      3: com.sun.tools.javac.parser.Keywords.<init>: 0,04% (2 inclusive / 1 exclusive)
        4: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: java.lang.reflect.AccessibleObject.<init>: 0,04% (2 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,04% (2 inclusive / 2 exclusive)
  1: java.lang.reflect.Method.acquireMethodAccessor: 0,04% (2 inclusive / 0 exclusive)
    2: sun.reflect.ReflectionFactory.newMethodAccessor: 0,04% (2 inclusive / 2 exclusive)
  1: java.lang.ClassLoader.getResources: 0,04% (2 inclusive / 0 exclusive)
    2: java.lang.ClassLoader.getBootstrapResources: 0,02% (1 inclusive / 0 exclusive)
      3: sun.misc.URLClassPath.getResources: 0,02% (1 inclusive / 0 exclusive)
        4: sun.misc.URLClassPath.getResources: 0,02% (1 inclusive / 1 exclusive)
    2: java.lang.ClassLoader.findResources: 0,02% (1 inclusive / 0 exclusive)
      3: java.util.Collections.emptyEnumeration: 0,02% (1 inclusive / 1 exclusive)
  1: sun.nio.fs.WindowsFileSystem$2.matches: 0,04% (2 inclusive / 0 exclusive)
    2: java.util.regex.Pattern.matcher: 0,04% (2 inclusive / 2 exclusive)
  1: java.net.URLClassLoader.findResource: 0,04% (2 inclusive / 2 exclusive)
  1: sun.nio.fs.WindowsNativeDispatcher.initIDs: 0,04% (2 inclusive / 2 exclusive)
  1: java.nio.file.FileSystems$DefaultFileSystemHolder.access$000: 0,04% (2 inclusive / 0 exclusive)
    2: java.nio.file.FileSystems$DefaultFileSystemHolder.getDefaultProvider: 0,04% (2 inclusive / 0 exclusive)
      3: sun.nio.fs.DefaultFileSystemProvider.create: 0,04% (2 inclusive / 2 exclusive)
  1: java.util.regex.Pattern.matcher: 0,04% (2 inclusive / 2 exclusive)
  1: com.sun.tools.javac.jvm.Gen.genMethod: 0,04% (2 inclusive / 0 exclusive)
    2: com.sun.tools.javac.jvm.Gen.initCode: 0,04% (2 inclusive / 0 exclusive)
      3: com.sun.tools.javac.jvm.Code.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: com.sun.tools.javac.jvm.Code$State.<init>: 0,02% (1 inclusive / 1 exclusive)
      3: com.sun.tools.javac.jvm.Items.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: java.lang.ClassLoader.findLoadedClass: 0,04% (2 inclusive / 0 exclusive)
    2: java.lang.ClassLoader.findLoadedClass0: 0,04% (2 inclusive / 2 exclusive)
  1: com.sun.tools.javac.parser.JavacParser.term3: 0,04% (2 inclusive / 0 exclusive)
    2: com.sun.tools.javac.parser.JavacParser.arguments: 0,02% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.parser.JavacParser.arguments: 0,02% (1 inclusive / 0 exclusive)
        4: com.sun.tools.javac.parser.Scanner.token: 0,02% (1 inclusive / 1 exclusive)
    2: com.sun.tools.javac.tree.TreeMaker.Unary: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.parser.JavacParser.term2: 0,04% (2 inclusive / 0 exclusive)
    2: com.sun.tools.javac.parser.JavacParser.term2Rest: 0,02% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.parser.JavacParser.newPosStack: 0,02% (1 inclusive / 1 exclusive)
    2: com.sun.tools.javac.parser.JavacParser.term3: 0,02% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.tree.TreeMaker.Unary: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.parser.JavacParser.term1: 0,04% (2 inclusive / 0 exclusive)
    2: com.sun.tools.javac.parser.JavacParser.term2: 0,04% (2 inclusive / 0 exclusive)
      3: com.sun.tools.javac.parser.JavacParser.term2Rest: 0,02% (1 inclusive / 0 exclusive)
        4: com.sun.tools.javac.parser.JavacParser.newPosStack: 0,02% (1 inclusive / 1 exclusive)
      3: com.sun.tools.javac.parser.JavacParser.term3: 0,02% (1 inclusive / 0 exclusive)
        4: com.sun.tools.javac.tree.TreeMaker.Unary: 0,02% (1 inclusive / 1 exclusive)
  1: driver.Config.<init>: 0,04% (2 inclusive / 0 exclusive)
    2: java.nio.file.Paths.get: 0,04% (2 inclusive / 0 exclusive)
      3: sun.nio.fs.WindowsFileSystem.getPath: 0,04% (2 inclusive / 2 exclusive)
  1: java.lang.reflect.Field.copy: 0,04% (2 inclusive / 0 exclusive)
    2: java.lang.reflect.Field.<init>: 0,04% (2 inclusive / 0 exclusive)
      3: java.lang.reflect.AccessibleObject.<init>: 0,04% (2 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,04% (2 inclusive / 2 exclusive)
  1: compiler.util.Quoter$DynamicQuoteMethod.dynamicQuote: 0,04% (2 inclusive / 0 exclusive)
    2: source.SourceString.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
    2: parser.Matcher.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: trees.MatchSpec.<init>: 0,04% (2 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,04% (2 inclusive / 2 exclusive)
  1: com.sun.tools.javac.code.Types$ImplementationCache.get: 0,04% (2 inclusive / 0 exclusive)
    2: com.sun.tools.javac.code.Types$ImplementationCache$Entry.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
    2: com.sun.tools.javac.code.Types$ImplementationCache.implementationInternal: 0,02% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.code.Symbol$MethodSymbol.overrides: 0,02% (1 inclusive / 0 exclusive)
        4: com.sun.tools.javac.code.Types.memberType: 0,02% (1 inclusive / 1 exclusive)
  1: sun.reflect.NativeMethodAccessorImpl.invoke0: 0,04% (2 inclusive / 0 exclusive)
    2: java.util.ServiceLoader.iterator: 0,02% (1 inclusive / 1 exclusive)
    2: grammar.java._E_MacroDefinitions.initialize: 0,02% (1 inclusive / 0 exclusive)
      3: grammar.java.CallbacksMacroDefinition.<clinit>: 0,02% (1 inclusive / 0 exclusive)
        4: compiler.MacroCompiler.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.main.JavaCompiler.instance: 0,04% (2 inclusive / 0 exclusive)
    2: com.sun.tools.javac.main.JavaCompiler.<init>: 0,04% (2 inclusive / 0 exclusive)
      3: com.sun.tools.javac.jvm.ClassReader.instance: 0,02% (1 inclusive / 0 exclusive)
        4: com.sun.tools.javac.jvm.ClassReader.<init>: 0,02% (1 inclusive / 1 exclusive)
      3: com.sun.tools.javac.util.RichDiagnosticFormatter.instance: 0,02% (1 inclusive / 0 exclusive)
        4: com.sun.tools.javac.util.RichDiagnosticFormatter.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: driver.Config.<clinit>: 0,04% (2 inclusive / 0 exclusive)
    2: driver.Config.<init>: 0,04% (2 inclusive / 0 exclusive)
      3: java.nio.file.Paths.get: 0,04% (2 inclusive / 0 exclusive)
        4: sun.nio.fs.WindowsFileSystem.getPath: 0,04% (2 inclusive / 2 exclusive)
  1: source.SourceComposed.<init>: 0,04% (2 inclusive / 0 exclusive)
    2: source.SourceString.<init>: 0,04% (2 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,04% (2 inclusive / 2 exclusive)
  1: java.io.File.isFile: 0,04% (2 inclusive / 0 exclusive)
    2: java.io.WinNTFileSystem.getBooleanAttributes: 0,04% (2 inclusive / 2 exclusive)
  1: java.util.jar.JarVerifier.beginEntry: 0,04% (2 inclusive / 2 exclusive)
  1: java.util.Collections$UnmodifiableCollection.size: 0,04% (2 inclusive / 2 exclusive)
  1: driver.EntryPoint.main: 0,04% (2 inclusive / 0 exclusive)
    2: driver.EntryPoint.run: 0,04% (2 inclusive / 0 exclusive)
      3: driver.EntryPoint.getPaths: 0,04% (2 inclusive / 0 exclusive)
        4: java.util.ArrayList.iterator: 0,04% (2 inclusive / 2 exclusive)
  1: compiler.MacroExpander.transform: 0,04% (2 inclusive / 0 exclusive)
    2: compiler.MatchTreeTransformer.transformChilds: 0,04% (2 inclusive / 0 exclusive)
      3: java.util.Collections$UnmodifiableCollection.size: 0,02% (1 inclusive / 1 exclusive)
      3: java.util.ArrayList.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: sun.net.www.protocol.jar.Handler.parseURL: 0,04% (2 inclusive / 0 exclusive)
    2: java.lang.String.substring: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.String.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
    2: sun.net.www.protocol.jar.Handler.parseContextSpec: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.StringBuilder.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.AbstractStringBuilder.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.code.Scope.<init>: 0,04% (2 inclusive / 1 exclusive)
    2: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: sun.nio.fs.WindowsFileSystem.<init>: 0,04% (2 inclusive / 2 exclusive)
  1: com.sun.tools.javac.code.DeferredLintHandler.flush: 0,04% (2 inclusive / 0 exclusive)
    2: com.sun.tools.javac.util.ListBuffer.iterator: 0,04% (2 inclusive / 0 exclusive)
      3: com.sun.tools.javac.util.ListBuffer$1.<init>: 0,04% (2 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,04% (2 inclusive / 2 exclusive)
  1: java.io.FilePermission.newPermissionCollection: 0,04% (2 inclusive / 2 exclusive)
  1: com.sun.tools.javac.file.ZipFileIndex$DirectoryEntry.<init>: 0,04% (2 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,04% (2 inclusive / 2 exclusive)
  1: java.nio.channels.FileChannel.<clinit>: 0,04% (2 inclusive / 2 exclusive)
  1: java.io.FileInputStream.read: 0,04% (2 inclusive / 0 exclusive)
    2: java.io.FileInputStream.readBytes: 0,04% (2 inclusive / 2 exclusive)
  1: java.util.regex.Pattern$CharPropertyNames.charPropertyFor: 0,04% (2 inclusive / 0 exclusive)
    2: java.util.regex.Pattern$CharPropertyNames$5.make: 0,02% (1 inclusive / 1 exclusive)
    2: java.util.regex.Pattern$CharPropertyNames$2.make: 0,02% (1 inclusive / 0 exclusive)
      3: java.util.regex.Pattern.access$600: 0,02% (1 inclusive / 0 exclusive)
        4: java.util.regex.Pattern.rangeFor: 0,02% (1 inclusive / 1 exclusive)
  1: java.lang.ClassLoader.getPackage: 0,04% (2 inclusive / 2 exclusive)
  1: compiler.util.Quoter.dynamicQuote: 0,04% (2 inclusive / 0 exclusive)
    2: compiler.util.Quoter$DynamicQuoteMethod.dynamicQuote: 0,04% (2 inclusive / 0 exclusive)
      3: source.SourceString.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
      3: parser.Matcher.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: java.lang.StringCoding.deref: 0,04% (2 inclusive / 0 exclusive)
    2: java.lang.ThreadLocal.get: 0,04% (2 inclusive / 0 exclusive)
      3: java.lang.ThreadLocal.setInitialValue: 0,04% (2 inclusive / 0 exclusive)
        4: java.lang.ThreadLocal.createMap: 0,04% (2 inclusive / 2 exclusive)
  1: java.net.URI.<init>: 0,04% (2 inclusive / 2 exclusive)
  1: java.util.jar.Manifest$FastInputStream.fill: 0,04% (2 inclusive / 0 exclusive)
    2: java.util.zip.ZipFile$ZipFileInputStream.read: 0,04% (2 inclusive / 0 exclusive)
      3: java.util.zip.ZipFile.access$1400: 0,04% (2 inclusive / 0 exclusive)
        4: java.util.zip.ZipFile.read: 0,04% (2 inclusive / 2 exclusive)
  1: java.nio.file.FileSystems.getDefault: 0,04% (2 inclusive / 0 exclusive)
    2: java.nio.file.FileSystems$DefaultFileSystemHolder.<clinit>: 0,04% (2 inclusive / 0 exclusive)
      3: java.nio.file.FileSystems$DefaultFileSystemHolder.defaultFileSystem: 0,04% (2 inclusive / 2 exclusive)
  1: com.sun.tools.javac.main.JavaCompiler.parseFiles: 0,02% (1 inclusive / 0 exclusive)
    2: java.util.HashSet.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: java.util.HashMap.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: sun.nio.cs.MS1252.newDecoder: 0,02% (1 inclusive / 1 exclusive)
  1: java.lang.ClassLoader.getBootstrapResources: 0,02% (1 inclusive / 0 exclusive)
    2: sun.misc.URLClassPath.getResources: 0,02% (1 inclusive / 0 exclusive)
      3: sun.misc.URLClassPath.getResources: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.tree.JCTree$JCFieldAccess.<init>: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.tree.JCTree$JCExpression.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.tree.JCTree.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.code.Scope.dup: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.code.Scope.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.code.Scope.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.code.Type$PackageType.<init>: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.code.Type.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: java.util.WeakHashMap$Entry.<init>: 0,02% (1 inclusive / 0 exclusive)
    2: java.lang.ref.WeakReference.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.ref.Reference.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: driver.Context.<clinit>: 0,02% (1 inclusive / 0 exclusive)
    2: grammar.Grammar.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: parser.Match.first: 0,02% (1 inclusive / 0 exclusive)
    2: trees.MatchFinder.find: 0,02% (1 inclusive / 0 exclusive)
      3: trees.MatchFinder.trace: 0,02% (1 inclusive / 1 exclusive)
  1: java.lang.ref.Finalizer.access$100: 0,02% (1 inclusive / 0 exclusive)
    2: java.lang.ref.Finalizer.runFinalizer: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.ref.Finalizer.invokeFinalizeMethod: 0,02% (1 inclusive / 1 exclusive)
  1: parser.Matcher.visitChoice: 0,02% (1 inclusive / 0 exclusive)
    2: parser.Matcher.visitChild: 0,02% (1 inclusive / 0 exclusive)
      3: parser.NestedMemo.get: 0,02% (1 inclusive / 0 exclusive)
        4: parser.Matcher.parse: 0,02% (1 inclusive / 1 exclusive)
  1: java.lang.ref.Finalizer$FinalizerThread.run: 0,02% (1 inclusive / 0 exclusive)
    2: java.lang.ref.Finalizer.access$100: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.ref.Finalizer.runFinalizer: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.ref.Finalizer.invokeFinalizeMethod: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.util.Names.createTable: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.util.SharedNameTable.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.util.SharedNameTable.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: java.io.InputStream.<init>: 0,02% (1 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.file.FSInfo.isDirectory: 0,02% (1 inclusive / 0 exclusive)
    2: java.io.File.isDirectory: 0,02% (1 inclusive / 0 exclusive)
      3: java.io.WinNTFileSystem.getBooleanAttributes: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.file.JavacFileManager.list: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.file.JavacFileManager.listContainer: 0,02% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.file.JavacFileManager.listDirectory: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.util.Names.<init>: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.util.Names.createTable: 0,02% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.util.SharedNameTable.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: com.sun.tools.javac.util.SharedNameTable.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.jvm.ClassReader.readClassOrType: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.jvm.ClassFile.internalize: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.util.Names.fromChars: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.util.SharedNameTable.fromChars: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.parser.Scanner.scanOperator: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.util.Names.fromChars: 0,02% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.util.SharedNameTable.fromChars: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.jvm.Code.emitStackMap: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.jvm.Code.emitStackMapFrame: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.code.Scope$CompoundScope$2$1.nextIterator: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.code.Scope$3.iterator: 0,02% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.code.Scope$3$1.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.parser.JavacParser.newPosStack: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.jvm.ClassReader$2.<init>: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.jvm.ClassReader$AttributeReader.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: grammar.GrammarDSL.chars: 0,02% (1 inclusive / 0 exclusive)
    2: grammar.Expression$CharClass.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: grammar.Expression.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: java.util.Arrays.sort: 0,02% (1 inclusive / 0 exclusive)
    2: java.util.Arrays$LegacyMergeSort.<clinit>: 0,02% (1 inclusive / 1 exclusive)
  1: java.lang.Object.getClass: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.util.JavacMessages.<init>: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.util.JavacMessages.setCurrentLocale: 0,02% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.util.JavacMessages.getBundles: 0,02% (1 inclusive / 0 exclusive)
        4: java.util.ResourceBundle.getBundle: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.util.JCDiagnostic$Factory.create: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.util.JCDiagnostic$Factory.qualify: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.StringBuilder.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.AbstractStringBuilder.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: grammar.java.CallbacksMacroDefinition.<clinit>: 0,02% (1 inclusive / 0 exclusive)
    2: compiler.MacroCompiler.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.code.Types.memberType: 0,02% (1 inclusive / 1 exclusive)
  1: sun.misc.PerfCounter.<clinit>: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.jvm.Code$State.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: files.RelativeSourcePath.fileName: 0,02% (1 inclusive / 0 exclusive)
    2: java.lang.StringBuilder.toString: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.String.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: java.util.Arrays.copyOfRange: 0,02% (1 inclusive / 1 exclusive)
  1: sun.misc.Launcher$BootClassPathHolder$1.run: 0,02% (1 inclusive / 0 exclusive)
    2: java.io.File.getParentFile: 0,02% (1 inclusive / 0 exclusive)
      3: java.io.File.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.tree.TreeMaker.Unary: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.util.RichDiagnosticFormatter.instance: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.util.RichDiagnosticFormatter.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: java.io.StringWriter.toString: 0,02% (1 inclusive / 0 exclusive)
    2: java.lang.StringBuffer.toString: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.String.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: java.util.Arrays.copyOfRange: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.tree.TreeInfo.<init>: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.util.Names.fromString: 0,02% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.util.Name$Table.fromString: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.String.toCharArray: 0,02% (1 inclusive / 1 exclusive)
  1: java.util.Arrays$LegacyMergeSort.<clinit>: 0,02% (1 inclusive / 1 exclusive)
  1: trees.MatchSpec$ExprSpec.<init>: 0,02% (1 inclusive / 0 exclusive)
    2: trees.MatchSpec.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.tree.JCTree.<init>: 0,02% (1 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: java.io.File.getParentFile: 0,02% (1 inclusive / 0 exclusive)
    2: java.io.File.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: java.util.Arrays$ArrayList.<init>: 0,02% (1 inclusive / 0 exclusive)
    2: java.util.AbstractList.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: java.util.AbstractCollection.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: java.util.regex.Pattern.access$600: 0,02% (1 inclusive / 0 exclusive)
    2: java.util.regex.Pattern.rangeFor: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.comp.Check.checkConflicts: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.comp.AttrContext.<init>: 0,02% (1 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: java.util.zip.ZipEntry.<init>: 0,02% (1 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: java.util.Vector.ensureCapacityHelper: 0,02% (1 inclusive / 0 exclusive)
    2: java.util.Vector.grow: 0,02% (1 inclusive / 0 exclusive)
      3: java.util.Arrays.copyOf: 0,02% (1 inclusive / 0 exclusive)
        4: java.util.Arrays.copyOf: 0,02% (1 inclusive / 1 exclusive)
  1: sun.nio.fs.NativeBuffer.release: 0,02% (1 inclusive / 0 exclusive)
    2: sun.nio.fs.NativeBuffers.releaseNativeBuffer: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.ThreadLocal.get: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.Thread.currentThread: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.code.Type$WildcardType.<init>: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.code.Type.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.tree.JCTree$JCExpression.<init>: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.tree.JCTree.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: java.util.jar.JarEntry.<init>: 0,02% (1 inclusive / 0 exclusive)
    2: java.util.zip.ZipEntry.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: java.util.regex.Pattern$Ctype.isSatisfiedBy: 0,02% (1 inclusive / 1 exclusive)
  1: trees.MatchSpec$RuleSpec.<init>: 0,02% (1 inclusive / 0 exclusive)
    2: trees.MatchSpec.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.jvm.ClassWriter.instance: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.jvm.ClassWriter.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.jvm.ClassFile.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.util.RichDiagnosticFormatter.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.comp.Env.<init>: 0,02% (1 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: java.lang.Float.valueOf: 0,02% (1 inclusive / 0 exclusive)
    2: sun.misc.FloatingDecimal.readJavaFormatString: 0,02% (1 inclusive / 0 exclusive)
      3: sun.misc.FloatingDecimal.parseHexString: 0,02% (1 inclusive / 1 exclusive)
  1: sun.nio.ch.FileChannelImpl.size: 0,02% (1 inclusive / 0 exclusive)
    2: java.nio.channels.spi.AbstractInterruptibleChannel.begin: 0,02% (1 inclusive / 1 exclusive)
  1: java.util.zip.ZipFile.getEntryCSize: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.code.Scope$3$1.<init>: 0,02% (1 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: java.util.regex.Pattern$SliceU.match: 0,02% (1 inclusive / 0 exclusive)
    2: java.lang.Character.toLowerCase: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.CharacterDataLatin1.toLowerCase: 0,02% (1 inclusive / 1 exclusive)
  1: java.util.ArrayList.toArray: 0,02% (1 inclusive / 0 exclusive)
    2: java.util.Arrays.copyOf: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.Class.getComponentType: 0,02% (1 inclusive / 1 exclusive)
  1: sun.nio.fs.WindowsFileAttributes.<init>: 0,02% (1 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: grammar.Expression$CharClass.<init>: 0,02% (1 inclusive / 0 exclusive)
    2: grammar.Expression.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.processing.JavacProcessingEnvironment.<clinit>: 0,02% (1 inclusive / 0 exclusive)
    2: java.util.regex.Pattern.compile: 0,02% (1 inclusive / 0 exclusive)
      3: java.util.regex.Pattern.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: java.util.regex.Pattern.compile: 0,02% (1 inclusive / 1 exclusive)
  1: trees.MatchSpec.expr: 0,02% (1 inclusive / 0 exclusive)
    2: trees.MatchSpec$ExprSpec.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: trees.MatchSpec.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.parser.Scanner.nextToken: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.parser.Scanner.scanOperator: 0,02% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.util.Names.fromChars: 0,02% (1 inclusive / 0 exclusive)
        4: com.sun.tools.javac.util.SharedNameTable.fromChars: 0,02% (1 inclusive / 1 exclusive)
  1: java.lang.Class.getComponentType: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.jvm.Pool$Method.<init>: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.code.Symbol$DelegatedSymbol.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.code.Symbol.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: java.security.PrivilegedActionException.<init>: 0,02% (1 inclusive / 0 exclusive)
    2: java.lang.Exception.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.Throwable.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: java.util.Collections$UnmodifiableCollection.toArray: 0,02% (1 inclusive / 0 exclusive)
    2: java.util.ArrayList.toArray: 0,02% (1 inclusive / 0 exclusive)
      3: java.util.Arrays.copyOf: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.Class.getComponentType: 0,02% (1 inclusive / 1 exclusive)
  1: java.io.ObjectStreamField.getClassSignature: 0,02% (1 inclusive / 0 exclusive)
    2: java.lang.StringBuilder.toString: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.String.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: java.util.Arrays.copyOfRange: 0,02% (1 inclusive / 1 exclusive)
  1: sun.misc.PerfCounter.get: 0,02% (1 inclusive / 0 exclusive)
    2: java.nio.DirectLongBufferU.get: 0,02% (1 inclusive / 0 exclusive)
      3: sun.misc.Unsafe.getLong: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.tree.JCTree$JCIdent.accept: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.comp.Attr.visitIdent: 0,02% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.comp.Attr.checkId: 0,02% (1 inclusive / 0 exclusive)
        4: com.sun.tools.javac.comp.Check.checkDeprecated: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.comp.Attr.visitIdent: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.comp.Attr.checkId: 0,02% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.comp.Check.checkDeprecated: 0,02% (1 inclusive / 1 exclusive)
  1: java.lang.ReflectiveOperationException.<init>: 0,02% (1 inclusive / 0 exclusive)
    2: java.lang.Exception.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.Throwable.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: sun.misc.Unsafe.getLong: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.comp.Enter.classEnv: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.comp.AttrContext.dup: 0,02% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.comp.AttrContext.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: grammar.java._A_Lexical.keyword: 0,02% (1 inclusive / 1 exclusive)
  1: compiler.java.StringJavaFileObject.getCharContent: 0,02% (1 inclusive / 0 exclusive)
    2: java.nio.CharBuffer.wrap: 0,02% (1 inclusive / 0 exclusive)
      3: java.nio.CharBuffer.wrap: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.code.Types.implementation: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.code.Types$ImplementationCache.get: 0,02% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.code.Types$ImplementationCache$Entry.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: sun.launcher.LauncherHelper.checkAndLoadMain: 0,02% (1 inclusive / 0 exclusive)
    2: sun.launcher.LauncherHelper.getMainMethod: 0,02% (1 inclusive / 1 exclusive)
  1: java.util.Collections.emptyEnumeration: 0,02% (1 inclusive / 1 exclusive)
  1: java.io.FileDescriptor.<init>: 0,02% (1 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: java.util.AbstractCollection.addAll: 0,02% (1 inclusive / 0 exclusive)
    2: java.util.AbstractList.iterator: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.main.JavacOption$Option.<init>: 0,02% (1 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.code.Symbol$MethodSymbol.overrides: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.code.Types.memberType: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.main.RecognizedOptions$11.<init>: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.main.JavacOption$Option.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.main.JavacOption$Option.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: java.lang.Enum.compareTo: 0,02% (1 inclusive / 0 exclusive)
    2: java.lang.Object.getClass: 0,02% (1 inclusive / 1 exclusive)
  1: sun.misc.PerfCounter.add: 0,02% (1 inclusive / 0 exclusive)
    2: sun.misc.PerfCounter.get: 0,02% (1 inclusive / 0 exclusive)
      3: java.nio.DirectLongBufferU.get: 0,02% (1 inclusive / 0 exclusive)
        4: sun.misc.Unsafe.getLong: 0,02% (1 inclusive / 1 exclusive)
  1: java.nio.DirectLongBufferU.get: 0,02% (1 inclusive / 0 exclusive)
    2: sun.misc.Unsafe.getLong: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.code.Types$ImplementationCache.implementationInternal: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.code.Symbol$MethodSymbol.overrides: 0,02% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.code.Types.memberType: 0,02% (1 inclusive / 1 exclusive)
  1: java.lang.StringCoding$StringDecoder.<init>: 0,02% (1 inclusive / 0 exclusive)
    2: sun.nio.cs.MS1252.newDecoder: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.code.Symtab.initType: 0,02% (1 inclusive / 0 exclusive)
    2: java.lang.StringBuilder.toString: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.String.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: java.util.Arrays.copyOfRange: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.util.Convert.utf2string: 0,02% (1 inclusive / 0 exclusive)
    2: java.lang.String.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.api.JavacTaskImpl.call: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.main.Main.compile: 0,02% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.main.Main.processArgs: 0,02% (1 inclusive / 0 exclusive)
        4: com.sun.tools.javac.code.Source.<clinit>: 0,02% (1 inclusive / 1 exclusive)
  1: java.net.URL.toExternalForm: 0,02% (1 inclusive / 0 exclusive)
    2: java.net.URLStreamHandler.toExternalForm: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.StringBuffer.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.AbstractStringBuilder.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.jvm.ClassWriter.nameType: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.jvm.ClassFile$NameAndType.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: sun.nio.ch.Util.initDBBRConstructor: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.jvm.Code.<init>: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.jvm.Code$State.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.jvm.ClassReader.readClassSymbol: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.jvm.ClassReader.readPool: 0,02% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.jvm.ClassReader.readClassOrType: 0,02% (1 inclusive / 0 exclusive)
        4: com.sun.tools.javac.jvm.ClassFile.internalize: 0,02% (1 inclusive / 1 exclusive)
  1: driver.CompilationDriver.dumpAndOrLoadClass: 0,02% (1 inclusive / 0 exclusive)
    2: compiler.java.CompiledClass.dump: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.jvm.ClassWriter.assembleClassSig: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.util.ByteBuffer.appendBytes: 0,02% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.util.ByteBuffer.appendBytes: 0,02% (1 inclusive / 0 exclusive)
        4: com.sun.tools.javac.util.ByteBuffer.copy: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.main.JavaCompiler.compile: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.main.JavaCompiler.parseFiles: 0,02% (1 inclusive / 0 exclusive)
      3: java.util.HashSet.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: java.util.HashMap.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: sun.misc.Unsafe.getByte: 0,02% (1 inclusive / 1 exclusive)
  1: compiler.util.Quoter.primitiveQuote: 0,02% (1 inclusive / 0 exclusive)
    2: parser.Matcher.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: source.SourceStream.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: java.lang.Character.toLowerCase: 0,02% (1 inclusive / 0 exclusive)
    2: java.lang.CharacterDataLatin1.toLowerCase: 0,02% (1 inclusive / 1 exclusive)
  1: trees.MatchSpec.rule: 0,02% (1 inclusive / 0 exclusive)
    2: trees.MatchSpec$RuleSpec.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: trees.MatchSpec.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.parser.Scanner.token: 0,02% (1 inclusive / 1 exclusive)
  1: java.util.regex.Pattern$CharPropertyNames$5.make: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.code.Types$Subst.visitMethodType: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.code.Type$MethodType.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.code.Type.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.code.Scope$3.iterator: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.code.Scope$3$1.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: grammar.java._B_Expressions.<init>: 0,02% (1 inclusive / 0 exclusive)
    2: grammar.java._A_Lexical.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: grammar.java._A_Lexical.keyword: 0,02% (1 inclusive / 0 exclusive)
        4: grammar.java._A_Lexical.keyword: 0,02% (1 inclusive / 1 exclusive)
  1: parser.Match.getCaptures: 0,02% (1 inclusive / 0 exclusive)
    2: java.util.ArrayList.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: java.util.ArrayList.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: java.util.regex.Pattern$GroupHead.match: 0,02% (1 inclusive / 0 exclusive)
    2: java.util.regex.Pattern$Curly.match: 0,02% (1 inclusive / 0 exclusive)
      3: java.util.regex.Pattern$BmpCharProperty.match: 0,02% (1 inclusive / 0 exclusive)
        4: java.util.regex.Pattern$Ctype.isSatisfiedBy: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.util.Context.put: 0,02% (1 inclusive / 0 exclusive)
    2: java.util.HashMap.put: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.Object.hashCode: 0,02% (1 inclusive / 1 exclusive)
  1: java.lang.CharacterDataLatin1.toLowerCase: 0,02% (1 inclusive / 1 exclusive)
  1: java.util.ServiceLoader.iterator: 0,02% (1 inclusive / 1 exclusive)
  1: java.lang.ref.Finalizer.runFinalizer: 0,02% (1 inclusive / 0 exclusive)
    2: java.lang.ref.Finalizer.invokeFinalizeMethod: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.jvm.ClassReader$AttributeReader.<init>: 0,02% (1 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.comp.AttrContext.dup: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.comp.AttrContext.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.comp.Resolve.findMethod: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.comp.Resolve.selectBest: 0,02% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.comp.Resolve.rawInstantiate: 0,02% (1 inclusive / 0 exclusive)
        4: com.sun.tools.javac.comp.Resolve.checkRawArgumentsAcceptable: 0,02% (1 inclusive / 1 exclusive)
  1: java.util.ArrayList.subList: 0,02% (1 inclusive / 1 exclusive)
  1: java.lang.Integer$IntegerCache.<clinit>: 0,02% (1 inclusive / 0 exclusive)
    2: java.lang.Integer.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.Number.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: sun.nio.cs.MS1252.<clinit>: 0,02% (1 inclusive / 1 exclusive)
  1: java.nio.DirectByteBuffer.get: 0,02% (1 inclusive / 0 exclusive)
    2: sun.misc.Unsafe.getByte: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.comp.Attr.visitTypeArray: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.code.Type$ArrayType.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.code.Type.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: java.lang.ClassLoader.findResources: 0,02% (1 inclusive / 0 exclusive)
    2: java.util.Collections.emptyEnumeration: 0,02% (1 inclusive / 1 exclusive)
  1: java.nio.CharBuffer.wrap: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.code.Types$ImplementationCache$Entry.<init>: 0,02% (1 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: java.io.RandomAccessFile.close0: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.util.ByteBuffer.copy: 0,02% (1 inclusive / 1 exclusive)
  1: sun.nio.cs.UTF_8$Decoder.decodeBufferLoop: 0,02% (1 inclusive / 0 exclusive)
    2: java.nio.DirectByteBuffer.get: 0,02% (1 inclusive / 0 exclusive)
      3: sun.misc.Unsafe.getByte: 0,02% (1 inclusive / 1 exclusive)
  1: java.lang.ref.WeakReference.<init>: 0,02% (1 inclusive / 0 exclusive)
    2: java.lang.ref.Reference.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: driver.DependencyResolver.<init>: 0,02% (1 inclusive / 0 exclusive)
    2: driver.Context.<clinit>: 0,02% (1 inclusive / 0 exclusive)
      3: grammar.Grammar.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.code.Type$ArrayType.<init>: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.code.Type.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.code.Symbol$PackageSymbol.<init>: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.code.Type$PackageType.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.code.Type.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.comp.Check.checkDeprecated: 0,02% (1 inclusive / 1 exclusive)
  1: java.security.SecureClassLoader.getPermissions: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.code.Symbol$DelegatedSymbol.<init>: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.code.Symbol.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.jvm.Items$LocalItem.<init>: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.jvm.Items$Item.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.comp.Lower$1.visitMethodDef: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.comp.Check.checkConflicts: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.main.JavaCompiler.genCode: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.jvm.Gen.genClass: 0,02% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.comp.Env.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.jvm.ClassReader.instance: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.jvm.ClassReader.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: java.util.HashMap.values: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.jvm.ClassFile.<init>: 0,02% (1 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: sun.nio.fs.WindowsFileAttributes.fromFindData: 0,02% (1 inclusive / 0 exclusive)
    2: sun.nio.fs.WindowsFileAttributes.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: source.SourceStream.<init>: 0,02% (1 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.jvm.ClassWriter.<init>: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.jvm.ClassFile.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: sun.misc.FloatingDecimal.parseHexString: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.jvm.ClassReader.readPool: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.jvm.ClassReader.readClassOrType: 0,02% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.jvm.ClassFile.internalize: 0,02% (1 inclusive / 1 exclusive)
  1: java.util.jar.JarFile$JarFileEntry.<init>: 0,02% (1 inclusive / 0 exclusive)
    2: java.util.jar.JarEntry.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: java.util.zip.ZipEntry.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: driver.RequiresParser.parseRequires: 0,02% (1 inclusive / 0 exclusive)
    2: parser.Match.first: 0,02% (1 inclusive / 0 exclusive)
      3: trees.MatchFinder.find: 0,02% (1 inclusive / 0 exclusive)
        4: trees.MatchFinder.trace: 0,02% (1 inclusive / 1 exclusive)
  1: grammar.java._A_Lexical.<init>: 0,02% (1 inclusive / 0 exclusive)
    2: grammar.java._A_Lexical.keyword: 0,02% (1 inclusive / 0 exclusive)
      3: grammar.java._A_Lexical.keyword: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.util.SharedNameTable.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: java.io.DataInputStream.readFully: 0,02% (1 inclusive / 0 exclusive)
    2: java.util.zip.ZipFile$ZipFileInputStream.read: 0,02% (1 inclusive / 0 exclusive)
      3: java.util.zip.ZipFile.access$1400: 0,02% (1 inclusive / 0 exclusive)
        4: java.util.zip.ZipFile.read: 0,02% (1 inclusive / 1 exclusive)
  1: java.net.URL.<init>: 0,02% (1 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.tree.JCTree$JCMethodDecl.accept: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.comp.Lower$1.visitMethodDef: 0,02% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.comp.Check.checkConflicts: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.jvm.ClassFile$NameAndType.<init>: 0,02% (1 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.jvm.Items$Item.<init>: 0,02% (1 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.main.Main.compile: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.main.Main.processArgs: 0,02% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.code.Source.<clinit>: 0,02% (1 inclusive / 1 exclusive)
  1: sun.nio.fs.NativeBuffers.allocNativeBuffer: 0,02% (1 inclusive / 0 exclusive)
    2: sun.nio.fs.NativeBuffer.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: java.util.Vector.grow: 0,02% (1 inclusive / 0 exclusive)
    2: java.util.Arrays.copyOf: 0,02% (1 inclusive / 0 exclusive)
      3: java.util.Arrays.copyOf: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.parser.JavacParser.arguments: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.parser.Scanner.token: 0,02% (1 inclusive / 1 exclusive)
  1: compiler.PostExpansionTransformer.transform: 0,02% (1 inclusive / 0 exclusive)
    2: compiler.MatchTreeTransformer.transformChilds: 0,02% (1 inclusive / 0 exclusive)
      3: java.util.Collections$UnmodifiableCollection.size: 0,02% (1 inclusive / 1 exclusive)
  1: driver.CompilationDriver.dumpAndOrLoadClasses: 0,02% (1 inclusive / 0 exclusive)
    2: driver.CompilationDriver.dumpAndOrLoadClass: 0,02% (1 inclusive / 0 exclusive)
      3: compiler.java.CompiledClass.dump: 0,02% (1 inclusive / 1 exclusive)
  1: java.util.regex.Pattern$Curly.match0: 0,02% (1 inclusive / 0 exclusive)
    2: java.util.regex.Pattern$SliceU.match: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.Character.toLowerCase: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.CharacterDataLatin1.toLowerCase: 0,02% (1 inclusive / 1 exclusive)
  1: sun.misc.FloatingDecimal.readJavaFormatString: 0,02% (1 inclusive / 0 exclusive)
    2: sun.misc.FloatingDecimal.parseHexString: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.code.Source.<clinit>: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.jvm.Items.makeLocalItem: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.jvm.Items$LocalItem.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.jvm.Items$Item.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.<init>: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.findCENRecord: 0,02% (1 inclusive / 1 exclusive)
  1: compiler.MacroCompiler.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.comp.Resolve$InapplicableMethodException.setMessage: 0,02% (1 inclusive / 1 exclusive)
  1: sun.nio.ch.Util.newMappedByteBufferR: 0,02% (1 inclusive / 0 exclusive)
    2: sun.nio.ch.Util.initDBBRConstructor: 0,02% (1 inclusive / 1 exclusive)
  1: driver.DependencyResolver.resolve: 0,02% (1 inclusive / 0 exclusive)
    2: driver.DependencyResolver.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: driver.Context.<clinit>: 0,02% (1 inclusive / 0 exclusive)
        4: grammar.Grammar.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.jvm.Code.emitStackMapFrame: 0,02% (1 inclusive / 1 exclusive)
  1: sun.launcher.LauncherHelper.getMainMethod: 0,02% (1 inclusive / 1 exclusive)
  1: grammar.Expression.<init>: 0,02% (1 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: java.nio.file.FileTreeWalker.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.comp.Attr.checkId: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.comp.Check.checkDeprecated: 0,02% (1 inclusive / 1 exclusive)
  1: java.lang.ref.Reference.<init>: 0,02% (1 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: grammar.java._E_MacroDefinitions.initialize: 0,02% (1 inclusive / 0 exclusive)
    2: grammar.java.CallbacksMacroDefinition.<clinit>: 0,02% (1 inclusive / 0 exclusive)
      3: compiler.MacroCompiler.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.jvm.Code.emitop1w: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.jvm.Code.emitop: 0,02% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.jvm.Code.emitStackMap: 0,02% (1 inclusive / 0 exclusive)
        4: com.sun.tools.javac.jvm.Code.emitStackMapFrame: 0,02% (1 inclusive / 1 exclusive)
  1: grammar.Grammar.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: java.util.ServiceLoader$LazyIterator.hasNext: 0,02% (1 inclusive / 0 exclusive)
    2: java.lang.ClassLoader.getResources: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.ClassLoader.findResources: 0,02% (1 inclusive / 0 exclusive)
        4: java.util.Collections.emptyEnumeration: 0,02% (1 inclusive / 1 exclusive)
  1: java.nio.channels.spi.AbstractInterruptibleChannel.begin: 0,02% (1 inclusive / 1 exclusive)
  1: java.util.regex.Pattern$BmpCharProperty.match: 0,02% (1 inclusive / 0 exclusive)
    2: java.util.regex.Pattern$Ctype.isSatisfiedBy: 0,02% (1 inclusive / 1 exclusive)
  1: java.nio.DirectByteBuffer.asLongBuffer: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.parser.ParserFactory.instance: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.parser.ParserFactory.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.parser.Keywords.instance: 0,02% (1 inclusive / 0 exclusive)
        4: com.sun.tools.javac.parser.Keywords.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.code.Symtab.instance: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.code.Symtab.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: java.util.zip.ZipFile.access$1100: 0,02% (1 inclusive / 0 exclusive)
    2: java.util.zip.ZipFile.getEntryCSize: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.jvm.Gen.genClass: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.comp.Env.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.file.ZipFileIndex.closeFile: 0,02% (1 inclusive / 0 exclusive)
    2: java.io.RandomAccessFile.close: 0,02% (1 inclusive / 0 exclusive)
      3: java.io.RandomAccessFile.close0: 0,02% (1 inclusive / 1 exclusive)
  1: files.Package.<init>: 0,02% (1 inclusive / 0 exclusive)
    2: java.lang.String.split: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.String.split: 0,02% (1 inclusive / 0 exclusive)
        4: java.util.ArrayList.subList: 0,02% (1 inclusive / 1 exclusive)
  1: sun.nio.fs.NativeBuffer.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: java.lang.ref.Finalizer.invokeFinalizeMethod: 0,02% (1 inclusive / 1 exclusive)
  1: java.util.regex.Pattern$CharPropertyNames$2.make: 0,02% (1 inclusive / 0 exclusive)
    2: java.util.regex.Pattern.access$600: 0,02% (1 inclusive / 0 exclusive)
      3: java.util.regex.Pattern.rangeFor: 0,02% (1 inclusive / 1 exclusive)
  1: java.util.regex.Pattern.rangeFor: 0,02% (1 inclusive / 1 exclusive)
  1: java.util.regex.Pattern$Curly.match: 0,02% (1 inclusive / 0 exclusive)
    2: java.util.regex.Pattern$BmpCharProperty.match: 0,02% (1 inclusive / 0 exclusive)
      3: java.util.regex.Pattern$Ctype.isSatisfiedBy: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.jvm.ClassWriter.writePool: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.jvm.ClassWriter.nameType: 0,02% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.jvm.ClassFile$NameAndType.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: java.lang.Object.hashCode: 0,02% (1 inclusive / 1 exclusive)
  1: java.lang.Shutdown.<clinit>: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.parser.JavacParser.term2Rest: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.parser.JavacParser.newPosStack: 0,02% (1 inclusive / 1 exclusive)
  1: java.util.Collections.unmodifiableSet: 0,02% (1 inclusive / 1 exclusive)
  1: java.io.RandomAccessFile.close: 0,02% (1 inclusive / 0 exclusive)
    2: java.io.RandomAccessFile.close0: 0,02% (1 inclusive / 1 exclusive)
  1: sun.reflect.DelegatingMethodAccessorImpl.invoke: 0,02% (1 inclusive / 0 exclusive)
    2: sun.reflect.NativeMethodAccessorImpl.invoke: 0,02% (1 inclusive / 0 exclusive)
      3: sun.reflect.NativeMethodAccessorImpl.invoke0: 0,02% (1 inclusive / 0 exclusive)
        4: java.util.ServiceLoader.iterator: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.jvm.ClassFile.internalize: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.code.Types$TypeRelation.<init>: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.code.Types$SimpleVisitor.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.code.Types$DefaultTypeVisitor.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.comp.Resolve.<init>: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.code.Source.allowVarargs: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.Enum.compareTo: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.Object.getClass: 0,02% (1 inclusive / 1 exclusive)
  1: sun.reflect.NativeMethodAccessorImpl.invoke: 0,02% (1 inclusive / 0 exclusive)
    2: sun.reflect.NativeMethodAccessorImpl.invoke0: 0,02% (1 inclusive / 0 exclusive)
      3: java.util.ServiceLoader.iterator: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.jvm.Code.emitop: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.jvm.Code.emitStackMap: 0,02% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.jvm.Code.emitStackMapFrame: 0,02% (1 inclusive / 1 exclusive)
  1: sun.misc.URLClassPath$FileLoader.findResource: 0,02% (1 inclusive / 0 exclusive)
    2: sun.misc.URLClassPath$FileLoader.getResource: 0,02% (1 inclusive / 0 exclusive)
      3: java.io.File.exists: 0,02% (1 inclusive / 0 exclusive)
        4: java.io.WinNTFileSystem.getBooleanAttributes: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.comp.Resolve.findFun: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.comp.Resolve.selectBest: 0,02% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.comp.Resolve.rawInstantiate: 0,02% (1 inclusive / 0 exclusive)
        4: com.sun.tools.javac.comp.Resolve.checkRawArgumentsAcceptable: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.code.Symtab.enterClass: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.util.Names.fromString: 0,02% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.util.Name$Table.fromString: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.String.toCharArray: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.jvm.Items.<init>: 0,02% (1 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.main.Main.processArgs: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.code.Source.<clinit>: 0,02% (1 inclusive / 1 exclusive)
  1: sun.misc.URLClassPath.getResources: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.util.Name.toString: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.util.Convert.utf2string: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.String.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: java.util.zip.ZipFile.getEntryFlag: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.tree.TreeScanner.scan: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.tree.JCTree$JCMethodDecl.accept: 0,02% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.comp.Lower$1.visitMethodDef: 0,02% (1 inclusive / 0 exclusive)
        4: com.sun.tools.javac.comp.Check.checkConflicts: 0,02% (1 inclusive / 1 exclusive)
  1: sun.nio.fs.NativeBuffers.getNativeBuffer: 0,02% (1 inclusive / 0 exclusive)
    2: sun.nio.fs.NativeBuffers.allocNativeBuffer: 0,02% (1 inclusive / 0 exclusive)
      3: sun.nio.fs.NativeBuffer.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: compiler.java.CollectingJavaFileManager.list: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.file.JavacFileManager.list: 0,02% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.file.JavacFileManager.listContainer: 0,02% (1 inclusive / 0 exclusive)
        4: com.sun.tools.javac.file.JavacFileManager.listDirectory: 0,02% (1 inclusive / 1 exclusive)
  1: sun.nio.fs.NativeBuffers.releaseNativeBuffer: 0,02% (1 inclusive / 0 exclusive)
    2: java.lang.ThreadLocal.get: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.Thread.currentThread: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.jvm.ClassReader.initAttributeReaders: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.jvm.ClassReader$2.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.jvm.ClassReader$AttributeReader.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: compiler.macros.ArraySliceMacro.expand: 0,02% (1 inclusive / 0 exclusive)
    2: parser.Match.getCaptures: 0,02% (1 inclusive / 0 exclusive)
      3: java.util.ArrayList.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: java.util.ArrayList.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: java.lang.String.split: 0,02% (1 inclusive / 0 exclusive)
    2: java.util.ArrayList.subList: 0,02% (1 inclusive / 1 exclusive)
  1: sun.nio.cs.UTF_8$Decoder.decodeLoop: 0,02% (1 inclusive / 0 exclusive)
    2: sun.nio.cs.UTF_8$Decoder.decodeBufferLoop: 0,02% (1 inclusive / 0 exclusive)
      3: java.nio.DirectByteBuffer.get: 0,02% (1 inclusive / 0 exclusive)
        4: sun.misc.Unsafe.getByte: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.util.ByteBuffer.appendBytes: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.util.ByteBuffer.copy: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.code.Symtab.<init>: 0,02% (1 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.parser.Scanner.hexFloatsWork: 0,02% (1 inclusive / 0 exclusive)
    2: java.lang.Float.valueOf: 0,02% (1 inclusive / 0 exclusive)
      3: sun.misc.FloatingDecimal.readJavaFormatString: 0,02% (1 inclusive / 0 exclusive)
        4: sun.misc.FloatingDecimal.parseHexString: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.code.Source.allowVarargs: 0,02% (1 inclusive / 0 exclusive)
    2: java.lang.Enum.compareTo: 0,02% (1 inclusive / 0 exclusive)
      3: java.lang.Object.getClass: 0,02% (1 inclusive / 1 exclusive)
  1: java.lang.Thread.currentThread: 0,02% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.util.ListBuffer.clear: 0,02% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.util.List.<init>: 0,02% (1 inclusive / 0 exclusive)
      3: java.util.AbstractCollection.<init>: 0,02% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,02% (1 inclusive / 1 exclusive)

Method Times by Line Number (times inclusive): 5200 ticks
  1: java.lang.Object.<init>: 43,75% (2275 inclusive)
    2: (Object.java:37): 43,75% (2275 inclusive)
  1: parser.Matcher.parse: 21,19% (1102 inclusive)
    2: (Matcher.java:133): 21,19% (1102 inclusive)
  1: parser.ParseData.<init>: 21,17% (1101 inclusive)
    2: (ParseData.java:44): 8,96% (466 inclusive)
    2: (ParseData.java:38): 8,13% (423 inclusive)
    2: (ParseData.java:47): 4,08% (212 inclusive)
  1: java.util.ArrayList.<init>: 17,12% (890 inclusive)
    2: (ArrayList.java:128): 8,71% (453 inclusive)
    2: (ArrayList.java:132): 8,29% (431 inclusive)
    2: (ArrayList.java:150): 0,1% (5 inclusive)
    2: (ArrayList.java:154): 0,02% (1 inclusive)
    2: (ArrayList.java:139): 0% (0 inclusive)
  1: java.util.AbstractCollection.<init>: 9,96% (518 inclusive)
    2: (AbstractCollection.java:66): 9,96% (518 inclusive)
  1: sun.misc.Resource.getBytes: 9,67% (503 inclusive)
    2: (Resource.java:124): 8,75% (455 inclusive)
    2: (Resource.java:100): 0,81% (42 inclusive)
    2: (Resource.java:117): 0,06% (3 inclusive)
    2: (Resource.java:143): 0,06% (3 inclusive)
  1: parser.ParseErrors.<init>: 8,96% (466 inclusive)
    2: (ParseErrors.java:89): 4,77% (248 inclusive)
    2: (ParseErrors.java:81): 4,19% (218 inclusive)
  1: java.util.zip.ZipFile.access$1400: 8,85% (460 inclusive)
    2: (ZipFile.java:56): 8,85% (460 inclusive)
  1: java.util.zip.ZipFile.read: 8,85% (460 inclusive)
    2: (ZipFile.java:Unknown line): 8,85% (460 inclusive)
  1: java.util.zip.ZipFile$ZipFileInputStream.read: 8,85% (460 inclusive)
    2: (ZipFile.java:677): 8,85% (460 inclusive)
  1: java.util.AbstractList.<init>: 8,83% (459 inclusive)
    2: (AbstractList.java:76): 8,83% (459 inclusive)
  1: parser.NestedMemo.get: 8,29% (431 inclusive)
    2: (NestedMemo.java:33): 5,85% (304 inclusive)
    2: (NestedMemo.java:41): 2,31% (120 inclusive)
    2: (NestedMemo.java:42): 0,13% (7 inclusive)
  1: java.io.WinNTFileSystem.getBooleanAttributes: 6,25% (325 inclusive)
    2: (WinNTFileSystem.java:Unknown line): 6,25% (325 inclusive)
  1: java.io.File.exists: 6,06% (315 inclusive)
    2: (File.java:772): 6,06% (315 inclusive)
  1: sun.misc.URLClassPath.getResource: 5,92% (308 inclusive)
    2: (URLClassPath.java:195): 5,81% (302 inclusive)
    2: (URLClassPath.java:194): 0,12% (6 inclusive)
  1: sun.misc.URLClassPath$FileLoader.getResource: 5,81% (302 inclusive)
    2: (URLClassPath.java:1057): 5,62% (292 inclusive)
    2: (URLClassPath.java:1054): 0,12% (6 inclusive)
    2: (URLClassPath.java:1035): 0,08% (4 inclusive)
  1: java.io.FileInputStream.<init>: 5,46% (284 inclusive)
    2: (FileInputStream.java:138): 5,42% (282 inclusive)
    2: (FileInputStream.java:136): 0,02% (1 inclusive)
    2: (FileInputStream.java:56): 0,02% (1 inclusive)
  1: java.io.FileInputStream.open: 5,42% (282 inclusive)
    2: (FileInputStream.java:Unknown line): 5,42% (282 inclusive)
  1: sun.misc.Resource.cachedInputStream: 4,46% (232 inclusive)
    2: (Resource.java:77): 4,46% (232 inclusive)
  1: sun.misc.URLClassPath$FileLoader$1.getInputStream: 4,4% (229 inclusive)
    2: (URLClassPath.java:1063): 4,4% (229 inclusive)
  1: java.lang.String.<init>: 4,33% (225 inclusive)
    2: (String.java:645): 2,48% (129 inclusive)
    2: (String.java:234): 0,62% (32 inclusive)
    2: (String.java:221): 0,6% (31 inclusive)
    2: (String.java:448): 0,31% (16 inclusive)
    2: (String.java:452): 0,29% (15 inclusive)
    2: (String.java:197): 0,02% (1 inclusive)
    2: (String.java:348): 0,02% (1 inclusive)
    2: (String.java:524): 0% (0 inclusive)
  1: java.lang.ClassLoader.loadClass: 4,19% (218 inclusive)
    2: (ClassLoader.java:412): 4,04% (210 inclusive)
    2: (ClassLoader.java:423): 0,08% (4 inclusive)
    2: (ClassLoader.java:403): 0,04% (2 inclusive)
    2: (ClassLoader.java:405): 0,04% (2 inclusive)
    2: (ClassLoader.java:410): 0% (0 inclusive)
  1: util.apache.CharSequenceTranslator.translate: 4,1% (213 inclusive)
    2: (CharSequenceTranslator.java:87): 4% (208 inclusive)
    2: (CharSequenceTranslator.java:58): 0,1% (5 inclusive)
    2: (CharSequenceTranslator.java:59): 0% (0 inclusive)
  1: java.lang.ClassLoader.findBootstrapClass: 4,04% (210 inclusive)
    2: (ClassLoader.java:Unknown line): 4,04% (210 inclusive)
  1: java.lang.ClassLoader.findBootstrapClassOrNull: 4,04% (210 inclusive)
    2: (ClassLoader.java:1061): 4,04% (210 inclusive)
  1: java.lang.Character.toChars: 4% (208 inclusive)
    2: (Character.java:4976): 4% (208 inclusive)
  1: source.SourceString.<init>: 3,92% (204 inclusive)
    2: (SourceString.java:57): 3,87% (201 inclusive)
    2: (SourceString.java:56): 0,06% (3 inclusive)
  1: java.lang.Integer.<init>: 2,81% (146 inclusive)
    2: (Integer.java:659): 2,81% (146 inclusive)
  1: java.lang.Number.<init>: 2,81% (146 inclusive)
    2: (Number.java:49): 2,81% (146 inclusive)
  1: java.lang.Integer.valueOf: 2,79% (145 inclusive)
    2: (Integer.java:642): 2,79% (145 inclusive)
  1: java.util.AbstractList.iterator: 2,73% (142 inclusive)
    2: (AbstractList.java:288): 2,73% (142 inclusive)
  1: java.util.AbstractList$Itr.<init>: 2,71% (141 inclusive)
    2: (AbstractList.java:330): 2,71% (141 inclusive)
  1: java.util.HashMap.put: 2,44% (127 inclusive)
    2: (HashMap.java:402): 2,42% (126 inclusive)
    2: (HashMap.java:389): 0,02% (1 inclusive)
  1: java.util.HashMap.addEntry: 2,42% (126 inclusive)
    2: (HashMap.java:766): 2,37% (123 inclusive)
    2: (HashMap.java:768): 0,06% (3 inclusive)
  1: java.util.HashMap$Entry.<init>: 2,37% (123 inclusive)
    2: (HashMap.java:696): 2,37% (123 inclusive)
  1: java.lang.String.substring: 2,27% (118 inclusive)
    2: (String.java:1960): 2,27% (118 inclusive)
    2: (String.java:1925): 0% (0 inclusive)
  1: java.util.zip.ZipFile.getEntry: 1,83% (95 inclusive)
    2: (ZipFile.java:Unknown line): 1,67% (87 inclusive)
    2: (ZipFile.java:304): 0,08% (4 inclusive)
    2: (ZipFile.java:306): 0,08% (4 inclusive)
  1: java.util.jar.JarFile.getEntry: 1,83% (95 inclusive)
    2: (JarFile.java:225): 1,83% (95 inclusive)
  1: java.util.jar.JarFile.getJarEntry: 1,77% (92 inclusive)
    2: (JarFile.java:208): 1,77% (92 inclusive)
  1: java.util.ArrayList.iterator: 1,62% (84 inclusive)
    2: (ArrayList.java:774): 1,62% (84 inclusive)
  1: java.util.ArrayList$Itr.<init>: 1,58% (82 inclusive)
    2: (ArrayList.java:780): 1,58% (82 inclusive)
  1: java.util.zip.ZipFile.<init>: 1,56% (81 inclusive)
    2: (ZipFile.java:214): 1,17% (61 inclusive)
    2: (ZipFile.java:464): 0,19% (10 inclusive)
    2: (ZipFile.java:212): 0,12% (6 inclusive)
    2: (ZipFile.java:144): 0,08% (4 inclusive)
  1: java.io.RandomAccessFile.read: 1,56% (81 inclusive)
    2: (RandomAccessFile.java:355): 1,56% (81 inclusive)
  1: java.io.RandomAccessFile.readFully: 1,56% (81 inclusive)
    2: (RandomAccessFile.java:414): 1,56% (81 inclusive)
    2: (RandomAccessFile.java:394): 0% (0 inclusive)
  1: java.util.jar.JarFile.<init>: 1,56% (81 inclusive)
    2: (JarFile.java:152): 1,56% (81 inclusive)
    2: (JarFile.java:89): 0% (0 inclusive)
  1: java.io.RandomAccessFile.readBytes: 1,56% (81 inclusive)
    2: (RandomAccessFile.java:Unknown line): 1,56% (81 inclusive)
  1: parser.ParseData.succeed: 1,54% (80 inclusive)
    2: (ParseData.java:83): 1,54% (80 inclusive)
  1: parser.Match.<init>: 1,54% (80 inclusive)
    2: (Match.java:87): 1,54% (80 inclusive)
  1: parser.Matcher.succeed: 1,54% (80 inclusive)
    2: (Matcher.java:160): 1,54% (80 inclusive)
  1: java.util.Collections$UnmodifiableRandomAccessList.<init>: 1,33% (69 inclusive)
    2: (Collections.java:1282): 1,33% (69 inclusive)
  1: java.util.Collections$UnmodifiableList.<init>: 1,33% (69 inclusive)
    2: (Collections.java:1204): 1,33% (69 inclusive)
  1: java.util.Collections$UnmodifiableCollection.<init>: 1,33% (69 inclusive)
    2: (Collections.java:1049): 1,33% (69 inclusive)
  1: java.util.zip.ZipFile.open: 1,17% (61 inclusive)
    2: (ZipFile.java:Unknown line): 1,17% (61 inclusive)
  1: source.SourceFileText.at: 1,15% (60 inclusive)
    2: (SourceFileText.java:143): 1,15% (60 inclusive)
  1: trees.MatchIterator$NodeState.<init>: 1,1% (57 inclusive)
    2: (MatchIterator.java:31): 1,1% (57 inclusive)
  1: trees.MatchIterator.next: 1,1% (57 inclusive)
    2: (MatchIterator.java:80): 1,1% (57 inclusive)
  1: trees.MatchIterator.forward: 1,1% (57 inclusive)
    2: (MatchIterator.java:105): 1,1% (57 inclusive)
  1: source.SourceFileText.<init>: 1,06% (55 inclusive)
    2: (SourceFileText.java:108): 0,63% (33 inclusive)
    2: (SourceFileText.java:107): 0,23% (12 inclusive)
    2: (SourceFileText.java:118): 0,13% (7 inclusive)
    2: (SourceFileText.java:112): 0,06% (3 inclusive)
    2: (SourceFileText.java:87): 0% (0 inclusive)
  1: com.sun.tools.javac.file.RelativePath$RelativeFile.<init>: 1,04% (54 inclusive)
    2: (RelativePath.java:166): 0,83% (43 inclusive)
    2: (RelativePath.java:157): 0,21% (11 inclusive)
  1: com.sun.tools.javac.util.List.<init>: 1,04% (54 inclusive)
    2: (List.java:65): 1,04% (54 inclusive)
  1: java.lang.StringBuilder.toString: 1,02% (53 inclusive)
    2: (StringBuilder.java:405): 1,02% (53 inclusive)
  1: java.util.Arrays.copyOf: 0,88% (46 inclusive)
    2: (Arrays.java:2367): 0,54% (28 inclusive)
    2: (Arrays.java:2245): 0,27% (14 inclusive)
    2: (Arrays.java:2271): 0,08% (4 inclusive)
    2: (Arrays.java:2219): 0% (0 inclusive)
  1: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.readEntry: 0,83% (43 inclusive)
    2: (ZipFileIndex.java:668): 0,75% (39 inclusive)
    2: (ZipFileIndex.java:644): 0,04% (2 inclusive)
    2: (ZipFileIndex.java:651): 0,04% (2 inclusive)
  1: sun.misc.URLClassPath$FileLoader$1.getContentLength: 0,81% (42 inclusive)
    2: (URLClassPath.java:1065): 0,81% (42 inclusive)
  1: java.io.File.length: 0,81% (42 inclusive)
    2: (File.java:912): 0,81% (42 inclusive)
  1: java.io.WinNTFileSystem.getLength: 0,81% (42 inclusive)
    2: (WinNTFileSystem.java:Unknown line): 0,81% (42 inclusive)
  1: util.ArrayIterator.<init>: 0,79% (41 inclusive)
    2: (ArrayIterator.java:23): 0,79% (41 inclusive)
    2: (ArrayIterator.java:37): 0% (0 inclusive)
  1: com.sun.tools.javac.jvm.ClassReader.fillIn: 0,79% (41 inclusive)
    2: (ClassReader.java:2207): 0,79% (41 inclusive)
  1: util.AbstractBiIterator.<init>: 0,79% (41 inclusive)
    2: (AbstractBiIterator.java:7): 0,79% (41 inclusive)
  1: com.sun.tools.javac.util.List.reverse: 0,79% (41 inclusive)
    2: (List.java:210): 0,79% (41 inclusive)
  1: com.sun.tools.javac.file.RegularFileObject.openInputStream: 0,79% (41 inclusive)
    2: (RegularFileObject.java:96): 0,79% (41 inclusive)
  1: java.lang.AbstractStringBuilder.<init>: 0,73% (38 inclusive)
    2: (AbstractStringBuilder.java:64): 0,38% (20 inclusive)
    2: (AbstractStringBuilder.java:63): 0,35% (18 inclusive)
  1: com.sun.tools.javac.file.JavacFileManager.listDirectory: 0,71% (37 inclusive)
    2: (JavacFileManager.java:286): 0,54% (28 inclusive)
    2: (JavacFileManager.java:295): 0,13% (7 inclusive)
    2: (JavacFileManager.java:305): 0,04% (2 inclusive)
  1: source.SourceString.at: 0,69% (36 inclusive)
    2: (SourceString.java:86): 0,69% (36 inclusive)
  1: java.io.FileInputStream.getChannel: 0,63% (33 inclusive)
    2: (FileInputStream.java:364): 0,63% (33 inclusive)
  1: java.net.URLClassLoader.defineClass: 0,62% (32 inclusive)
    2: (URLClassLoader.java:449): 0,27% (14 inclusive)
    2: (URLClassLoader.java:444): 0,15% (8 inclusive)
    2: (URLClassLoader.java:417): 0,08% (4 inclusive)
    2: (URLClassLoader.java:416): 0,06% (3 inclusive)
    2: (URLClassLoader.java:448): 0,04% (2 inclusive)
    2: (URLClassLoader.java:414): 0,02% (1 inclusive)
  1: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.buildIndex: 0,62% (32 inclusive)
    2: (ZipFileIndex.java:579): 0,58% (30 inclusive)
    2: (ZipFileIndex.java:592): 0,02% (1 inclusive)
    2: (ZipFileIndex.java:593): 0,02% (1 inclusive)
  1: java.util.Arrays.copyOfRange: 0,62% (32 inclusive)
    2: (Arrays.java:2694): 0,62% (32 inclusive)
  1: java.lang.StringBuilder.<init>: 0,6% (31 inclusive)
    2: (StringBuilder.java:85): 0,6% (31 inclusive)
  1: java.io.File.listFiles: 0,54% (28 inclusive)
    2: (File.java:1133): 0,48% (25 inclusive)
    2: (File.java:1138): 0,06% (3 inclusive)
  1: sun.misc.URLClassPath$JarLoader.getJarFile: 0,52% (27 inclusive)
    2: (URLClassPath.java:703): 0,27% (14 inclusive)
    2: (URLClassPath.java:706): 0,25% (13 inclusive)
  1: java.lang.AbstractStringBuilder.append: 0,52% (27 inclusive)
    2: (AbstractStringBuilder.java:415): 0,52% (27 inclusive)
  1: java.lang.AbstractStringBuilder.expandCapacity: 0,52% (27 inclusive)
    2: (AbstractStringBuilder.java:130): 0,52% (27 inclusive)
  1: java.lang.AbstractStringBuilder.ensureCapacityInternal: 0,52% (27 inclusive)
    2: (AbstractStringBuilder.java:114): 0,52% (27 inclusive)
  1: java.lang.String.replace: 0,52% (27 inclusive)
    2: (String.java:2069): 0,42% (22 inclusive)
    2: (String.java:2078): 0,1% (5 inclusive)
  1: com.sun.tools.javac.file.ZipFileIndex.openFile: 0,5% (26 inclusive)
    2: (ZipFileIndex.java:203): 0,5% (26 inclusive)
  1: java.io.RandomAccessFile.<init>: 0,5% (26 inclusive)
    2: (RandomAccessFile.java:233): 0,5% (26 inclusive)
  1: java.io.RandomAccessFile.open: 0,5% (26 inclusive)
    2: (RandomAccessFile.java:Unknown line): 0,5% (26 inclusive)
  1: java.util.regex.Pattern.sequence: 0,48% (25 inclusive)
    2: (Pattern.java:2043): 0,19% (10 inclusive)
    2: (Pattern.java:2075): 0,19% (10 inclusive)
    2: (Pattern.java:2046): 0,04% (2 inclusive)
    2: (Pattern.java:2057): 0,04% (2 inclusive)
    2: (Pattern.java:2018): 0,02% (1 inclusive)
  1: java.io.File.list: 0,48% (25 inclusive)
    2: (File.java:1048): 0,48% (25 inclusive)
  1: java.io.WinNTFileSystem.list: 0,48% (25 inclusive)
    2: (WinNTFileSystem.java:Unknown line): 0,48% (25 inclusive)
  1: parser.NestedMemo.set: 0,46% (24 inclusive)
    2: (NestedMemo.java:56): 0,4% (21 inclusive)
    2: (NestedMemo.java:60): 0,06% (3 inclusive)
  1: java.util.HashMap.<init>: 0,46% (24 inclusive)
    2: (HashMap.java:223): 0,29% (15 inclusive)
    2: (HashMap.java:226): 0,15% (8 inclusive)
    2: (HashMap.java:187): 0,02% (1 inclusive)
    2: (HashMap.java:216): 0% (0 inclusive)
  1: com.sun.tools.javac.file.ZipFileIndex.read: 0,42% (22 inclusive)
    2: (ZipFileIndex.java:358): 0,4% (21 inclusive)
    2: (ZipFileIndex.java:360): 0,02% (1 inclusive)
  1: com.sun.tools.javac.file.RelativePath.<init>: 0,38% (20 inclusive)
    2: (RelativePath.java:47): 0,38% (20 inclusive)
  1: java.util.jar.JarFile.hasClassPathAttribute: 0,37% (19 inclusive)
    2: (JarFile.java:483): 0,37% (19 inclusive)
  1: java.util.regex.Pattern.compile: 0,37% (19 inclusive)
    2: (Pattern.java:1665): 0,25% (13 inclusive)
    2: (Pattern.java:1678): 0,08% (4 inclusive)
    2: (Pattern.java:1636): 0,02% (1 inclusive)
    2: (Pattern.java:1682): 0,02% (1 inclusive)
    2: (Pattern.java:1022): 0% (0 inclusive)
  1: java.util.jar.JavaUtilJarAccessImpl.jarFileHasClassPathAttribute: 0,37% (19 inclusive)
    2: (JavaUtilJarAccessImpl.java:37): 0,37% (19 inclusive)
  1: sun.misc.URLClassPath$JarLoader.getClassPath: 0,37% (19 inclusive)
    2: (URLClassPath.java:961): 0,27% (14 inclusive)
    2: (URLClassPath.java:960): 0,1% (5 inclusive)
  1: java.util.regex.Pattern.<init>: 0,35% (18 inclusive)
    2: (Pattern.java:1337): 0,35% (18 inclusive)
  1: java.util.regex.Pattern.expr: 0,35% (18 inclusive)
    2: (Pattern.java:1964): 0,35% (18 inclusive)
  1: java.util.jar.JarFile.getManifestFromReference: 0,35% (18 inclusive)
    2: (JarFile.java:181): 0,25% (13 inclusive)
    2: (JarFile.java:179): 0,1% (5 inclusive)
  1: driver.SourceFile.<init>: 0,35% (18 inclusive)
    2: (SourceFile.java:61): 0,29% (15 inclusive)
    2: (SourceFile.java:79): 0,06% (3 inclusive)
  1: driver.EntryPoint.getPaths: 0,35% (18 inclusive)
    2: (EntryPoint.java:59): 0,31% (16 inclusive)
    2: (EntryPoint.java:57): 0,04% (2 inclusive)
  1: java.util.jar.JarFile.getManifest: 0,35% (18 inclusive)
    2: (JarFile.java:165): 0,35% (18 inclusive)
  1: sun.nio.cs.FastCharsetProvider.lookup: 0,33% (17 inclusive)
    2: (FastCharsetProvider.java:119): 0,21% (11 inclusive)
    2: (FastCharsetProvider.java:112): 0,12% (6 inclusive)
  1: com.sun.tools.javac.file.ZipFileIndexArchive$ZipFileIndexFileObject.inferBinaryName: 0,33% (17 inclusive)
    2: (ZipFileIndexArchive.java:212): 0,33% (17 inclusive)
  1: util.FileUtils.glob: 0,33% (17 inclusive)
    2: (FileUtils.java:29): 0,17% (9 inclusive)
    2: (FileUtils.java:27): 0,15% (8 inclusive)
  1: java.net.URLClassLoader$1.run: 0,33% (17 inclusive)
    2: (URLClassLoader.java:358): 0,19% (10 inclusive)
    2: (URLClassLoader.java:357): 0,1% (5 inclusive)
    2: (URLClassLoader.java:361): 0,04% (2 inclusive)
    2: (URLClassLoader.java:355): 0% (0 inclusive)
  1: java.io.FileOutputStream.<init>: 0,31% (16 inclusive)
    2: (FileOutputStream.java:212): 0,31% (16 inclusive)
    2: (FileOutputStream.java:165): 0% (0 inclusive)
  1: java.io.FileOutputStream.open: 0,31% (16 inclusive)
    2: (FileOutputStream.java:Unknown line): 0,31% (16 inclusive)
  1: sun.misc.URLClassPath$JarLoader$2.getManifest: 0,31% (16 inclusive)
    2: (URLClassPath.java:756): 0,31% (16 inclusive)
  1: compiler.java.CompiledClass.dump: 0,31% (16 inclusive)
    2: (CompiledClass.java:72): 0,15% (8 inclusive)
    2: (CompiledClass.java:76): 0,08% (4 inclusive)
    2: (CompiledClass.java:74): 0,06% (3 inclusive)
    2: (CompiledClass.java:73): 0,02% (1 inclusive)
  1: sun.nio.cs.FastCharsetProvider.charsetForName: 0,31% (16 inclusive)
    2: (FastCharsetProvider.java:136): 0,31% (16 inclusive)
  1: java.util.AbstractMap.<init>: 0,31% (16 inclusive)
    2: (AbstractMap.java:73): 0,31% (16 inclusive)
  1: java.lang.Class.forName: 0,29% (15 inclusive)
    2: (Class.java:264): 0,21% (11 inclusive)
    2: (Class.java:186): 0,08% (4 inclusive)
  1: com.sun.tools.javac.file.ZipFileIndex$Entry.<init>: 0,29% (15 inclusive)
    2: (ZipFileIndex.java:1083): 0,29% (15 inclusive)
  1: java.lang.Class.forName0: 0,29% (15 inclusive)
    2: (Class.java:Unknown line): 0,29% (15 inclusive)
  1: compiler.java.CollectingJavaFileManager.inferBinaryName: 0,29% (15 inclusive)
    2: (CollectingJavaFileManager.java:174): 0,29% (15 inclusive)
  1: util.FileUtils.write: 0,29% (15 inclusive)
    2: (FileUtils.java:99): 0,25% (13 inclusive)
    2: (FileUtils.java:97): 0,04% (2 inclusive)
  1: com.sun.tools.javac.code.Type.<init>: 0,29% (15 inclusive)
    2: (Type.java:118): 0,29% (15 inclusive)
  1: com.sun.tools.javac.file.JavacFileManager.inferBinaryName: 0,29% (15 inclusive)
    2: (JavacFileManager.java:658): 0,29% (15 inclusive)
  1: java.lang.ClassLoader.defineClass: 0,27% (14 inclusive)
    2: (ClassLoader.java:791): 0,27% (14 inclusive)
  1: com.sun.tools.javac.code.Symbol$ClassSymbol.<init>: 0,27% (14 inclusive)
    2: (Symbol.java:733): 0,1% (5 inclusive)
    2: (Symbol.java:743): 0,08% (4 inclusive)
    2: (Symbol.java:736): 0,06% (3 inclusive)
    2: (Symbol.java:735): 0,04% (2 inclusive)
  1: java.lang.ClassLoader.defineClass1: 0,27% (14 inclusive)
    2: (ClassLoader.java:Unknown line): 0,27% (14 inclusive)
  1: java.lang.StringCoding.decode: 0,27% (14 inclusive)
    2: (StringCoding.java:193): 0,25% (13 inclusive)
    2: (StringCoding.java:187): 0,02% (1 inclusive)
  1: sun.misc.FileURLMapper.exists: 0,27% (14 inclusive)
    2: (FileURLMapper.java:73): 0,27% (14 inclusive)
  1: java.security.SecureClassLoader.defineClass: 0,27% (14 inclusive)
    2: (SecureClassLoader.java:142): 0,27% (14 inclusive)
  1: sun.misc.URLClassPath.getLoader: 0,27% (14 inclusive)
    2: (URLClassPath.java:331): 0,25% (13 inclusive)
    2: (URLClassPath.java:321): 0,02% (1 inclusive)
  1: sun.misc.URLClassPath$JarLoader$2.getInputStream: 0,25% (13 inclusive)
    2: (URLClassPath.java:752): 0,25% (13 inclusive)
  1: java.io.WinNTFileSystem.canonicalize0: 0,25% (13 inclusive)
    2: (WinNTFileSystem.java:Unknown line): 0,25% (13 inclusive)
  1: java.util.zip.ZipFile.getInputStream: 0,25% (13 inclusive)
    2: (ZipFile.java:354): 0,1% (5 inclusive)
    2: (ZipFile.java:367): 0,1% (5 inclusive)
    2: (ZipFile.java:368): 0,06% (3 inclusive)
  1: java.util.jar.JarFile.initializeVerifier: 0,25% (13 inclusive)
    2: (JarFile.java:334): 0,21% (11 inclusive)
    2: (JarFile.java:339): 0,04% (2 inclusive)
  1: java.util.jar.JarFile.getInputStream: 0,25% (13 inclusive)
    2: (JarFile.java:406): 0,25% (13 inclusive)
  1: java.io.File.getCanonicalPath: 0,25% (13 inclusive)
    2: (File.java:589): 0,25% (13 inclusive)
  1: java.io.Win32FileSystem.canonicalize: 0,25% (13 inclusive)
    2: (Win32FileSystem.java:414): 0,25% (13 inclusive)
  1: java.lang.StringCoding$StringDecoder.decode: 0,25% (13 inclusive)
    2: (StringCoding.java:149): 0,25% (13 inclusive)
  1: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.findCENRecord: 0,25% (13 inclusive)
    2: (ZipFileIndex.java:538): 0,15% (8 inclusive)
    2: (ZipFileIndex.java:561): 0,08% (4 inclusive)
    2: (ZipFileIndex.java:551): 0,02% (1 inclusive)
  1: javax.tools.ToolProvider.findSystemToolClass: 0,23% (12 inclusive)
    2: (ToolProvider.java:177): 0,1% (5 inclusive)
    2: (ToolProvider.java:196): 0,08% (4 inclusive)
    2: (ToolProvider.java:190): 0,06% (3 inclusive)
  1: com.sun.tools.javac.file.RelativePath$RelativeDirectory.<init>: 0,23% (12 inclusive)
    2: (RelativePath.java:104): 0,23% (12 inclusive)
  1: java.util.ArrayList.grow: 0,23% (12 inclusive)
    2: (ArrayList.java:213): 0,23% (12 inclusive)
  1: com.sun.tools.javac.processing.JavacProcessingEnvironment.<init>: 0,23% (12 inclusive)
    2: (JavacProcessingEnvironment.java:185): 0,13% (7 inclusive)
    2: (JavacProcessingEnvironment.java:181): 0,1% (5 inclusive)
  1: java.util.jar.JarVerifier.<init>: 0,23% (12 inclusive)
    2: (JarVerifier.java:538): 0,1% (5 inclusive)
    2: (JarVerifier.java:767): 0,1% (5 inclusive)
    2: (JarVerifier.java:101): 0,04% (2 inclusive)
  1: sun.nio.fs.WindowsFileAttributeViews$Basic.readAttributes: 0,23% (12 inclusive)
    2: (WindowsFileAttributeViews.java:51): 0,23% (12 inclusive)
    2: (WindowsFileAttributeViews.java:38): 0% (0 inclusive)
  1: driver.EntryPoint.run: 0,23% (12 inclusive)
    2: (EntryPoint.java:45): 0,23% (12 inclusive)
  1: sun.nio.fs.WindowsFileAttributes.get: 0,23% (12 inclusive)
    2: (WindowsFileAttributes.java:309): 0,17% (9 inclusive)
    2: (WindowsFileAttributes.java:305): 0,06% (3 inclusive)
  1: javax.tools.ToolProvider.getSystemToolClass: 0,23% (12 inclusive)
    2: (ToolProvider.java:159): 0,23% (12 inclusive)
  1: java.util.ArrayList.ensureCapacityInternal: 0,23% (12 inclusive)
    2: (ArrayList.java:187): 0,23% (12 inclusive)
  1: java.nio.file.Files.walkFileTree: 0,21% (11 inclusive)
    2: (Files.java:2618): 0,15% (8 inclusive)
    2: (Files.java:2585): 0,06% (3 inclusive)
  1: sun.misc.URLClassPath$JarLoader$1.run: 0,21% (11 inclusive)
    2: (URLClassPath.java:667): 0,17% (9 inclusive)
    2: (URLClassPath.java:668): 0,04% (2 inclusive)
    2: (URLClassPath.java:660): 0% (0 inclusive)
  1: java.security.AccessController.doPrivileged: 0,21% (11 inclusive)
    2: (AccessController.java:Unknown line): 0,21% (11 inclusive)
  1: java.util.regex.Pattern.family: 0,21% (11 inclusive)
    2: (Pattern.java:2685): 0,17% (9 inclusive)
    2: (Pattern.java:2689): 0,04% (2 inclusive)
  1: com.sun.tools.javac.file.JavacFileManager.caseMapCheck: 0,21% (11 inclusive)
    2: (JavacFileManager.java:400): 0,21% (11 inclusive)
  1: util.FileUtils.create: 0,19% (10 inclusive)
    2: (FileUtils.java:58): 0,17% (9 inclusive)
    2: (FileUtils.java:54): 0,02% (1 inclusive)
  1: com.sun.tools.javac.code.Scope$Entry.<init>: 0,19% (10 inclusive)
    2: (Scope.java:477): 0,19% (10 inclusive)
  1: java.lang.reflect.Field.acquireFieldAccessor: 0,19% (10 inclusive)
    2: (Field.java:949): 0,19% (10 inclusive)
  1: com.sun.tools.javac.file.JavacFileManager.listContainer: 0,19% (10 inclusive)
    2: (JavacFileManager.java:358): 0,17% (9 inclusive)
    2: (JavacFileManager.java:357): 0,02% (1 inclusive)
  1: java.lang.reflect.Field.getFieldAccessor: 0,19% (10 inclusive)
    2: (Field.java:930): 0,19% (10 inclusive)
  1: sun.nio.fs.WindowsFileSystemProvider.newDirectoryStream: 0,19% (10 inclusive)
    2: (WindowsFileSystemProvider.java:526): 0,19% (10 inclusive)
  1: sun.reflect.ReflectionFactory.newFieldAccessor: 0,19% (10 inclusive)
    2: (ReflectionFactory.java:140): 0,19% (10 inclusive)
  1: com.sun.tools.javac.file.ZipFileIndex$Entry.getName: 0,17% (9 inclusive)
    2: (ZipFileIndex.java:1089): 0,17% (9 inclusive)
  1: sun.misc.URLClassPath$JarLoader.access$600: 0,17% (9 inclusive)
    2: (URLClassPath.java:587): 0,17% (9 inclusive)
  1: java.util.ResourceBundle$Control$CandidateListCache.createObject: 0,17% (9 inclusive)
    2: (ResourceBundle.java:2369): 0,17% (9 inclusive)
    2: (ResourceBundle.java:2308): 0% (0 inclusive)
  1: java.net.URLClassLoader.newInstance: 0,17% (9 inclusive)
    2: (URLClassLoader.java:741): 0,17% (9 inclusive)
  1: sun.nio.fs.WindowsFileSystemProvider.readAttributes: 0,17% (9 inclusive)
    2: (WindowsFileSystemProvider.java:192): 0,17% (9 inclusive)
  1: java.io.File.createNewFile: 0,17% (9 inclusive)
    2: (File.java:947): 0,17% (9 inclusive)
  1: com.sun.tools.javac.main.JavaCompiler.initProcessAnnotations: 0,17% (9 inclusive)
    2: (JavaCompiler.java:992): 0,17% (9 inclusive)
  1: java.lang.ClassLoader.getResource: 0,17% (9 inclusive)
    2: (ClassLoader.java:1135): 0,13% (7 inclusive)
    2: (ClassLoader.java:1138): 0,04% (2 inclusive)
    2: (ClassLoader.java:1133): 0% (0 inclusive)
  1: java.lang.String.toCharArray: 0,17% (9 inclusive)
    2: (String.java:2801): 0,17% (9 inclusive)
  1: java.util.regex.Pattern.charPropertyNodeFor: 0,17% (9 inclusive)
    2: (Pattern.java:2728): 0,17% (9 inclusive)
  1: sun.net.www.protocol.file.Handler.createFileURLConnection: 0,17% (9 inclusive)
    2: (Handler.java:130): 0,17% (9 inclusive)
  1: com.sun.tools.javac.util.Name.append: 0,17% (9 inclusive)
    2: (Name.java:88): 0,17% (9 inclusive)
  1: sun.net.www.protocol.file.Handler.openConnection: 0,17% (9 inclusive)
    2: (Handler.java:89): 0,17% (9 inclusive)
    2: (Handler.java:72): 0% (0 inclusive)
  1: java.net.URLStreamHandler.parseURL: 0,17% (9 inclusive)
    2: (URLStreamHandler.java:249): 0,15% (8 inclusive)
    2: (URLStreamHandler.java:302): 0,02% (1 inclusive)
  1: sun.nio.ch.FileChannelImpl.<clinit>: 0,17% (9 inclusive)
    2: (FileChannelImpl.java:1132): 0,17% (9 inclusive)
  1: javax.tools.ToolProvider.getSystemTool: 0,17% (9 inclusive)
    2: (ToolProvider.java:145): 0,17% (9 inclusive)
  1: grammar.ExpressionTreeCleaner.visit: 0,17% (9 inclusive)
    2: (ExpressionTreeCleaner.java:221): 0,06% (3 inclusive)
    2: (ExpressionTreeCleaner.java:270): 0,06% (3 inclusive)
    2: (ExpressionTreeCleaner.java:206): 0,02% (1 inclusive)
    2: (ExpressionTreeCleaner.java:227): 0,02% (1 inclusive)
    2: (ExpressionTreeCleaner.java:245): 0,02% (1 inclusive)
  1: java.util.ResourceBundle$Control$CandidateListCache.getDefaultList: 0,17% (9 inclusive)
    2: (ResourceBundle.java:2384): 0,1% (5 inclusive)
    2: (ResourceBundle.java:2392): 0,08% (4 inclusive)
  1: java.io.WinNTFileSystem.createFileExclusively: 0,17% (9 inclusive)
    2: (WinNTFileSystem.java:Unknown line): 0,17% (9 inclusive)
  1: sun.nio.fs.WindowsDirectoryStream.<init>: 0,15% (8 inclusive)
    2: (WindowsDirectoryStream.java:78): 0,15% (8 inclusive)
  1: sun.nio.fs.WindowsNativeDispatcher.FindFirstFile0: 0,15% (8 inclusive)
    2: (WindowsNativeDispatcher.java:Unknown line): 0,15% (8 inclusive)
  1: sun.nio.fs.WindowsFileSystem.getPathMatcher: 0,15% (8 inclusive)
    2: (WindowsFileSystem.java:305): 0,13% (7 inclusive)
    2: (WindowsFileSystem.java:294): 0,02% (1 inclusive)
  1: sun.nio.fs.WindowsNativeDispatcher.FindFirstFile: 0,15% (8 inclusive)
    2: (WindowsNativeDispatcher.java:174): 0,15% (8 inclusive)
  1: java.lang.StringBuffer.toString: 0,15% (8 inclusive)
    2: (StringBuffer.java:561): 0,15% (8 inclusive)
  1: com.sun.tools.javac.code.Scope.makeEntry: 0,15% (8 inclusive)
    2: (Scope.java:230): 0,15% (8 inclusive)
  1: com.sun.tools.javac.util.Name.<init>: 0,15% (8 inclusive)
    2: (Name.java:41): 0,15% (8 inclusive)
  1: java.io.File.<init>: 0,15% (8 inclusive)
    2: (File.java:236): 0,06% (3 inclusive)
    2: (File.java:332): 0,04% (2 inclusive)
    2: (File.java:341): 0,04% (2 inclusive)
    2: (File.java:223): 0,02% (1 inclusive)
  1: com.sun.tools.javac.util.SharedNameTable$NameImpl.<init>: 0,15% (8 inclusive)
    2: (SharedNameTable.java:176): 0,15% (8 inclusive)
  1: sun.misc.URLClassPath$JarLoader.ensureOpen: 0,15% (8 inclusive)
    2: (URLClassPath.java:659): 0,15% (8 inclusive)
  1: java.io.File.isDirectory: 0,15% (8 inclusive)
    2: (File.java:799): 0,15% (8 inclusive)
  1: sun.nio.ch.FileChannelImpl.open: 0,15% (8 inclusive)
    2: (FileChannelImpl.java:81): 0,15% (8 inclusive)
  1: com.sun.tools.javac.code.Symbol.<init>: 0,15% (8 inclusive)
    2: (Symbol.java:116): 0,15% (8 inclusive)
  1: com.sun.tools.javac.code.Type$MethodType.<init>: 0,15% (8 inclusive)
    2: (Type.java:872): 0,15% (8 inclusive)
  1: com.sun.tools.javac.code.Scope.enter: 0,15% (8 inclusive)
    2: (Scope.java:219): 0,15% (8 inclusive)
  1: trees.MatchFinder.find: 0,15% (8 inclusive)
    2: (MatchFinder.java:49): 0,08% (4 inclusive)
    2: (MatchFinder.java:55): 0,08% (4 inclusive)
  1: parser.Matcher.visitChild: 0,15% (8 inclusive)
    2: (Matcher.java:149): 0,15% (8 inclusive)
  1: sun.nio.ch.FileChannelImpl.<init>: 0,15% (8 inclusive)
    2: (FileChannelImpl.java:73): 0,1% (5 inclusive)
    2: (FileChannelImpl.java:60): 0,06% (3 inclusive)
  1: java.io.Win32FileSystem.normalize: 0,15% (8 inclusive)
    2: (Win32FileSystem.java:174): 0,08% (4 inclusive)
    2: (Win32FileSystem.java:122): 0,06% (3 inclusive)
    2: (Win32FileSystem.java:130): 0,02% (1 inclusive)
    2: (Win32FileSystem.java:196): 0% (0 inclusive)
  1: com.sun.tools.javac.jvm.ClassReader.sigToType: 0,13% (7 inclusive)
    2: (ClassReader.java:673): 0,12% (6 inclusive)
    2: (ClassReader.java:612): 0,02% (1 inclusive)
  1: java.net.URL.openConnection: 0,13% (7 inclusive)
    2: (URL.java:969): 0,13% (7 inclusive)
  1: java.lang.ClassLoader.loadLibrary: 0,13% (7 inclusive)
    2: (ClassLoader.java:1846): 0,13% (7 inclusive)
  1: java.lang.StringBuffer.<init>: 0,13% (7 inclusive)
    2: (StringBuffer.java:108): 0,13% (7 inclusive)
  1: com.sun.tools.javac.processing.JavacProcessingEnvironment.initProcessorOptions: 0,13% (7 inclusive)
    2: (JavacProcessingEnvironment.java:489): 0,08% (4 inclusive)
    2: (JavacProcessingEnvironment.java:472): 0,06% (3 inclusive)
  1: util.PeekIterator.<init>: 0,13% (7 inclusive)
    2: (PeekIterator.java:18): 0,08% (4 inclusive)
    2: (PeekIterator.java:20): 0,06% (3 inclusive)
  1: com.sun.tools.javac.util.JavacMessages.getBundles: 0,13% (7 inclusive)
    2: (JavacMessages.java:121): 0,13% (7 inclusive)
  1: java.util.regex.Pattern$CharPropertyNames.<clinit>: 0,13% (7 inclusive)
    2: (Pattern.java:5640): 0,08% (4 inclusive)
    2: (Pattern.java:5592): 0,02% (1 inclusive)
    2: (Pattern.java:5601): 0,02% (1 inclusive)
    2: (Pattern.java:5631): 0,02% (1 inclusive)
  1: java.util.HashSet.iterator: 0,13% (7 inclusive)
    2: (HashSet.java:170): 0,13% (7 inclusive)
  1: java.lang.ClassLoader.getBootstrapResource: 0,13% (7 inclusive)
    2: (ClassLoader.java:1297): 0,13% (7 inclusive)
  1: java.lang.ClassLoader.getBootstrapClassPath: 0,13% (7 inclusive)
    2: (ClassLoader.java:1322): 0,13% (7 inclusive)
  1: sun.security.util.ManifestEntryVerifier.<init>: 0,13% (7 inclusive)
    2: (ManifestEntryVerifier.java:84): 0,13% (7 inclusive)
  1: com.sun.tools.javac.code.Symbol$TypeSymbol.formFlatName: 0,13% (7 inclusive)
    2: (Symbol.java:547): 0,13% (7 inclusive)
  1: java.util.HashMap$KeySet.iterator: 0,13% (7 inclusive)
    2: (HashMap.java:887): 0,13% (7 inclusive)
  1: sun.misc.Launcher.getBootstrapClassPath: 0,13% (7 inclusive)
    2: (Launcher.java:393): 0,13% (7 inclusive)
  1: driver.Requires.imports: 0,13% (7 inclusive)
    2: (Requires.java:89): 0,13% (7 inclusive)
  1: java.lang.Runtime.loadLibrary0: 0,13% (7 inclusive)
    2: (Runtime.java:845): 0,13% (7 inclusive)
  1: java.util.ResourceBundle.getBundle: 0,13% (7 inclusive)
    2: (ResourceBundle.java:796): 0,13% (7 inclusive)
  1: java.lang.ClassLoader.loadLibrary0: 0,13% (7 inclusive)
    2: (ClassLoader.java:1928): 0,13% (7 inclusive)
  1: java.lang.ClassLoader$NativeLibrary.load: 0,13% (7 inclusive)
    2: (ClassLoader.java:Unknown line): 0,13% (7 inclusive)
  1: trees.BoundedMatchIterator.<init>: 0,13% (7 inclusive)
    2: (BoundedMatchIterator.java:48): 0,1% (5 inclusive)
    2: (BoundedMatchIterator.java:49): 0,04% (2 inclusive)
  1: com.sun.tools.javac.file.ZipFileIndex.checkIndex: 0,13% (7 inclusive)
    2: (ZipFileIndex.java:188): 0,1% (5 inclusive)
    2: (ZipFileIndex.java:190): 0,02% (1 inclusive)
    2: (ZipFileIndex.java:191): 0,02% (1 inclusive)
  1: com.sun.tools.javac.util.JavacMessages.setCurrentLocale: 0,13% (7 inclusive)
    2: (JavacMessages.java:73): 0,13% (7 inclusive)
  1: com.sun.tools.javac.util.SharedNameTable.fromChars: 0,12% (6 inclusive)
    2: (SharedNameTable.java:112): 0,1% (5 inclusive)
    2: (SharedNameTable.java:106): 0,02% (1 inclusive)
  1: com.sun.tools.javac.file.ZipFileIndex.readBytes: 0,12% (6 inclusive)
    2: (ZipFileIndex.java:382): 0,12% (6 inclusive)
  1: java.util.jar.Manifest.<init>: 0,12% (6 inclusive)
    2: (Manifest.java:69): 0,1% (5 inclusive)
    2: (Manifest.java:51): 0,02% (1 inclusive)
  1: sun.nio.cs.StreamEncoder.writeBytes: 0,12% (6 inclusive)
    2: (StreamEncoder.java:221): 0,12% (6 inclusive)
  1: java.util.ResourceBundle.findBundle: 0,12% (6 inclusive)
    2: (ResourceBundle.java:1400): 0,08% (4 inclusive)
    2: (ResourceBundle.java:1406): 0,04% (2 inclusive)
    2: (ResourceBundle.java:1354): 0% (0 inclusive)
  1: java.io.FileOutputStream.writeBytes: 0,12% (6 inclusive)
    2: (FileOutputStream.java:Unknown line): 0,12% (6 inclusive)
  1: sun.misc.URLClassPath$3.run: 0,12% (6 inclusive)
    2: (URLClassPath.java:362): 0,12% (6 inclusive)
    2: (URLClassPath.java:352): 0% (0 inclusive)
  1: com.sun.tools.javac.util.List.of: 0,12% (6 inclusive)
    2: (List.java:89): 0,12% (6 inclusive)
  1: sun.misc.URLClassPath$JarLoader.<init>: 0,12% (6 inclusive)
    2: (URLClassPath.java:632): 0,12% (6 inclusive)
  1: java.net.URLClassLoader.getPermissions: 0,12% (6 inclusive)
    2: (URLClassLoader.java:695): 0,06% (3 inclusive)
    2: (URLClassLoader.java:644): 0,04% (2 inclusive)
    2: (URLClassLoader.java:635): 0,02% (1 inclusive)
  1: java.nio.charset.Charset.lookup: 0,12% (6 inclusive)
    2: (Charset.java:475): 0,12% (6 inclusive)
  1: java.lang.reflect.Field.get: 0,12% (6 inclusive)
    2: (Field.java:372): 0,12% (6 inclusive)
  1: util.StringUtils.escape: 0,12% (6 inclusive)
    2: (StringUtils.java:17): 0,06% (3 inclusive)
    2: (StringUtils.java:49): 0,06% (3 inclusive)
  1: com.sun.tools.javac.file.RegularFileObject.inferBinaryName: 0,12% (6 inclusive)
    2: (RegularFileObject.java:162): 0,08% (4 inclusive)
    2: (RegularFileObject.java:166): 0,04% (2 inclusive)
  1: java.nio.charset.Charset.lookup2: 0,12% (6 inclusive)
    2: (Charset.java:487): 0,12% (6 inclusive)
  1: java.io.FileOutputStream.write: 0,12% (6 inclusive)
    2: (FileOutputStream.java:318): 0,12% (6 inclusive)
  1: java.io.BufferedOutputStream.write: 0,12% (6 inclusive)
    2: (BufferedOutputStream.java:122): 0,12% (6 inclusive)
  1: sun.misc.URLClassPath$JarLoader.parseExtensionsDependencies: 0,1% (5 inclusive)
    2: (URLClassPath.java:980): 0,1% (5 inclusive)
  1: java.io.StringWriter.<init>: 0,1% (5 inclusive)
    2: (StringWriter.java:65): 0,06% (3 inclusive)
    2: (StringWriter.java:69): 0,04% (2 inclusive)
  1: java.net.URLClassLoader.access$100: 0,1% (5 inclusive)
    2: (URLClassLoader.java:71): 0,1% (5 inclusive)
  1: javax.tools.ToolProvider.getSystemJavaCompiler: 0,1% (5 inclusive)
    2: (ToolProvider.java:102): 0,1% (5 inclusive)
  1: source.SourceComposed.strFromMatches: 0,1% (5 inclusive)
    2: (SourceComposed.java:23): 0,06% (3 inclusive)
    2: (SourceComposed.java:29): 0,04% (2 inclusive)
  1: com.sun.tools.javac.file.RelativePath$RelativeDirectory.dirname: 0,1% (5 inclusive)
    2: (RelativePath.java:120): 0,1% (5 inclusive)
  1: sun.misc.PerfCounter.<init>: 0,1% (5 inclusive)
    2: (PerfCounter.java:65): 0,08% (4 inclusive)
    2: (PerfCounter.java:67): 0,02% (1 inclusive)
  1: sun.misc.URLClassPath$JarLoader.getResource: 0,1% (5 inclusive)
    2: (URLClassPath.java:819): 0,1% (5 inclusive)
  1: java.util.jar.Manifest.read: 0,1% (5 inclusive)
    2: (Manifest.java:195): 0,04% (2 inclusive)
    2: (Manifest.java:199): 0,04% (2 inclusive)
    2: (Manifest.java:251): 0,02% (1 inclusive)
  1: java.nio.file.FileTreeWalker.walk: 0,1% (5 inclusive)
    2: (FileTreeWalker.java:105): 0,06% (3 inclusive)
    2: (FileTreeWalker.java:179): 0,04% (2 inclusive)
    2: (FileTreeWalker.java:69): 0% (0 inclusive)
  1: java.lang.String.toLowerCase: 0,1% (5 inclusive)
    2: (String.java:2549): 0,06% (3 inclusive)
    2: (String.java:2486): 0,04% (2 inclusive)
  1: java.io.Win32FileSystem.hashCode: 0,1% (5 inclusive)
    2: (Win32FileSystem.java:598): 0,1% (5 inclusive)
  1: java.io.Win32FileSystem.resolve: 0,1% (5 inclusive)
    2: (Win32FileSystem.java:254): 0,08% (4 inclusive)
    2: (Win32FileSystem.java:259): 0,02% (1 inclusive)
  1: java.util.Collections.synchronizedMap: 0,1% (5 inclusive)
    2: (Collections.java:1993): 0,1% (5 inclusive)
  1: java.net.URLClassLoader$6.run: 0,1% (5 inclusive)
    2: (URLClassLoader.java:744): 0,1% (5 inclusive)
    2: (URLClassLoader.java:742): 0% (0 inclusive)
  1: com.sun.tools.javac.processing.JavacFiler.<init>: 0,1% (5 inclusive)
    2: (JavacFiler.java:366): 0,1% (5 inclusive)
  1: sun.misc.PerfCounter.newPerfCounter: 0,1% (5 inclusive)
    2: (PerfCounter.java:71): 0,1% (5 inclusive)
  1: java.util.Stack.<init>: 0,1% (5 inclusive)
    2: (Stack.java:53): 0,1% (5 inclusive)
  1: driver.DependencyResolver.run: 0,1% (5 inclusive)
    2: (DependencyResolver.java:72): 0,06% (3 inclusive)
    2: (DependencyResolver.java:71): 0,04% (2 inclusive)
  1: java.net.URLStreamHandler.toExternalForm: 0,1% (5 inclusive)
    2: (URLStreamHandler.java:508): 0,06% (3 inclusive)
    2: (URLStreamHandler.java:490): 0,04% (2 inclusive)
  1: sun.misc.PerfCounter$CoreCounters.<clinit>: 0,1% (5 inclusive)
    2: (PerfCounter.java:128): 0,1% (5 inclusive)
  1: sun.misc.URLClassPath$JarLoader.checkResource: 0,1% (5 inclusive)
    2: (URLClassPath.java:747): 0,08% (4 inclusive)
    2: (URLClassPath.java:734): 0,02% (1 inclusive)
  1: java.util.Vector.<init>: 0,1% (5 inclusive)
    2: (Vector.java:131): 0,1% (5 inclusive)
    2: (Vector.java:144): 0% (0 inclusive)
    2: (Vector.java:153): 0% (0 inclusive)
  1: sun.util.locale.LocaleObjectCache.get: 0,1% (5 inclusive)
    2: (LocaleObjectCache.java:61): 0,1% (5 inclusive)
  1: java.util.zip.ZipFile.getInflater: 0,1% (5 inclusive)
    2: (ZipFile.java:448): 0,1% (5 inclusive)
  1: java.util.regex.Pattern.matches: 0,1% (5 inclusive)
    2: (Pattern.java:1128): 0,1% (5 inclusive)
  1: sun.nio.fs.DefaultFileSystemProvider.create: 0,1% (5 inclusive)
    2: (DefaultFileSystemProvider.java:36): 0,1% (5 inclusive)
  1: com.sun.tools.javac.code.Symbol$TypeSymbol.<init>: 0,1% (5 inclusive)
    2: (Symbol.java:518): 0,1% (5 inclusive)
  1: java.util.HashSet.<init>: 0,1% (5 inclusive)
    2: (HashSet.java:102): 0,04% (2 inclusive)
    2: (HashSet.java:103): 0,04% (2 inclusive)
    2: (HashSet.java:117): 0,02% (1 inclusive)
  1: driver.SourceRepository.hint: 0,1% (5 inclusive)
    2: (SourceRepository.java:68): 0,1% (5 inclusive)
  1: java.io.FilterOutputStream.close: 0,08% (4 inclusive)
    2: (FilterOutputStream.java:160): 0,08% (4 inclusive)
  1: java.io.FileOutputStream.close0: 0,08% (4 inclusive)
    2: (FileOutputStream.java:Unknown line): 0,08% (4 inclusive)
  1: java.net.URLClassLoader.findClass: 0,08% (4 inclusive)
    2: (URLClassLoader.java:354): 0,08% (4 inclusive)
  1: com.sun.tools.javac.util.Name$Table.fromString: 0,08% (4 inclusive)
    2: (Name.java:203): 0,08% (4 inclusive)
  1: java.io.FileOutputStream.close: 0,08% (4 inclusive)
    2: (FileOutputStream.java:362): 0,08% (4 inclusive)
  1: java.lang.Throwable.<init>: 0,08% (4 inclusive)
    2: (Throwable.java:286): 0,02% (1 inclusive)
    2: (Throwable.java:287): 0,02% (1 inclusive)
    2: (Throwable.java:309): 0,02% (1 inclusive)
    2: (Throwable.java:310): 0,02% (1 inclusive)
  1: trees.MatchFinder.trace: 0,08% (4 inclusive)
    2: (MatchFinder.java:89): 0,06% (3 inclusive)
    2: (MatchFinder.java:75): 0,02% (1 inclusive)
  1: java.net.URLClassLoader.getAndVerifyPackage: 0,08% (4 inclusive)
    2: (URLClassLoader.java:382): 0,04% (2 inclusive)
    2: (URLClassLoader.java:394): 0,04% (2 inclusive)
  1: com.sun.tools.javac.util.Names.fromString: 0,08% (4 inclusive)
    2: (Names.java:288): 0,08% (4 inclusive)
  1: java.util.EnumSet.noneOf: 0,08% (4 inclusive)
    2: (EnumSet.java:113): 0,08% (4 inclusive)
  1: com.sun.tools.javac.jvm.ClassReader.enterClass: 0,08% (4 inclusive)
    2: (ClassReader.java:2065): 0,08% (4 inclusive)
  1: java.lang.Exception.<init>: 0,08% (4 inclusive)
    2: (Exception.java:102): 0,04% (2 inclusive)
    2: (Exception.java:84): 0,04% (2 inclusive)
  1: java.util.Collections.unmodifiableMap: 0,08% (4 inclusive)
    2: (Collections.java:1318): 0,08% (4 inclusive)
  1: com.sun.tools.javac.file.ZipFileIndex.getRelativeDirectory: 0,08% (4 inclusive)
    2: (ZipFileIndex.java:1057): 0,08% (4 inclusive)
  1: sun.nio.ch.Util.<clinit>: 0,08% (4 inclusive)
    2: (Util.java:51): 0,08% (4 inclusive)
  1: com.sun.tools.javac.code.Types$DefaultTypeVisitor.<init>: 0,08% (4 inclusive)
    2: (Types.java:3711): 0,08% (4 inclusive)
  1: java.util.ResourceBundle$Control.newBundle: 0,08% (4 inclusive)
    2: (ResourceBundle.java:2584): 0,08% (4 inclusive)
  1: java.nio.file.FileSystems$DefaultFileSystemHolder.defaultFileSystem: 0,08% (4 inclusive)
    2: (FileSystems.java:103): 0,08% (4 inclusive)
  1: sun.nio.ch.Util$4.run: 0,08% (4 inclusive)
    2: (Util.java:414): 0,08% (4 inclusive)
    2: (Util.java:411): 0% (0 inclusive)
  1: java.util.zip.ZipFile.getZipEntry: 0,08% (4 inclusive)
    2: (ZipFile.java:520): 0,06% (3 inclusive)
    2: (ZipFile.java:521): 0,02% (1 inclusive)
  1: com.sun.tools.javac.jvm.ClassReader.includeClassFile: 0,08% (4 inclusive)
    2: (ClassReader.java:2383): 0,08% (4 inclusive)
  1: java.nio.file.Paths.get: 0,08% (4 inclusive)
    2: (Paths.java:84): 0,08% (4 inclusive)
  1: java.nio.file.FileSystems$DefaultFileSystemHolder.<clinit>: 0,08% (4 inclusive)
    2: (FileSystems.java:90): 0,08% (4 inclusive)
  1: java.security.SecureClassLoader.getProtectionDomain: 0,08% (4 inclusive)
    2: (SecureClassLoader.java:206): 0,08% (4 inclusive)
  1: com.sun.tools.javac.file.ZipFileIndexArchive.getFileObject: 0,08% (4 inclusive)
    2: (ZipFileIndexArchive.java:76): 0,06% (3 inclusive)
    2: (ZipFileIndexArchive.java:74): 0,02% (1 inclusive)
  1: sun.misc.Perf.createLong: 0,08% (4 inclusive)
    2: (Perf.java:Unknown line): 0,08% (4 inclusive)
  1: java.util.ResourceBundle$Control.<clinit>: 0,08% (4 inclusive)
    2: (ResourceBundle.java:2306): 0,08% (4 inclusive)
  1: com.sun.tools.javac.code.Type$ClassType.<init>: 0,08% (4 inclusive)
    2: (Type.java:564): 0,08% (4 inclusive)
  1: java.util.ResourceBundle.loadBundle: 0,08% (4 inclusive)
    2: (ResourceBundle.java:1436): 0,08% (4 inclusive)
  1: java.util.LinkedList.linkLast: 0,08% (4 inclusive)
    2: (LinkedList.java:140): 0,08% (4 inclusive)
  1: java.util.zip.ZipFile$ZipFileInflaterInputStream.fill: 0,08% (4 inclusive)
    2: (ZipFile.java:413): 0,08% (4 inclusive)
  1: java.lang.Class.getAnnotation: 0,08% (4 inclusive)
    2: (Class.java:3048): 0,08% (4 inclusive)
  1: java.util.HashMap.newKeyIterator: 0,08% (4 inclusive)
    2: (HashMap.java:853): 0,08% (4 inclusive)
  1: com.sun.tools.javac.util.JCDiagnostic$Factory.qualify: 0,08% (4 inclusive)
    2: (JCDiagnostic.java:234): 0,08% (4 inclusive)
  1: com.sun.tools.javac.api.ClientCodeWrapper.isTrusted: 0,08% (4 inclusive)
    2: (ClientCodeWrapper.java:177): 0,08% (4 inclusive)
  1: java.lang.Class.isAnnotationPresent: 0,08% (4 inclusive)
    2: (Class.java:3061): 0,08% (4 inclusive)
  1: com.sun.tools.javac.util.ListBuffer.append: 0,08% (4 inclusive)
    2: (ListBuffer.java:132): 0,08% (4 inclusive)
  1: java.nio.file.FileSystems$DefaultFileSystemHolder.getDefaultProvider: 0,08% (4 inclusive)
    2: (FileSystems.java:108): 0,08% (4 inclusive)
  1: com.sun.tools.javac.file.BaseFileObject.removeExtension: 0,08% (4 inclusive)
    2: (BaseFileObject.java:84): 0,08% (4 inclusive)
  1: java.util.LinkedList.add: 0,08% (4 inclusive)
    2: (LinkedList.java:336): 0,08% (4 inclusive)
  1: sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor: 0,08% (4 inclusive)
    2: (UnsafeFieldAccessorFactory.java:125): 0,08% (4 inclusive)
  1: sun.misc.Launcher$AppClassLoader.getPermissions: 0,08% (4 inclusive)
    2: (Launcher.java:316): 0,08% (4 inclusive)
  1: sun.net.www.ParseUtil.encodePath: 0,08% (4 inclusive)
    2: (ParseUtil.java:105): 0,04% (2 inclusive)
    2: (ParseUtil.java:107): 0,02% (1 inclusive)
    2: (ParseUtil.java:146): 0,02% (1 inclusive)
  1: java.util.zip.ZipCoder.getBytes: 0,08% (4 inclusive)
    2: (ZipCoder.java:80): 0,04% (2 inclusive)
    2: (ZipCoder.java:78): 0,02% (1 inclusive)
    2: (ZipCoder.java:89): 0,02% (1 inclusive)
  1: com.sun.tools.javac.code.Types$SimpleVisitor.<init>: 0,08% (4 inclusive)
    2: (Types.java:3760): 0,08% (4 inclusive)
  1: java.lang.Class.initAnnotationsIfNecessary: 0,08% (4 inclusive)
    2: (Class.java:3089): 0,08% (4 inclusive)
  1: java.nio.file.Files.readAttributes: 0,08% (4 inclusive)
    2: (Files.java:1669): 0,08% (4 inclusive)
  1: java.util.Vector.iterator: 0,06% (3 inclusive)
    2: (Vector.java:1114): 0,06% (3 inclusive)
  1: java.io.FileInputStream.close: 0,06% (3 inclusive)
    2: (FileInputStream.java:326): 0,06% (3 inclusive)
  1: com.sun.tools.javac.util.ListBuffer.<init>: 0,06% (3 inclusive)
    2: (ListBuffer.java:71): 0,06% (3 inclusive)
  1: java.util.HashMap.keySet: 0,06% (3 inclusive)
    2: (HashMap.java:882): 0,06% (3 inclusive)
  1: compiler.java.DynamicJavaCompiler.compile: 0,06% (3 inclusive)
    2: (DynamicJavaCompiler.java:46): 0,06% (3 inclusive)
  1: java.util.concurrent.ConcurrentHashMap$HashEntry.<init>: 0,06% (3 inclusive)
    2: (ConcurrentHashMap.java:210): 0,06% (3 inclusive)
  1: java.util.concurrent.ConcurrentHashMap.putIfAbsent: 0,06% (3 inclusive)
    2: (ConcurrentHashMap.java:1084): 0,06% (3 inclusive)
  1: sun.nio.fs.WindowsFileSystemProvider.<init>: 0,06% (3 inclusive)
    2: (WindowsFileSystemProvider.java:52): 0,06% (3 inclusive)
  1: java.lang.ThreadLocal.get: 0,06% (3 inclusive)
    2: (ThreadLocal.java:150): 0,04% (2 inclusive)
    2: (ThreadLocal.java:143): 0,02% (1 inclusive)
  1: java.io.Writer.<init>: 0,06% (3 inclusive)
    2: (Writer.java:75): 0,06% (3 inclusive)
  1: java.util.Collections.emptyIterator: 0,06% (3 inclusive)
    2: (Collections.java:2990): 0,06% (3 inclusive)
  1: trees.MatchIterator.trace: 0,06% (3 inclusive)
    2: (MatchIterator.java:133): 0,06% (3 inclusive)
  1: com.sun.tools.javac.api.JavacTool.getTask: 0,06% (3 inclusive)
    2: (JavacTool.java:181): 0,06% (3 inclusive)
    2: (JavacTool.java:68): 0% (0 inclusive)
  1: java.io.FileInputStream.close0: 0,06% (3 inclusive)
    2: (FileInputStream.java:Unknown line): 0,06% (3 inclusive)
  1: com.sun.tools.javac.util.SharedNameTable.fromUtf: 0,06% (3 inclusive)
    2: (SharedNameTable.java:143): 0,06% (3 inclusive)
  1: com.sun.tools.javac.comp.Resolve.selectBest: 0,06% (3 inclusive)
    2: (Resolve.java:687): 0,06% (3 inclusive)
  1: java.util.Collections$EmptyList.iterator: 0,06% (3 inclusive)
    2: (Collections.java:3183): 0,06% (3 inclusive)
  1: sun.misc.Launcher$AppClassLoader.loadClass: 0,06% (3 inclusive)
    2: (Launcher.java:308): 0,06% (3 inclusive)
  1: sun.nio.fs.WindowsPath.resolve: 0,06% (3 inclusive)
    2: (WindowsPath.java:531): 0,06% (3 inclusive)
    2: (WindowsPath.java:44): 0% (0 inclusive)
  1: com.sun.tools.javac.file.ZipFileIndex$DirectoryEntry.getEntry: 0,06% (3 inclusive)
    2: (ZipFileIndex.java:769): 0,06% (3 inclusive)
  1: com.sun.tools.javac.file.RelativePath$RelativeFile.dirname: 0,06% (3 inclusive)
    2: (RelativePath.java:176): 0,06% (3 inclusive)
  1: sun.net.www.protocol.jar.Handler.parseContextSpec: 0,06% (3 inclusive)
    2: (Handler.java:206): 0,06% (3 inclusive)
  1: grammar.Expression$StringLiteral.accept: 0,06% (3 inclusive)
    2: (Expression.java:308): 0,06% (3 inclusive)
  1: sun.nio.fs.WindowsNativeDispatcher.GetFileAttributesEx0: 0,06% (3 inclusive)
    2: (WindowsNativeDispatcher.java:Unknown line): 0,06% (3 inclusive)
  1: java.util.concurrent.ConcurrentHashMap$Segment.put: 0,06% (3 inclusive)
    2: (ConcurrentHashMap.java:391): 0,06% (3 inclusive)
  1: java.util.AbstractQueue.<init>: 0,06% (3 inclusive)
    2: (AbstractQueue.java:71): 0,06% (3 inclusive)
  1: files.RelativeSourcePath.<init>: 0,06% (3 inclusive)
    2: (RelativeSourcePath.java:70): 0,06% (3 inclusive)
  1: sun.nio.fs.WindowsDirectoryStream$WindowsDirectoryIterator.readNextEntry: 0,06% (3 inclusive)
    2: (WindowsDirectoryStream.java:195): 0,04% (2 inclusive)
    2: (WindowsDirectoryStream.java:190): 0,02% (1 inclusive)
  1: sun.nio.fs.WindowsNativeDispatcher.<clinit>: 0,06% (3 inclusive)
    2: (WindowsNativeDispatcher.java:1136): 0,04% (2 inclusive)
    2: (WindowsNativeDispatcher.java:1129): 0,02% (1 inclusive)
  1: com.sun.tools.javac.code.Symtab.enterBinop: 0,06% (3 inclusive)
    2: (Symtab.java:240): 0,06% (3 inclusive)
  1: com.sun.tools.javac.file.BaseFileObject.<init>: 0,06% (3 inclusive)
    2: (BaseFileObject.java:51): 0,06% (3 inclusive)
  1: java.security.Permissions.add: 0,06% (3 inclusive)
    2: (Permissions.java:133): 0,04% (2 inclusive)
    2: (Permissions.java:141): 0,02% (1 inclusive)
  1: java.lang.String.concat: 0,06% (3 inclusive)
    2: (String.java:2024): 0,06% (3 inclusive)
  1: driver.RequiresParser.parseRequire: 0,06% (3 inclusive)
    2: (RequiresParser.java:114): 0,06% (3 inclusive)
  1: java.util.Collections$UnmodifiableCollection.iterator: 0,06% (3 inclusive)
    2: (Collections.java:1063): 0,06% (3 inclusive)
  1: java.util.HashMap.resize: 0,06% (3 inclusive)
    2: (HashMap.java:477): 0,06% (3 inclusive)
  1: java.util.jar.Attributes.read: 0,06% (3 inclusive)
    2: (Attributes.java:421): 0,04% (2 inclusive)
    2: (Attributes.java:412): 0,02% (1 inclusive)
  1: com.sun.tools.javac.file.ZipFileIndexArchive$ZipFileIndexFileObject.<init>: 0,06% (3 inclusive)
    2: (ZipFileIndexArchive.java:120): 0,06% (3 inclusive)
  1: com.sun.tools.javac.code.Types$UnaryVisitor.<init>: 0,06% (3 inclusive)
    2: (Types.java:3790): 0,06% (3 inclusive)
  1: com.sun.tools.javac.file.ZipFileIndex$DirectoryEntry.access$100: 0,06% (3 inclusive)
    2: (ZipFileIndex.java:700): 0,06% (3 inclusive)
  1: sun.nio.fs.WindowsFileSystemProvider.getFileAttributeView: 0,06% (3 inclusive)
    2: (WindowsFileSystemProvider.java:163): 0,06% (3 inclusive)
  1: com.sun.tools.javac.comp.Resolve.checkRawArgumentsAcceptable: 0,06% (3 inclusive)
    2: (Resolve.java:450): 0,04% (2 inclusive)
    2: (Resolve.java:442): 0,02% (1 inclusive)
  1: java.util.LinkedHashMap.newKeyIterator: 0,06% (3 inclusive)
    2: (LinkedHashMap.java:413): 0,06% (3 inclusive)
  1: sun.nio.fs.WindowsNativeDispatcher.GetFileAttributesEx: 0,06% (3 inclusive)
    2: (WindowsNativeDispatcher.java:369): 0,06% (3 inclusive)
  1: java.util.regex.Pattern.group0: 0,06% (3 inclusive)
    2: (Pattern.java:2854): 0,04% (2 inclusive)
    2: (Pattern.java:2896): 0,02% (1 inclusive)
  1: com.sun.tools.javac.comp.Resolve.rawInstantiate: 0,06% (3 inclusive)
    2: (Resolve.java:395): 0,06% (3 inclusive)
  1: compiler.MatchTreeTransformer.transformChilds: 0,06% (3 inclusive)
    2: (MatchTreeTransformer.java:29): 0,04% (2 inclusive)
    2: (MatchTreeTransformer.java:35): 0,02% (1 inclusive)
    2: (MatchTreeTransformer.java:32): 0% (0 inclusive)
  1: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.access$000: 0,04% (2 inclusive)
    2: (ZipFileIndex.java:483): 0,04% (2 inclusive)
  1: sun.misc.MetaIndex.registerDirectory: 0,04% (2 inclusive)
    2: (MetaIndex.java:166): 0,04% (2 inclusive)
  1: parser.Matcher.<init>: 0,04% (2 inclusive)
    2: (Matcher.java:29): 0,02% (1 inclusive)
    2: (Matcher.java:32): 0,02% (1 inclusive)
  1: com.sun.tools.javac.util.Options.isSet: 0,04% (2 inclusive)
    2: (Options.java:112): 0,04% (2 inclusive)
  1: com.sun.tools.javac.parser.Keywords.<init>: 0,04% (2 inclusive)
    2: (Keywords.java:56): 0,02% (1 inclusive)
    2: (Keywords.java:64): 0,02% (1 inclusive)
  1: sun.net.www.protocol.file.FileURLConnection.getPermission: 0,04% (2 inclusive)
    2: (FileURLConnection.java:227): 0,04% (2 inclusive)
  1: sun.nio.ch.FileChannelImpl.map: 0,04% (2 inclusive)
    2: (FileChannelImpl.java:866): 0,02% (1 inclusive)
    2: (FileChannelImpl.java:868): 0,02% (1 inclusive)
  1: java.io.FileReader.<init>: 0,04% (2 inclusive)
    2: (FileReader.java:72): 0,04% (2 inclusive)
  1: sun.nio.fs.WindowsPath.createFromNormalizedPath: 0,04% (2 inclusive)
    2: (WindowsPath.java:114): 0,04% (2 inclusive)
  1: java.net.URLClassLoader.isSealed: 0,04% (2 inclusive)
    2: (URLClassLoader.java:523): 0,04% (2 inclusive)
  1: java.nio.file.Files.newDirectoryStream: 0,04% (2 inclusive)
    2: (Files.java:400): 0,04% (2 inclusive)
  1: java.lang.ThreadLocal.setInitialValue: 0,04% (2 inclusive)
    2: (ThreadLocal.java:166): 0,04% (2 inclusive)
  1: java.io.File.hashCode: 0,04% (2 inclusive)
    2: (File.java:1985): 0,04% (2 inclusive)
  1: sun.nio.fs.WindowsDirectoryStream$WindowsDirectoryIterator.acceptEntry: 0,04% (2 inclusive)
    2: (WindowsDirectoryStream.java:145): 0,04% (2 inclusive)
  1: sun.nio.fs.WindowsFileSystem.getPath: 0,04% (2 inclusive)
    2: (WindowsFileSystem.java:255): 0,04% (2 inclusive)
  1: com.sun.tools.javac.jvm.ClassReader.readMethod: 0,04% (2 inclusive)
    2: (ClassReader.java:1742): 0,04% (2 inclusive)
  1: java.util.HashMap.get: 0,04% (2 inclusive)
    2: (HashMap.java:317): 0,04% (2 inclusive)
  1: com.sun.tools.javac.comp.Lower.translateTopLevelClass: 0,04% (2 inclusive)
    2: (Lower.java:3643): 0,02% (1 inclusive)
    2: (Lower.java:3654): 0,02% (1 inclusive)
  1: sun.net.www.protocol.file.FileURLConnection.<init>: 0,04% (2 inclusive)
    2: (FileURLConnection.java:68): 0,04% (2 inclusive)
  1: java.security.Permissions.getPermissionCollection: 0,04% (2 inclusive)
    2: (Permissions.java:255): 0,04% (2 inclusive)
  1: sun.reflect.ReflectionFactory.newMethodAccessor: 0,04% (2 inclusive)
    2: (ReflectionFactory.java:155): 0,04% (2 inclusive)
  1: com.sun.tools.javac.file.ZipFileIndex.<init>: 0,04% (2 inclusive)
    2: (ZipFileIndex.java:136): 0,04% (2 inclusive)
  1: java.lang.ClassLoader.findLoadedClass0: 0,04% (2 inclusive)
    2: (ClassLoader.java:Unknown line): 0,04% (2 inclusive)
  1: java.lang.Throwable.fillInStackTrace: 0,04% (2 inclusive)
    2: (Throwable.java:Unknown line): 0,04% (2 inclusive)
    2: (Throwable.java:782): 0% (0 inclusive)
  1: sun.net.www.URLConnection.<init>: 0,04% (2 inclusive)
    2: (URLConnection.java:58): 0,04% (2 inclusive)
  1: java.util.ResourceBundle.getBundleImpl: 0,04% (2 inclusive)
    2: (ResourceBundle.java:1259): 0,04% (2 inclusive)
  1: java.lang.ThreadLocal.createMap: 0,04% (2 inclusive)
    2: (ThreadLocal.java:225): 0,04% (2 inclusive)
  1: java.net.URI.create: 0,04% (2 inclusive)
    2: (URI.java:857): 0,04% (2 inclusive)
  1: compiler.util.MatchCreator.new_match: 0,04% (2 inclusive)
    2: (MatchCreator.java:54): 0,04% (2 inclusive)
  1: com.sun.tools.javac.parser.Keywords.instance: 0,04% (2 inclusive)
    2: (Keywords.java:50): 0,04% (2 inclusive)
  1: java.io.FileInputStream.readBytes: 0,04% (2 inclusive)
    2: (FileInputStream.java:Unknown line): 0,04% (2 inclusive)
  1: com.sun.tools.javac.util.ListBuffer.iterator: 0,04% (2 inclusive)
    2: (ListBuffer.java:205): 0,04% (2 inclusive)
  1: com.sun.tools.javac.util.List.prepend: 0,04% (2 inclusive)
    2: (List.java:174): 0,04% (2 inclusive)
  1: sun.nio.fs.WindowsFileAttributeViews.createBasicView: 0,04% (2 inclusive)
    2: (WindowsFileAttributeViews.java:289): 0,04% (2 inclusive)
  1: com.sun.tools.javac.main.JavaCompiler.desugar: 0,04% (2 inclusive)
    2: (JavaCompiler.java:1393): 0,04% (2 inclusive)
    2: (JavaCompiler.java:1271): 0% (0 inclusive)
  1: java.lang.Class.getEnumConstantsShared: 0,04% (2 inclusive)
    2: (Class.java:2957): 0,04% (2 inclusive)
  1: com.sun.tools.javac.jvm.Gen.initCode: 0,04% (2 inclusive)
    2: (Gen.java:969): 0,02% (1 inclusive)
    2: (Gen.java:980): 0,02% (1 inclusive)
  1: sun.nio.fs.WindowsFileSystem.<clinit>: 0,04% (2 inclusive)
    2: (WindowsFileSystem.java:230): 0,04% (2 inclusive)
  1: java.lang.reflect.Method.invoke: 0,04% (2 inclusive)
    2: (Method.java:599): 0,04% (2 inclusive)
  1: java.util.regex.Pattern.newSlice: 0,04% (2 inclusive)
    2: (Pattern.java:3319): 0,04% (2 inclusive)
  1: java.lang.reflect.Field.<init>: 0,04% (2 inclusive)
    2: (Field.java:117): 0,04% (2 inclusive)
  1: java.util.regex.Pattern.<clinit>: 0,04% (2 inclusive)
    2: (Pattern.java:5005): 0,02% (1 inclusive)
    2: (Pattern.java:5448): 0,02% (1 inclusive)
  1: sun.net.www.protocol.file.Handler.parseURL: 0,04% (2 inclusive)
    2: (Handler.java:67): 0,04% (2 inclusive)
  1: java.io.FilePermission$1.run: 0,04% (2 inclusive)
    2: (FilePermission.java:221): 0,04% (2 inclusive)
  1: java.util.zip.ZipFile$ZipFileInputStream.<init>: 0,04% (2 inclusive)
    2: (ZipFile.java:657): 0,02% (1 inclusive)
    2: (ZipFile.java:659): 0,02% (1 inclusive)
  1: java.util.AbstractSet.<init>: 0,04% (2 inclusive)
    2: (AbstractSet.java:63): 0,04% (2 inclusive)
  1: java.util.jar.Attributes.putValue: 0,04% (2 inclusive)
    2: (Attributes.java:168): 0,04% (2 inclusive)
  1: util.CollectingFileVisitor.visitFile: 0,04% (2 inclusive)
    2: (CollectingFileVisitor.java:35): 0,04% (2 inclusive)
    2: (CollectingFileVisitor.java:1): 0% (0 inclusive)
  1: com.sun.tools.javac.file.FSInfo.isFile: 0,04% (2 inclusive)
    2: (FSInfo.java:62): 0,04% (2 inclusive)
  1: com.sun.tools.javac.code.Symbol$MethodSymbol.<init>: 0,04% (2 inclusive)
    2: (Symbol.java:1043): 0,04% (2 inclusive)
  1: sun.launcher.LauncherHelper.makePlatformString: 0,04% (2 inclusive)
    2: (LauncherHelper.java:522): 0,04% (2 inclusive)
  1: sun.nio.ch.Util.load: 0,04% (2 inclusive)
    2: (Util.java:485): 0,02% (1 inclusive)
    2: (Util.java:491): 0,02% (1 inclusive)
  1: com.sun.tools.javac.code.Scope$ImportScope.makeEntry: 0,04% (2 inclusive)
    2: (Scope.java:515): 0,04% (2 inclusive)
  1: com.sun.tools.javac.code.Scope$ImportScope$ImportEntry.<init>: 0,04% (2 inclusive)
    2: (Scope.java:522): 0,04% (2 inclusive)
  1: com.sun.tools.javac.jvm.ClassReader.<init>: 0,04% (2 inclusive)
    2: (ClassReader.java:263): 0,02% (1 inclusive)
    2: (ClassReader.java:264): 0,02% (1 inclusive)
  1: java.nio.file.FileSystems$DefaultFileSystemHolder$1.run: 0,04% (2 inclusive)
    2: (FileSystems.java:98): 0,04% (2 inclusive)
  1: com.sun.tools.javac.code.Symbol$TypeSymbol.formFullName: 0,04% (2 inclusive)
    2: (Symbol.java:532): 0,04% (2 inclusive)
  1: java.lang.ClassLoader.getClassLoadingLock: 0,04% (2 inclusive)
    2: (ClassLoader.java:461): 0,04% (2 inclusive)
  1: java.util.regex.Pattern.atom: 0,04% (2 inclusive)
    2: (Pattern.java:2199): 0,04% (2 inclusive)
  1: sun.nio.fs.WindowsDirectoryStream$WindowsDirectoryIterator.hasNext: 0,04% (2 inclusive)
    2: (WindowsDirectoryStream.java:204): 0,04% (2 inclusive)
  1: com.sun.tools.javac.main.JavaCompiler.<init>: 0,04% (2 inclusive)
    2: (JavaCompiler.java:331): 0,02% (1 inclusive)
    2: (JavaCompiler.java:407): 0,02% (1 inclusive)
  1: com.sun.tools.javac.util.ListBuffer$1.<init>: 0,04% (2 inclusive)
    2: (ListBuffer.java:205): 0,04% (2 inclusive)
  1: java.util.ResourceBundle.putBundleInCache: 0,04% (2 inclusive)
    2: (ResourceBundle.java:1629): 0,04% (2 inclusive)
  1: java.net.URLClassLoader$1.<init>: 0,04% (2 inclusive)
    2: (URLClassLoader.java:355): 0,04% (2 inclusive)
  1: com.sun.tools.javac.file.Paths$Path.addFile: 0,04% (2 inclusive)
    2: (Paths.java:318): 0,04% (2 inclusive)
  1: com.sun.tools.javac.parser.ParserFactory.<init>: 0,04% (2 inclusive)
    2: (ParserFactory.java:70): 0,04% (2 inclusive)
  1: java.lang.reflect.AccessibleObject.<init>: 0,04% (2 inclusive)
    2: (AccessibleObject.java:158): 0,04% (2 inclusive)
  1: java.lang.reflect.Method.acquireMethodAccessor: 0,04% (2 inclusive)
    2: (Method.java:654): 0,04% (2 inclusive)
  1: java.lang.ClassLoader.getResources: 0,04% (2 inclusive)
    2: (ClassLoader.java:1174): 0,02% (1 inclusive)
    2: (ClassLoader.java:1176): 0,02% (1 inclusive)
  1: sun.nio.fs.WindowsFileSystem$2.matches: 0,04% (2 inclusive)
    2: (WindowsFileSystem.java:312): 0,04% (2 inclusive)
  1: java.net.URLClassLoader.findResource: 0,04% (2 inclusive)
    2: (URLClassLoader.java:548): 0,04% (2 inclusive)
  1: sun.nio.fs.WindowsNativeDispatcher.initIDs: 0,04% (2 inclusive)
    2: (WindowsNativeDispatcher.java:Unknown line): 0,04% (2 inclusive)
  1: java.nio.file.FileSystems$DefaultFileSystemHolder.access$000: 0,04% (2 inclusive)
    2: (FileSystems.java:89): 0,04% (2 inclusive)
  1: java.util.regex.Pattern.matcher: 0,04% (2 inclusive)
    2: (Pattern.java:1088): 0,04% (2 inclusive)
  1: com.sun.tools.javac.jvm.Gen.genMethod: 0,04% (2 inclusive)
    2: (Gen.java:909): 0,04% (2 inclusive)
  1: java.lang.ClassLoader.findLoadedClass: 0,04% (2 inclusive)
    2: (ClassLoader.java:1084): 0,04% (2 inclusive)
  1: com.sun.tools.javac.parser.JavacParser.term3: 0,04% (2 inclusive)
    2: (JavacParser.java:1031): 0,02% (1 inclusive)
    2: (JavacParser.java:896): 0,02% (1 inclusive)
  1: com.sun.tools.javac.parser.JavacParser.term2: 0,04% (2 inclusive)
    2: (JavacParser.java:701): 0,02% (1 inclusive)
    2: (JavacParser.java:704): 0,02% (1 inclusive)
  1: com.sun.tools.javac.parser.JavacParser.term1: 0,04% (2 inclusive)
    2: (JavacParser.java:672): 0,04% (2 inclusive)
  1: driver.Config.<init>: 0,04% (2 inclusive)
    2: (Config.java:28): 0,04% (2 inclusive)
  1: java.lang.reflect.Field.copy: 0,04% (2 inclusive)
    2: (Field.java:140): 0,04% (2 inclusive)
  1: compiler.util.Quoter$DynamicQuoteMethod.dynamicQuote: 0,04% (2 inclusive)
    2: (Quoter.java:68): 0,04% (2 inclusive)
  1: trees.MatchSpec.<init>: 0,04% (2 inclusive)
    2: (MatchSpec.java:18): 0,04% (2 inclusive)
  1: com.sun.tools.javac.code.Types$ImplementationCache.get: 0,04% (2 inclusive)
    2: (Types.java:2067): 0,02% (1 inclusive)
    2: (Types.java:2068): 0,02% (1 inclusive)
  1: sun.reflect.NativeMethodAccessorImpl.invoke0: 0,04% (2 inclusive)
    2: (NativeMethodAccessorImpl.java:Unknown line): 0,04% (2 inclusive)
  1: com.sun.tools.javac.main.JavaCompiler.instance: 0,04% (2 inclusive)
    2: (JavaCompiler.java:88): 0,04% (2 inclusive)
  1: driver.Config.<clinit>: 0,04% (2 inclusive)
    2: (Config.java:16): 0,04% (2 inclusive)
  1: source.SourceComposed.<init>: 0,04% (2 inclusive)
    2: (SourceComposed.java:17): 0,04% (2 inclusive)
  1: java.io.File.isFile: 0,04% (2 inclusive)
    2: (File.java:829): 0,04% (2 inclusive)
  1: java.util.jar.JarVerifier.beginEntry: 0,04% (2 inclusive)
    2: (JarVerifier.java:142): 0,04% (2 inclusive)
  1: java.util.Collections$UnmodifiableCollection.size: 0,04% (2 inclusive)
    2: (Collections.java:1055): 0,04% (2 inclusive)
  1: driver.EntryPoint.main: 0,04% (2 inclusive)
    2: (EntryPoint.java:24): 0,04% (2 inclusive)
  1: compiler.MacroExpander.transform: 0,04% (2 inclusive)
    2: (MacroExpander.java:32): 0,04% (2 inclusive)
  1: sun.net.www.protocol.jar.Handler.parseURL: 0,04% (2 inclusive)
    2: (Handler.java:152): 0,02% (1 inclusive)
    2: (Handler.java:156): 0,02% (1 inclusive)
  1: com.sun.tools.javac.code.Scope.<init>: 0,04% (2 inclusive)
    2: (Scope.java:113): 0,02% (1 inclusive)
    2: (Scope.java:95): 0,02% (1 inclusive)
    2: (Scope.java:105): 0% (0 inclusive)
  1: sun.nio.fs.WindowsFileSystem.<init>: 0,04% (2 inclusive)
    2: (WindowsFileSystem.java:57): 0,04% (2 inclusive)
  1: com.sun.tools.javac.code.DeferredLintHandler.flush: 0,04% (2 inclusive)
    2: (DeferredLintHandler.java:76): 0,04% (2 inclusive)
  1: java.io.FilePermission.newPermissionCollection: 0,04% (2 inclusive)
    2: (FilePermission.java:657): 0,04% (2 inclusive)
  1: com.sun.tools.javac.file.ZipFileIndex$DirectoryEntry.<init>: 0,04% (2 inclusive)
    2: (ZipFileIndex.java:720): 0,04% (2 inclusive)
  1: java.nio.channels.FileChannel.<clinit>: 0,04% (2 inclusive)
    2: (FileChannel.java:290): 0,04% (2 inclusive)
  1: java.io.FileInputStream.read: 0,04% (2 inclusive)
    2: (FileInputStream.java:242): 0,04% (2 inclusive)
  1: java.util.regex.Pattern$CharPropertyNames.charPropertyFor: 0,04% (2 inclusive)
    2: (Pattern.java:5454): 0,04% (2 inclusive)
  1: java.lang.ClassLoader.getPackage: 0,04% (2 inclusive)
    2: (ClassLoader.java:1632): 0,04% (2 inclusive)
    2: (ClassLoader.java:1630): 0% (0 inclusive)
  1: compiler.util.Quoter.dynamicQuote: 0,04% (2 inclusive)
    2: (Quoter.java:39): 0,04% (2 inclusive)
  1: java.lang.StringCoding.deref: 0,04% (2 inclusive)
    2: (StringCoding.java:63): 0,04% (2 inclusive)
  1: java.net.URI.<init>: 0,04% (2 inclusive)
    2: (URI.java:595): 0,04% (2 inclusive)
  1: java.util.jar.Manifest$FastInputStream.fill: 0,04% (2 inclusive)
    2: (Manifest.java:439): 0,04% (2 inclusive)
  1: java.nio.file.FileSystems.getDefault: 0,04% (2 inclusive)
    2: (FileSystems.java:176): 0,04% (2 inclusive)
  1: com.sun.tools.javac.main.JavaCompiler.parseFiles: 0,02% (1 inclusive)
    2: (JavaCompiler.java:905): 0,02% (1 inclusive)
  1: sun.nio.cs.MS1252.newDecoder: 0,02% (1 inclusive)
    2: (MS1252.java:51): 0,02% (1 inclusive)
  1: java.lang.ClassLoader.getBootstrapResources: 0,02% (1 inclusive)
    2: (ClassLoader.java:1308): 0,02% (1 inclusive)
  1: com.sun.tools.javac.tree.JCTree$JCFieldAccess.<init>: 0,02% (1 inclusive)
    2: (JCTree.java:1671): 0,02% (1 inclusive)
  1: com.sun.tools.javac.code.Scope.dup: 0,02% (1 inclusive)
    2: (Scope.java:131): 0,02% (1 inclusive)
  1: com.sun.tools.javac.code.Type$PackageType.<init>: 0,02% (1 inclusive)
    2: (Type.java:974): 0,02% (1 inclusive)
  1: java.util.WeakHashMap$Entry.<init>: 0,02% (1 inclusive)
    2: (WeakHashMap.java:691): 0,02% (1 inclusive)
  1: driver.Context.<clinit>: 0,02% (1 inclusive)
    2: (Context.java:20): 0,02% (1 inclusive)
  1: parser.Match.first: 0,02% (1 inclusive)
    2: (Match.java:253): 0,02% (1 inclusive)
  1: java.lang.ref.Finalizer.access$100: 0,02% (1 inclusive)
    2: (Finalizer.java:32): 0,02% (1 inclusive)
  1: parser.Matcher.visitChoice: 0,02% (1 inclusive)
    2: (Matcher.java:171): 0,02% (1 inclusive)
  1: java.lang.ref.Finalizer$FinalizerThread.run: 0,02% (1 inclusive)
    2: (Finalizer.java:178): 0,02% (1 inclusive)
  1: com.sun.tools.javac.util.Names.createTable: 0,02% (1 inclusive)
    2: (Names.java:276): 0,02% (1 inclusive)
  1: java.io.InputStream.<init>: 0,02% (1 inclusive)
    2: (InputStream.java:45): 0,02% (1 inclusive)
  1: com.sun.tools.javac.file.FSInfo.isDirectory: 0,02% (1 inclusive)
    2: (FSInfo.java:58): 0,02% (1 inclusive)
  1: com.sun.tools.javac.file.JavacFileManager.list: 0,02% (1 inclusive)
    2: (JavacFileManager.java:644): 0,02% (1 inclusive)
  1: com.sun.tools.javac.util.Names.<init>: 0,02% (1 inclusive)
    2: (Names.java:157): 0,02% (1 inclusive)
  1: com.sun.tools.javac.jvm.ClassReader.readClassOrType: 0,02% (1 inclusive)
    2: (ClassReader.java:546): 0,02% (1 inclusive)
  1: com.sun.tools.javac.util.Names.fromChars: 0,02% (1 inclusive)
    2: (Names.java:284): 0,02% (1 inclusive)
  1: com.sun.tools.javac.parser.Scanner.scanOperator: 0,02% (1 inclusive)
    2: (Scanner.java:620): 0,02% (1 inclusive)
  1: com.sun.tools.javac.jvm.Code.emitStackMap: 0,02% (1 inclusive)
    2: (Code.java:1215): 0,02% (1 inclusive)
  1: com.sun.tools.javac.code.Scope$CompoundScope$2$1.nextIterator: 0,02% (1 inclusive)
    2: (Scope.java:665): 0,02% (1 inclusive)
  1: com.sun.tools.javac.parser.JavacParser.newPosStack: 0,02% (1 inclusive)
    2: (JavacParser.java:840): 0,02% (1 inclusive)
  1: com.sun.tools.javac.jvm.ClassReader$2.<init>: 0,02% (1 inclusive)
    2: (ClassReader.java:938): 0,02% (1 inclusive)
  1: grammar.GrammarDSL.chars: 0,02% (1 inclusive)
    2: (GrammarDSL.java:116): 0,02% (1 inclusive)
  1: java.util.Arrays.sort: 0,02% (1 inclusive)
    2: (Arrays.java:469): 0,02% (1 inclusive)
  1: java.lang.Object.getClass: 0,02% (1 inclusive)
    2: (Object.java:Unknown line): 0,02% (1 inclusive)
  1: com.sun.tools.javac.util.JavacMessages.<init>: 0,02% (1 inclusive)
    2: (JavacMessages.java:98): 0,02% (1 inclusive)
  1: com.sun.tools.javac.util.JCDiagnostic$Factory.create: 0,02% (1 inclusive)
    2: (JCDiagnostic.java:230): 0,02% (1 inclusive)
  1: grammar.java.CallbacksMacroDefinition.<clinit>: 0,02% (1 inclusive)
    2: (CallbacksMacroDefinition.java:24): 0,02% (1 inclusive)
  1: com.sun.tools.javac.code.Types.memberType: 0,02% (1 inclusive)
    2: (Types.java:1513): 0,02% (1 inclusive)
  1: sun.misc.PerfCounter.<clinit>: 0,02% (1 inclusive)
    2: (PerfCounter.java:51): 0,02% (1 inclusive)
  1: com.sun.tools.javac.jvm.Code$State.<init>: 0,02% (1 inclusive)
    2: (Code.java:1606): 0,02% (1 inclusive)
  1: files.RelativeSourcePath.fileName: 0,02% (1 inclusive)
    2: (RelativeSourcePath.java:111): 0,02% (1 inclusive)
  1: sun.misc.Launcher$BootClassPathHolder$1.run: 0,02% (1 inclusive)
    2: (Launcher.java:375): 0,02% (1 inclusive)
  1: com.sun.tools.javac.tree.TreeMaker.Unary: 0,02% (1 inclusive)
    2: (TreeMaker.java:373): 0,02% (1 inclusive)
  1: com.sun.tools.javac.util.RichDiagnosticFormatter.instance: 0,02% (1 inclusive)
    2: (RichDiagnosticFormatter.java:88): 0,02% (1 inclusive)
  1: java.io.StringWriter.toString: 0,02% (1 inclusive)
    2: (StringWriter.java:210): 0,02% (1 inclusive)
  1: com.sun.tools.javac.tree.TreeInfo.<init>: 0,02% (1 inclusive)
    2: (TreeInfo.java:68): 0,02% (1 inclusive)
  1: java.util.Arrays$LegacyMergeSort.<clinit>: 0,02% (1 inclusive)
    2: (Arrays.java:387): 0,02% (1 inclusive)
  1: trees.MatchSpec$ExprSpec.<init>: 0,02% (1 inclusive)
    2: (MatchSpec.java:133): 0,02% (1 inclusive)
  1: com.sun.tools.javac.tree.JCTree.<init>: 0,02% (1 inclusive)
    2: (JCTree.java:79): 0,02% (1 inclusive)
  1: java.io.File.getParentFile: 0,02% (1 inclusive)
    2: (File.java:475): 0,02% (1 inclusive)
  1: java.util.Arrays$ArrayList.<init>: 0,02% (1 inclusive)
    2: (Arrays.java:2840): 0,02% (1 inclusive)
  1: java.util.regex.Pattern.access$600: 0,02% (1 inclusive)
    2: (Pattern.java:763): 0,02% (1 inclusive)
  1: com.sun.tools.javac.comp.Check.checkConflicts: 0,02% (1 inclusive)
    2: (Check.java:2078): 0,02% (1 inclusive)
  1: com.sun.tools.javac.comp.AttrContext.<init>: 0,02% (1 inclusive)
    2: (AttrContext.java:39): 0,02% (1 inclusive)
  1: java.util.zip.ZipEntry.<init>: 0,02% (1 inclusive)
    2: (ZipEntry.java:80): 0,02% (1 inclusive)
  1: java.util.Vector.ensureCapacityHelper: 0,02% (1 inclusive)
    2: (Vector.java:242): 0,02% (1 inclusive)
  1: sun.nio.fs.NativeBuffer.release: 0,02% (1 inclusive)
    2: (NativeBuffer.java:63): 0,02% (1 inclusive)
  1: com.sun.tools.javac.code.Type$WildcardType.<init>: 0,02% (1 inclusive)
    2: (Type.java:446): 0,02% (1 inclusive)
  1: com.sun.tools.javac.tree.JCTree$JCExpression.<init>: 0,02% (1 inclusive)
    2: (JCTree.java:543): 0,02% (1 inclusive)
  1: java.util.jar.JarEntry.<init>: 0,02% (1 inclusive)
    2: (JarEntry.java:62): 0,02% (1 inclusive)
  1: java.util.regex.Pattern$Ctype.isSatisfiedBy: 0,02% (1 inclusive)
    2: (Pattern.java:3832): 0,02% (1 inclusive)
  1: trees.MatchSpec$RuleSpec.<init>: 0,02% (1 inclusive)
    2: (MatchSpec.java:59): 0,02% (1 inclusive)
  1: com.sun.tools.javac.jvm.ClassWriter.instance: 0,02% (1 inclusive)
    2: (ClassWriter.java:161): 0,02% (1 inclusive)
  1: com.sun.tools.javac.util.RichDiagnosticFormatter.<init>: 0,02% (1 inclusive)
    2: (RichDiagnosticFormatter.java:94): 0,02% (1 inclusive)
  1: com.sun.tools.javac.comp.Env.<init>: 0,02% (1 inclusive)
    2: (Env.java:81): 0,02% (1 inclusive)
  1: java.lang.Float.valueOf: 0,02% (1 inclusive)
    2: (Float.java:417): 0,02% (1 inclusive)
  1: sun.nio.ch.FileChannelImpl.size: 0,02% (1 inclusive)
    2: (FileChannelImpl.java:289): 0,02% (1 inclusive)
  1: java.util.zip.ZipFile.getEntryCSize: 0,02% (1 inclusive)
    2: (ZipFile.java:Unknown line): 0,02% (1 inclusive)
  1: com.sun.tools.javac.code.Scope$3$1.<init>: 0,02% (1 inclusive)
    2: (Scope.java:420): 0,02% (1 inclusive)
  1: java.util.regex.Pattern$SliceU.match: 0,02% (1 inclusive)
    2: (Pattern.java:3916): 0,02% (1 inclusive)
  1: java.util.ArrayList.toArray: 0,02% (1 inclusive)
    2: (ArrayList.java:360): 0,02% (1 inclusive)
  1: sun.nio.fs.WindowsFileAttributes.<init>: 0,02% (1 inclusive)
    2: (WindowsFileAttributes.java:174): 0,02% (1 inclusive)
  1: grammar.Expression$CharClass.<init>: 0,02% (1 inclusive)
    2: (Expression.java:344): 0,02% (1 inclusive)
  1: com.sun.tools.javac.processing.JavacProcessingEnvironment.<clinit>: 0,02% (1 inclusive)
    2: (JavacProcessingEnvironment.java:1446): 0,02% (1 inclusive)
  1: trees.MatchSpec.expr: 0,02% (1 inclusive)
    2: (MatchSpec.java:156): 0,02% (1 inclusive)
  1: com.sun.tools.javac.parser.Scanner.nextToken: 0,02% (1 inclusive)
    2: (Scanner.java:934): 0,02% (1 inclusive)
  1: java.lang.Class.getComponentType: 0,02% (1 inclusive)
    2: (Class.java:Unknown line): 0,02% (1 inclusive)
  1: com.sun.tools.javac.jvm.Pool$Method.<init>: 0,02% (1 inclusive)
    2: (Pool.java:130): 0,02% (1 inclusive)
  1: java.security.PrivilegedActionException.<init>: 0,02% (1 inclusive)
    2: (PrivilegedActionException.java:66): 0,02% (1 inclusive)
  1: java.util.Collections$UnmodifiableCollection.toArray: 0,02% (1 inclusive)
    2: (Collections.java:1059): 0,02% (1 inclusive)
  1: java.io.ObjectStreamField.getClassSignature: 0,02% (1 inclusive)
    2: (ObjectStreamField.java:310): 0,02% (1 inclusive)
  1: sun.misc.PerfCounter.get: 0,02% (1 inclusive)
    2: (PerfCounter.java:83): 0,02% (1 inclusive)
  1: com.sun.tools.javac.tree.JCTree$JCIdent.accept: 0,02% (1 inclusive)
    2: (JCTree.java:1705): 0,02% (1 inclusive)
  1: com.sun.tools.javac.comp.Attr.visitIdent: 0,02% (1 inclusive)
    2: (Attr.java:2221): 0,02% (1 inclusive)
  1: java.lang.ReflectiveOperationException.<init>: 0,02% (1 inclusive)
    2: (ReflectiveOperationException.java:75): 0,02% (1 inclusive)
  1: sun.misc.Unsafe.getLong: 0,02% (1 inclusive)
    2: (Unsafe.java:Unknown line): 0,02% (1 inclusive)
  1: com.sun.tools.javac.comp.Enter.classEnv: 0,02% (1 inclusive)
    2: (Enter.java:192): 0,02% (1 inclusive)
  1: grammar.java._A_Lexical.keyword: 0,02% (1 inclusive)
    2: (_A_Lexical.java:61): 0,02% (1 inclusive)
    2: (_A_Lexical.java:68): 0% (0 inclusive)
  1: compiler.java.StringJavaFileObject.getCharContent: 0,02% (1 inclusive)
    2: (StringJavaFileObject.java:37): 0,02% (1 inclusive)
    2: (StringJavaFileObject.java:1): 0% (0 inclusive)
  1: com.sun.tools.javac.code.Types.implementation: 0,02% (1 inclusive)
    2: (Types.java:2096): 0,02% (1 inclusive)
  1: sun.launcher.LauncherHelper.checkAndLoadMain: 0,02% (1 inclusive)
    2: (LauncherHelper.java:480): 0,02% (1 inclusive)
  1: java.util.Collections.emptyEnumeration: 0,02% (1 inclusive)
    2: (Collections.java:3075): 0,02% (1 inclusive)
  1: java.io.FileDescriptor.<init>: 0,02% (1 inclusive)
    2: (FileDescriptor.java:60): 0,02% (1 inclusive)
  1: java.util.AbstractCollection.addAll: 0,02% (1 inclusive)
    2: (AbstractCollection.java:333): 0,02% (1 inclusive)
  1: com.sun.tools.javac.main.JavacOption$Option.<init>: 0,02% (1 inclusive)
    2: (JavacOption.java:114): 0,02% (1 inclusive)
    2: (JavacOption.java:123): 0% (0 inclusive)
  1: com.sun.tools.javac.code.Symbol$MethodSymbol.overrides: 0,02% (1 inclusive)
    2: (Symbol.java:1165): 0,02% (1 inclusive)
  1: com.sun.tools.javac.main.RecognizedOptions$11.<init>: 0,02% (1 inclusive)
    2: (RecognizedOptions.java:365): 0,02% (1 inclusive)
  1: java.lang.Enum.compareTo: 0,02% (1 inclusive)
    2: (Enum.java:178): 0,02% (1 inclusive)
  1: sun.misc.PerfCounter.add: 0,02% (1 inclusive)
    2: (PerfCounter.java:97): 0,02% (1 inclusive)
  1: java.nio.DirectLongBufferU.get: 0,02% (1 inclusive)
    2: (DirectLongBufferU.java:253): 0,02% (1 inclusive)
  1: com.sun.tools.javac.code.Types$ImplementationCache.implementationInternal: 0,02% (1 inclusive)
    2: (Types.java:2084): 0,02% (1 inclusive)
  1: java.lang.StringCoding$StringDecoder.<init>: 0,02% (1 inclusive)
    2: (StringCoding.java:131): 0,02% (1 inclusive)
    2: (StringCoding.java:122): 0% (0 inclusive)
  1: com.sun.tools.javac.code.Symtab.initType: 0,02% (1 inclusive)
    2: (Symtab.java:208): 0,02% (1 inclusive)
  1: com.sun.tools.javac.util.Convert.utf2string: 0,02% (1 inclusive)
    2: (Convert.java:145): 0,02% (1 inclusive)
  1: com.sun.tools.javac.api.JavacTaskImpl.call: 0,02% (1 inclusive)
    2: (JavacTaskImpl.java:132): 0,02% (1 inclusive)
  1: java.net.URL.toExternalForm: 0,02% (1 inclusive)
    2: (URL.java:919): 0,02% (1 inclusive)
  1: com.sun.tools.javac.jvm.ClassWriter.nameType: 0,02% (1 inclusive)
    2: (ClassWriter.java:557): 0,02% (1 inclusive)
  1: sun.nio.ch.Util.initDBBRConstructor: 0,02% (1 inclusive)
    2: (Util.java:411): 0,02% (1 inclusive)
  1: com.sun.tools.javac.jvm.Code.<init>: 0,02% (1 inclusive)
    2: (Code.java:213): 0,02% (1 inclusive)
  1: com.sun.tools.javac.jvm.ClassReader.readClassSymbol: 0,02% (1 inclusive)
    2: (ClassReader.java:562): 0,02% (1 inclusive)
  1: driver.CompilationDriver.dumpAndOrLoadClass: 0,02% (1 inclusive)
    2: (CompilationDriver.java:125): 0,02% (1 inclusive)
  1: com.sun.tools.javac.jvm.ClassWriter.assembleClassSig: 0,02% (1 inclusive)
    2: (ClassWriter.java:387): 0,02% (1 inclusive)
  1: com.sun.tools.javac.main.JavaCompiler.compile: 0,02% (1 inclusive)
    2: (JavaCompiler.java:824): 0,02% (1 inclusive)
  1: sun.misc.Unsafe.getByte: 0,02% (1 inclusive)
    2: (Unsafe.java:Unknown line): 0,02% (1 inclusive)
  1: compiler.util.Quoter.primitiveQuote: 0,02% (1 inclusive)
    2: (Quoter.java:214): 0,02% (1 inclusive)
  1: java.lang.Character.toLowerCase: 0,02% (1 inclusive)
    2: (Character.java:6148): 0,02% (1 inclusive)
  1: trees.MatchSpec.rule: 0,02% (1 inclusive)
    2: (MatchSpec.java:84): 0,02% (1 inclusive)
  1: com.sun.tools.javac.parser.Scanner.token: 0,02% (1 inclusive)
    2: (Scanner.java:981): 0,02% (1 inclusive)
  1: java.util.regex.Pattern$CharPropertyNames$5.make: 0,02% (1 inclusive)
    2: (Pattern.java:5573): 0,02% (1 inclusive)
  1: com.sun.tools.javac.code.Types$Subst.visitMethodType: 0,02% (1 inclusive)
    2: (Types.java:2288): 0,02% (1 inclusive)
  1: com.sun.tools.javac.code.Scope$3.iterator: 0,02% (1 inclusive)
    2: (Scope.java:420): 0,02% (1 inclusive)
  1: grammar.java._B_Expressions.<init>: 0,02% (1 inclusive)
    2: (_B_Expressions.java:12): 0,02% (1 inclusive)
  1: parser.Match.getCaptures: 0,02% (1 inclusive)
    2: (Match.java:208): 0,02% (1 inclusive)
  1: java.util.regex.Pattern$GroupHead.match: 0,02% (1 inclusive)
    2: (Pattern.java:4556): 0,02% (1 inclusive)
  1: com.sun.tools.javac.util.Context.put: 0,02% (1 inclusive)
    2: (Context.java:124): 0,02% (1 inclusive)
    2: (Context.java:197): 0% (0 inclusive)
  1: java.lang.CharacterDataLatin1.toLowerCase: 0,02% (1 inclusive)
    2: (CharacterDataLatin1.java:138): 0,02% (1 inclusive)
  1: java.util.ServiceLoader.iterator: 0,02% (1 inclusive)
    2: (ServiceLoader.java:424): 0,02% (1 inclusive)
  1: java.lang.ref.Finalizer.runFinalizer: 0,02% (1 inclusive)
    2: (Finalizer.java:101): 0,02% (1 inclusive)
  1: com.sun.tools.javac.jvm.ClassReader$AttributeReader.<init>: 0,02% (1 inclusive)
    2: (ClassReader.java:893): 0,02% (1 inclusive)
  1: com.sun.tools.javac.comp.AttrContext.dup: 0,02% (1 inclusive)
    2: (AttrContext.java:77): 0,02% (1 inclusive)
  1: com.sun.tools.javac.comp.Resolve.findMethod: 0,02% (1 inclusive)
    2: (Resolve.java:949): 0,02% (1 inclusive)
  1: java.util.ArrayList.subList: 0,02% (1 inclusive)
    2: (ArrayList.java:915): 0,02% (1 inclusive)
  1: java.lang.Integer$IntegerCache.<clinit>: 0,02% (1 inclusive)
    2: (Integer.java:617): 0,02% (1 inclusive)
  1: sun.nio.cs.MS1252.<clinit>: 0,02% (1 inclusive)
    2: (MS1252.java:112): 0,02% (1 inclusive)
  1: java.nio.DirectByteBuffer.get: 0,02% (1 inclusive)
    2: (DirectByteBuffer.java:249): 0,02% (1 inclusive)
  1: com.sun.tools.javac.comp.Attr.visitTypeArray: 0,02% (1 inclusive)
    2: (Attr.java:2864): 0,02% (1 inclusive)
  1: java.lang.ClassLoader.findResources: 0,02% (1 inclusive)
    2: (ClassLoader.java:1215): 0,02% (1 inclusive)
  1: java.nio.CharBuffer.wrap: 0,02% (1 inclusive)
    2: (CharBuffer.java:462): 0,02% (1 inclusive)
    2: (CharBuffer.java:483): 0% (0 inclusive)
  1: com.sun.tools.javac.code.Types$ImplementationCache$Entry.<init>: 0,02% (1 inclusive)
    2: (Types.java:2042): 0,02% (1 inclusive)
  1: java.io.RandomAccessFile.close0: 0,02% (1 inclusive)
    2: (RandomAccessFile.java:Unknown line): 0,02% (1 inclusive)
  1: com.sun.tools.javac.util.ByteBuffer.copy: 0,02% (1 inclusive)
    2: (ByteBuffer.java:64): 0,02% (1 inclusive)
  1: sun.nio.cs.UTF_8$Decoder.decodeBufferLoop: 0,02% (1 inclusive)
    2: (UTF_8.java:285): 0,02% (1 inclusive)
  1: java.lang.ref.WeakReference.<init>: 0,02% (1 inclusive)
    2: (WeakReference.java:69): 0,02% (1 inclusive)
  1: driver.DependencyResolver.<init>: 0,02% (1 inclusive)
    2: (DependencyResolver.java:65): 0,02% (1 inclusive)
  1: com.sun.tools.javac.code.Type$ArrayType.<init>: 0,02% (1 inclusive)
    2: (Type.java:784): 0,02% (1 inclusive)
  1: com.sun.tools.javac.code.Symbol$PackageSymbol.<init>: 0,02% (1 inclusive)
    2: (Symbol.java:640): 0,02% (1 inclusive)
  1: com.sun.tools.javac.comp.Check.checkDeprecated: 0,02% (1 inclusive)
    2: (Check.java:2458): 0,02% (1 inclusive)
  1: java.security.SecureClassLoader.getPermissions: 0,02% (1 inclusive)
    2: (SecureClassLoader.java:192): 0,02% (1 inclusive)
  1: com.sun.tools.javac.code.Symbol$DelegatedSymbol.<init>: 0,02% (1 inclusive)
    2: (Symbol.java:474): 0,02% (1 inclusive)
  1: com.sun.tools.javac.jvm.Items$LocalItem.<init>: 0,02% (1 inclusive)
    2: (Items.java:382): 0,02% (1 inclusive)
  1: com.sun.tools.javac.comp.Lower$1.visitMethodDef: 0,02% (1 inclusive)
    2: (Lower.java:645): 0,02% (1 inclusive)
  1: com.sun.tools.javac.main.JavaCompiler.genCode: 0,02% (1 inclusive)
    2: (JavaCompiler.java:712): 0,02% (1 inclusive)
  1: com.sun.tools.javac.jvm.ClassReader.instance: 0,02% (1 inclusive)
    2: (ClassReader.java:226): 0,02% (1 inclusive)
  1: java.util.HashMap.values: 0,02% (1 inclusive)
    2: (HashMap.java:918): 0,02% (1 inclusive)
  1: com.sun.tools.javac.jvm.ClassFile.<init>: 0,02% (1 inclusive)
    2: (ClassFile.java:66): 0,02% (1 inclusive)
  1: sun.nio.fs.WindowsFileAttributes.fromFindData: 0,02% (1 inclusive)
    2: (WindowsFileAttributes.java:251): 0,02% (1 inclusive)
  1: source.SourceStream.<init>: 0,02% (1 inclusive)
    2: (SourceStream.java:39): 0,02% (1 inclusive)
  1: com.sun.tools.javac.jvm.ClassWriter.<init>: 0,02% (1 inclusive)
    2: (ClassWriter.java:167): 0,02% (1 inclusive)
  1: sun.misc.FloatingDecimal.parseHexString: 0,02% (1 inclusive)
    2: (FloatingDecimal.java:2300): 0,02% (1 inclusive)
  1: com.sun.tools.javac.jvm.ClassReader.readPool: 0,02% (1 inclusive)
    2: (ClassReader.java:478): 0,02% (1 inclusive)
  1: java.util.jar.JarFile$JarFileEntry.<init>: 0,02% (1 inclusive)
    2: (JarFile.java:250): 0,02% (1 inclusive)
  1: driver.RequiresParser.parseRequires: 0,02% (1 inclusive)
    2: (RequiresParser.java:45): 0,02% (1 inclusive)
  1: grammar.java._A_Lexical.<init>: 0,02% (1 inclusive)
    2: (_A_Lexical.java:520): 0,02% (1 inclusive)
  1: com.sun.tools.javac.util.SharedNameTable.<init>: 0,02% (1 inclusive)
    2: (SharedNameTable.java:84): 0,02% (1 inclusive)
    2: (SharedNameTable.java:90): 0% (0 inclusive)
  1: java.io.DataInputStream.readFully: 0,02% (1 inclusive)
    2: (DataInputStream.java:195): 0,02% (1 inclusive)
  1: java.net.URL.<init>: 0,02% (1 inclusive)
    2: (URL.java:505): 0,02% (1 inclusive)
    2: (URL.java:480): 0% (0 inclusive)
  1: com.sun.tools.javac.tree.JCTree$JCMethodDecl.accept: 0,02% (1 inclusive)
    2: (JCTree.java:669): 0,02% (1 inclusive)
  1: com.sun.tools.javac.jvm.ClassFile$NameAndType.<init>: 0,02% (1 inclusive)
    2: (ClassFile.java:160): 0,02% (1 inclusive)
  1: com.sun.tools.javac.jvm.Items$Item.<init>: 0,02% (1 inclusive)
    2: (Items.java:192): 0,02% (1 inclusive)
  1: com.sun.tools.javac.main.Main.compile: 0,02% (1 inclusive)
    2: (Main.java:363): 0,02% (1 inclusive)
  1: sun.nio.fs.NativeBuffers.allocNativeBuffer: 0,02% (1 inclusive)
    2: (NativeBuffers.java:49): 0,02% (1 inclusive)
  1: java.util.Vector.grow: 0,02% (1 inclusive)
    2: (Vector.java:262): 0,02% (1 inclusive)
  1: com.sun.tools.javac.parser.JavacParser.arguments: 0,02% (1 inclusive)
    2: (JavacParser.java:1206): 0,02% (1 inclusive)
    2: (JavacParser.java:1224): 0% (0 inclusive)
  1: compiler.PostExpansionTransformer.transform: 0,02% (1 inclusive)
    2: (CallbackTransformers.java:39): 0,02% (1 inclusive)
  1: driver.CompilationDriver.dumpAndOrLoadClasses: 0,02% (1 inclusive)
    2: (CompilationDriver.java:109): 0,02% (1 inclusive)
    2: (CompilationDriver.java:98): 0% (0 inclusive)
  1: java.util.regex.Pattern$Curly.match0: 0,02% (1 inclusive)
    2: (Pattern.java:4170): 0,02% (1 inclusive)
  1: sun.misc.FloatingDecimal.readJavaFormatString: 0,02% (1 inclusive)
    2: (FloatingDecimal.java:1063): 0,02% (1 inclusive)
  1: com.sun.tools.javac.code.Source.<clinit>: 0,02% (1 inclusive)
    2: (Source.java:93): 0,02% (1 inclusive)
  1: com.sun.tools.javac.jvm.Items.makeLocalItem: 0,02% (1 inclusive)
    2: (Items.java:124): 0,02% (1 inclusive)
  1: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.<init>: 0,02% (1 inclusive)
    2: (ZipFileIndex.java:496): 0,02% (1 inclusive)
  1: compiler.MacroCompiler.<init>: 0,02% (1 inclusive)
    2: (MacroCompiler.java:32): 0,02% (1 inclusive)
  1: com.sun.tools.javac.comp.Resolve$InapplicableMethodException.setMessage: 0,02% (1 inclusive)
    2: (Resolve.java:496): 0,02% (1 inclusive)
  1: sun.nio.ch.Util.newMappedByteBufferR: 0,02% (1 inclusive)
    2: (Util.java:441): 0,02% (1 inclusive)
  1: driver.DependencyResolver.resolve: 0,02% (1 inclusive)
    2: (DependencyResolver.java:61): 0,02% (1 inclusive)
  1: com.sun.tools.javac.jvm.Code.emitStackMapFrame: 0,02% (1 inclusive)
    2: (Code.java:1295): 0,02% (1 inclusive)
  1: sun.launcher.LauncherHelper.getMainMethod: 0,02% (1 inclusive)
    2: (LauncherHelper.java:501): 0,02% (1 inclusive)
  1: grammar.Expression.<init>: 0,02% (1 inclusive)
    2: (Expression.java:77): 0,02% (1 inclusive)
  1: java.nio.file.FileTreeWalker.<init>: 0,02% (1 inclusive)
    2: (FileTreeWalker.java:59): 0,02% (1 inclusive)
  1: com.sun.tools.javac.comp.Attr.checkId: 0,02% (1 inclusive)
    2: (Attr.java:2588): 0,02% (1 inclusive)
  1: java.lang.ref.Reference.<init>: 0,02% (1 inclusive)
    2: (Reference.java:233): 0,02% (1 inclusive)
  1: grammar.java._E_MacroDefinitions.initialize: 0,02% (1 inclusive)
    2: (_E_MacroDefinitions.java:289): 0,02% (1 inclusive)
  1: com.sun.tools.javac.jvm.Code.emitop1w: 0,02% (1 inclusive)
    2: (Code.java:966): 0,02% (1 inclusive)
  1: grammar.Grammar.<init>: 0,02% (1 inclusive)
    2: (Grammar.java:54): 0,02% (1 inclusive)
  1: java.util.ServiceLoader$LazyIterator.hasNext: 0,02% (1 inclusive)
    2: (ServiceLoader.java:340): 0,02% (1 inclusive)
  1: java.nio.channels.spi.AbstractInterruptibleChannel.begin: 0,02% (1 inclusive)
    2: (AbstractInterruptibleChannel.java:157): 0,02% (1 inclusive)
  1: java.util.regex.Pattern$BmpCharProperty.match: 0,02% (1 inclusive)
    2: (Pattern.java:3715): 0,02% (1 inclusive)
  1: java.nio.DirectByteBuffer.asLongBuffer: 0,02% (1 inclusive)
    2: (DirectByteBuffer.java:825): 0,02% (1 inclusive)
  1: com.sun.tools.javac.parser.ParserFactory.instance: 0,02% (1 inclusive)
    2: (ParserFactory.java:51): 0,02% (1 inclusive)
  1: com.sun.tools.javac.code.Symtab.instance: 0,02% (1 inclusive)
    2: (Symtab.java:61): 0,02% (1 inclusive)
  1: java.util.zip.ZipFile.access$1100: 0,02% (1 inclusive)
    2: (ZipFile.java:56): 0,02% (1 inclusive)
  1: com.sun.tools.javac.jvm.Gen.genClass: 0,02% (1 inclusive)
    2: (Gen.java:2227): 0,02% (1 inclusive)
  1: com.sun.tools.javac.file.ZipFileIndex.closeFile: 0,02% (1 inclusive)
    2: (ZipFileIndex.java:223): 0,02% (1 inclusive)
  1: files.Package.<init>: 0,02% (1 inclusive)
    2: (Package.java:29): 0,02% (1 inclusive)
  1: sun.nio.fs.NativeBuffer.<init>: 0,02% (1 inclusive)
    2: (NativeBuffer.java:59): 0,02% (1 inclusive)
  1: java.lang.ref.Finalizer.invokeFinalizeMethod: 0,02% (1 inclusive)
    2: (Finalizer.java:Unknown line): 0,02% (1 inclusive)
  1: java.util.regex.Pattern$CharPropertyNames$2.make: 0,02% (1 inclusive)
    2: (Pattern.java:5470): 0,02% (1 inclusive)
  1: java.util.regex.Pattern.rangeFor: 0,02% (1 inclusive)
    2: (Pattern.java:4007): 0,02% (1 inclusive)
  1: java.util.regex.Pattern$Curly.match: 0,02% (1 inclusive)
    2: (Pattern.java:4125): 0,02% (1 inclusive)
  1: com.sun.tools.javac.jvm.ClassWriter.writePool: 0,02% (1 inclusive)
    2: (ClassWriter.java:484): 0,02% (1 inclusive)
  1: java.lang.Object.hashCode: 0,02% (1 inclusive)
    2: (Object.java:Unknown line): 0,02% (1 inclusive)
  1: java.lang.Shutdown.<clinit>: 0,02% (1 inclusive)
    2: (Shutdown.java:61): 0,02% (1 inclusive)
  1: com.sun.tools.javac.parser.JavacParser.term2Rest: 0,02% (1 inclusive)
    2: (JavacParser.java:729): 0,02% (1 inclusive)
  1: java.util.Collections.unmodifiableSet: 0,02% (1 inclusive)
    2: (Collections.java:1112): 0,02% (1 inclusive)
  1: java.io.RandomAccessFile.close: 0,02% (1 inclusive)
    2: (RandomAccessFile.java:594): 0,02% (1 inclusive)
  1: sun.reflect.DelegatingMethodAccessorImpl.invoke: 0,02% (1 inclusive)
    2: (DelegatingMethodAccessorImpl.java:43): 0,02% (1 inclusive)
  1: com.sun.tools.javac.jvm.ClassFile.internalize: 0,02% (1 inclusive)
    2: (ClassFile.java:114): 0,02% (1 inclusive)
  1: com.sun.tools.javac.code.Types$TypeRelation.<init>: 0,02% (1 inclusive)
    2: (Types.java:3780): 0,02% (1 inclusive)
  1: com.sun.tools.javac.comp.Resolve.<init>: 0,02% (1 inclusive)
    2: (Resolve.java:111): 0,02% (1 inclusive)
  1: sun.reflect.NativeMethodAccessorImpl.invoke: 0,02% (1 inclusive)
    2: (NativeMethodAccessorImpl.java:57): 0,02% (1 inclusive)
  1: com.sun.tools.javac.jvm.Code.emitop: 0,02% (1 inclusive)
    2: (Code.java:364): 0,02% (1 inclusive)
  1: sun.misc.URLClassPath$FileLoader.findResource: 0,02% (1 inclusive)
    2: (URLClassPath.java:1024): 0,02% (1 inclusive)
  1: com.sun.tools.javac.comp.Resolve.findFun: 0,02% (1 inclusive)
    2: (Resolve.java:1027): 0,02% (1 inclusive)
  1: com.sun.tools.javac.code.Symtab.enterClass: 0,02% (1 inclusive)
    2: (Symtab.java:287): 0,02% (1 inclusive)
  1: com.sun.tools.javac.jvm.Items.<init>: 0,02% (1 inclusive)
    2: (Items.java:75): 0,02% (1 inclusive)
  1: com.sun.tools.javac.main.Main.processArgs: 0,02% (1 inclusive)
    2: (Main.java:254): 0,02% (1 inclusive)
  1: sun.misc.URLClassPath.getResources: 0,02% (1 inclusive)
    2: (URLClassPath.java:259): 0,02% (1 inclusive)
    2: (URLClassPath.java:294): 0% (0 inclusive)
  1: com.sun.tools.javac.util.Name.toString: 0,02% (1 inclusive)
    2: (Name.java:146): 0,02% (1 inclusive)
  1: java.util.zip.ZipFile.getEntryFlag: 0,02% (1 inclusive)
    2: (ZipFile.java:Unknown line): 0,02% (1 inclusive)
  1: com.sun.tools.javac.tree.TreeScanner.scan: 0,02% (1 inclusive)
    2: (TreeScanner.java:49): 0,02% (1 inclusive)
  1: sun.nio.fs.NativeBuffers.getNativeBuffer: 0,02% (1 inclusive)
    2: (NativeBuffers.java:82): 0,02% (1 inclusive)
  1: compiler.java.CollectingJavaFileManager.list: 0,02% (1 inclusive)
    2: (CollectingJavaFileManager.java:123): 0,02% (1 inclusive)
  1: sun.nio.fs.NativeBuffers.releaseNativeBuffer: 0,02% (1 inclusive)
    2: (NativeBuffers.java:92): 0,02% (1 inclusive)
  1: com.sun.tools.javac.jvm.ClassReader.initAttributeReaders: 0,02% (1 inclusive)
    2: (ClassReader.java:935): 0,02% (1 inclusive)
  1: compiler.macros.ArraySliceMacro.expand: 0,02% (1 inclusive)
    2: (ArraySliceMacro.java:21): 0,02% (1 inclusive)
  1: java.lang.String.split: 0,02% (1 inclusive)
    2: (String.java:2359): 0,02% (1 inclusive)
    2: (String.java:2403): 0% (0 inclusive)
  1: sun.nio.cs.UTF_8$Decoder.decodeLoop: 0,02% (1 inclusive)
    2: (UTF_8.java:356): 0,02% (1 inclusive)
  1: com.sun.tools.javac.util.ByteBuffer.appendBytes: 0,02% (1 inclusive)
    2: (ByteBuffer.java:80): 0,02% (1 inclusive)
    2: (ByteBuffer.java:88): 0% (0 inclusive)
  1: com.sun.tools.javac.code.Symtab.<init>: 0,02% (1 inclusive)
    2: (Symtab.java:342): 0,02% (1 inclusive)
  1: com.sun.tools.javac.parser.Scanner.hexFloatsWork: 0,02% (1 inclusive)
    2: (Scanner.java:147): 0,02% (1 inclusive)
  1: com.sun.tools.javac.code.Source.allowVarargs: 0,02% (1 inclusive)
    2: (Source.java:153): 0,02% (1 inclusive)
  1: java.lang.Thread.currentThread: 0,02% (1 inclusive)
    2: (Thread.java:Unknown line): 0,02% (1 inclusive)
  1: com.sun.tools.javac.util.ListBuffer.clear: 0,02% (1 inclusive)
    2: (ListBuffer.java:76): 0,02% (1 inclusive)

Method Times by Callee (times inclusive): 5200 ticks
  1: java.lang.Object.<init>: 43,75% (2275 inclusive)
    2: java.util.AbstractCollection.<init>: 9,96% (518 inclusive)
      3: java.util.AbstractList.<init>: 8,83% (459 inclusive)
        4: java.util.ArrayList.<init>: 8,81% (458 inclusive)
        4: java.util.Arrays$ArrayList.<init>: 0,02% (1 inclusive)
      3: com.sun.tools.javac.util.List.<init>: 1,04% (54 inclusive)
        4: com.sun.tools.javac.util.List.reverse: 0,79% (41 inclusive)
        4: com.sun.tools.javac.util.List.of: 0,12% (6 inclusive)
        4: com.sun.tools.javac.util.ListBuffer.append: 0,08% (4 inclusive)
        4: com.sun.tools.javac.util.List.prepend: 0,04% (2 inclusive)
        4: com.sun.tools.javac.util.ListBuffer.clear: 0,02% (1 inclusive)
      3: java.util.AbstractQueue.<init>: 0,06% (3 inclusive)
        4: com.sun.tools.javac.util.ListBuffer.<init>: 0,06% (3 inclusive)
      3: java.util.AbstractSet.<init>: 0,04% (2 inclusive)
        4: java.util.HashSet.<init>: 0,04% (2 inclusive)
    2: parser.ParseData.<init>: 8,13% (423 inclusive)
      3: parser.Matcher.parse: 8,13% (423 inclusive)
        4: parser.NestedMemo.get: 8,13% (423 inclusive)
    2: parser.ParseErrors.<init>: 4,77% (248 inclusive)
      3: parser.ParseData.<init>: 4,77% (248 inclusive)
        4: parser.Matcher.parse: 4,77% (248 inclusive)
    2: java.lang.String.<init>: 3,38% (176 inclusive)
      3: java.lang.String.substring: 2,27% (118 inclusive)
        4: source.SourceFileText.at: 1,15% (60 inclusive)
        4: source.SourceString.at: 0,69% (36 inclusive)
        4: java.lang.String.substring: 0,23% (12 inclusive)
        4: com.sun.tools.javac.file.BaseFileObject.removeExtension: 0,08% (4 inclusive)
        4: com.sun.tools.javac.file.RelativePath$RelativeFile.dirname: 0,02% (1 inclusive)
        4: java.net.URLClassLoader.defineClass: 0,02% (1 inclusive)
        4: sun.net.www.protocol.jar.Handler.parseURL: 0,02% (1 inclusive)
        4: java.net.URLStreamHandler.parseURL: 0,02% (1 inclusive)
        4: java.io.Win32FileSystem.normalize: 0,02% (1 inclusive)
        4: com.sun.tools.javac.file.RelativePath$RelativeDirectory.dirname: 0,02% (1 inclusive)
      3: java.lang.StringBuilder.toString: 0,46% (24 inclusive)
        4: com.sun.tools.javac.file.RelativePath$RelativeFile.<init>: 0,17% (9 inclusive)
        4: java.net.URLStreamHandler.parseURL: 0,06% (3 inclusive)
        4: grammar.ExpressionTreeCleaner.visit: 0,06% (3 inclusive)
        4: com.sun.tools.javac.file.RelativePath$RelativeDirectory.<init>: 0,04% (2 inclusive)
        4: util.StringUtils.escape: 0,04% (2 inclusive)
        4: com.sun.tools.javac.util.Options.isSet: 0,04% (2 inclusive)
        4: sun.net.www.protocol.jar.Handler.parseContextSpec: 0,02% (1 inclusive)
        4: source.SourceComposed.strFromMatches: 0,02% (1 inclusive)
        4: com.sun.tools.javac.util.JCDiagnostic$Factory.qualify: 0,02% (1 inclusive)
      3: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.readEntry: 0,31% (16 inclusive)
        4: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.buildIndex: 0,31% (16 inclusive)
      3: java.lang.StringBuffer.toString: 0,1% (5 inclusive)
        4: java.io.Win32FileSystem.normalize: 0,08% (4 inclusive)
        4: java.net.URLStreamHandler.toExternalForm: 0,02% (1 inclusive)
      3: java.lang.String.replace: 0,1% (5 inclusive)
        4: com.sun.tools.javac.file.ZipFileIndexArchive$ZipFileIndexFileObject.inferBinaryName: 0,08% (4 inclusive)
        4: sun.misc.URLClassPath$FileLoader.getResource: 0,02% (1 inclusive)
      3: java.lang.String.toLowerCase: 0,06% (3 inclusive)
        4: java.io.Win32FileSystem.hashCode: 0,06% (3 inclusive)
      3: java.lang.String.concat: 0,06% (3 inclusive)
        4: java.net.URLClassLoader$1.run: 0,06% (3 inclusive)
      3: com.sun.tools.javac.util.Convert.utf2string: 0,02% (1 inclusive)
        4: com.sun.tools.javac.util.Name.toString: 0,02% (1 inclusive)
      3: sun.net.www.ParseUtil.encodePath: 0,02% (1 inclusive)
        4: sun.misc.URLClassPath$FileLoader.getResource: 0,02% (1 inclusive)
    2: java.lang.Number.<init>: 2,81% (146 inclusive)
      3: java.lang.Integer.<init>: 2,81% (146 inclusive)
        4: java.lang.Integer.valueOf: 2,79% (145 inclusive)
        4: java.lang.Integer$IntegerCache.<clinit>: 0,02% (1 inclusive)
    2: java.util.AbstractList$Itr.<init>: 2,71% (141 inclusive)
      3: java.util.AbstractList$Itr.<init>: 2,71% (141 inclusive)
        4: java.util.AbstractList.iterator: 2,71% (141 inclusive)
    2: java.util.HashMap$Entry.<init>: 2,37% (123 inclusive)
      3: java.util.HashMap.addEntry: 2,37% (123 inclusive)
        4: java.util.HashMap.put: 2,37% (123 inclusive)
    2: java.util.ArrayList$Itr.<init>: 1,58% (82 inclusive)
      3: java.util.ArrayList$Itr.<init>: 1,58% (82 inclusive)
        4: java.util.ArrayList.iterator: 1,58% (82 inclusive)
    2: parser.Match.<init>: 1,54% (80 inclusive)
      3: parser.ParseData.succeed: 1,54% (80 inclusive)
        4: parser.Matcher.succeed: 1,54% (80 inclusive)
    2: java.util.Collections$UnmodifiableCollection.<init>: 1,33% (69 inclusive)
      3: java.util.Collections$UnmodifiableList.<init>: 1,33% (69 inclusive)
        4: java.util.Collections$UnmodifiableRandomAccessList.<init>: 1,33% (69 inclusive)
    2: trees.MatchIterator$NodeState.<init>: 1,1% (57 inclusive)
      3: trees.MatchIterator.forward: 1,1% (57 inclusive)
        4: trees.MatchIterator.next: 1,1% (57 inclusive)
    2: util.AbstractBiIterator.<init>: 0,79% (41 inclusive)
      3: util.ArrayIterator.<init>: 0,79% (41 inclusive)
        4: util.ArrayIterator.<init>: 0,79% (41 inclusive)
    2: com.sun.tools.javac.file.RelativePath.<init>: 0,38% (20 inclusive)
      3: com.sun.tools.javac.file.RelativePath$RelativeFile.<init>: 0,21% (11 inclusive)
        4: com.sun.tools.javac.file.RelativePath$RelativeFile.<init>: 0,21% (11 inclusive)
      3: com.sun.tools.javac.file.RelativePath$RelativeDirectory.<init>: 0,17% (9 inclusive)
        4: com.sun.tools.javac.file.RelativePath$RelativeDirectory.dirname: 0,08% (4 inclusive)
        4: com.sun.tools.javac.file.ZipFileIndex.getRelativeDirectory: 0,06% (3 inclusive)
        4: com.sun.tools.javac.file.RelativePath$RelativeFile.dirname: 0,04% (2 inclusive)
    2: java.lang.AbstractStringBuilder.<init>: 0,35% (18 inclusive)
      3: java.lang.StringBuilder.<init>: 0,31% (16 inclusive)
        4: com.sun.tools.javac.file.RelativePath$RelativeFile.<init>: 0,17% (9 inclusive)
        4: source.SourceComposed.strFromMatches: 0,06% (3 inclusive)
        4: util.StringUtils.escape: 0,02% (1 inclusive)
        4: com.sun.tools.javac.util.JCDiagnostic$Factory.qualify: 0,02% (1 inclusive)
        4: grammar.ExpressionTreeCleaner.visit: 0,02% (1 inclusive)
        4: java.net.URLStreamHandler.parseURL: 0,02% (1 inclusive)
      3: java.lang.StringBuffer.<init>: 0,04% (2 inclusive)
        4: java.net.URLStreamHandler.toExternalForm: 0,02% (1 inclusive)
        4: java.io.Win32FileSystem.normalize: 0,02% (1 inclusive)
    2: java.util.AbstractMap.<init>: 0,31% (16 inclusive)
      3: java.util.HashMap.<init>: 0,31% (16 inclusive)
        4: parser.NestedMemo.set: 0,27% (14 inclusive)
        4: java.util.HashSet.<init>: 0,02% (1 inclusive)
        4: java.util.HashMap.<init>: 0,02% (1 inclusive)
    2: com.sun.tools.javac.file.ZipFileIndex$Entry.<init>: 0,29% (15 inclusive)
      3: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.readEntry: 0,23% (12 inclusive)
        4: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.buildIndex: 0,23% (12 inclusive)
      3: com.sun.tools.javac.file.ZipFileIndex$DirectoryEntry.getEntry: 0,06% (3 inclusive)
        4: com.sun.tools.javac.file.ZipFileIndex$DirectoryEntry.access$100: 0,06% (3 inclusive)
    2: com.sun.tools.javac.code.Type.<init>: 0,29% (15 inclusive)
      3: com.sun.tools.javac.code.Type$MethodType.<init>: 0,15% (8 inclusive)
        4: com.sun.tools.javac.jvm.ClassReader.sigToType: 0,12% (6 inclusive)
        4: com.sun.tools.javac.code.Types$Subst.visitMethodType: 0,02% (1 inclusive)
        4: com.sun.tools.javac.code.Symtab.enterBinop: 0,02% (1 inclusive)
      3: com.sun.tools.javac.code.Type$ClassType.<init>: 0,08% (4 inclusive)
        4: com.sun.tools.javac.code.Symbol$ClassSymbol.<init>: 0,08% (4 inclusive)
      3: com.sun.tools.javac.code.Type$PackageType.<init>: 0,02% (1 inclusive)
        4: com.sun.tools.javac.code.Symbol$PackageSymbol.<init>: 0,02% (1 inclusive)
      3: com.sun.tools.javac.code.Type$WildcardType.<init>: 0,02% (1 inclusive)
        4: com.sun.tools.javac.jvm.ClassReader.sigToType: 0,02% (1 inclusive)
      3: com.sun.tools.javac.code.Type$ArrayType.<init>: 0,02% (1 inclusive)
        4: com.sun.tools.javac.comp.Attr.visitTypeArray: 0,02% (1 inclusive)
    2: com.sun.tools.javac.code.Scope$Entry.<init>: 0,19% (10 inclusive)
      3: com.sun.tools.javac.code.Scope.makeEntry: 0,15% (8 inclusive)
        4: com.sun.tools.javac.code.Scope.enter: 0,15% (8 inclusive)
      3: com.sun.tools.javac.code.Scope$ImportScope$ImportEntry.<init>: 0,04% (2 inclusive)
        4: com.sun.tools.javac.code.Scope$ImportScope.makeEntry: 0,04% (2 inclusive)
    2: com.sun.tools.javac.code.Symbol.<init>: 0,15% (8 inclusive)
      3: com.sun.tools.javac.code.Symbol$TypeSymbol.<init>: 0,1% (5 inclusive)
        4: com.sun.tools.javac.code.Symbol$ClassSymbol.<init>: 0,1% (5 inclusive)
      3: com.sun.tools.javac.code.Symbol$MethodSymbol.<init>: 0,04% (2 inclusive)
        4: com.sun.tools.javac.jvm.ClassReader.readMethod: 0,04% (2 inclusive)
      3: com.sun.tools.javac.code.Symbol$DelegatedSymbol.<init>: 0,02% (1 inclusive)
        4: com.sun.tools.javac.jvm.Pool$Method.<init>: 0,02% (1 inclusive)
    2: com.sun.tools.javac.util.Name.<init>: 0,15% (8 inclusive)
      3: com.sun.tools.javac.util.SharedNameTable$NameImpl.<init>: 0,15% (8 inclusive)
        4: com.sun.tools.javac.util.SharedNameTable.fromChars: 0,1% (5 inclusive)
        4: com.sun.tools.javac.util.SharedNameTable.fromUtf: 0,06% (3 inclusive)
    2: com.sun.tools.javac.code.Types$DefaultTypeVisitor.<init>: 0,08% (4 inclusive)
      3: com.sun.tools.javac.code.Types$SimpleVisitor.<init>: 0,08% (4 inclusive)
        4: com.sun.tools.javac.code.Types$UnaryVisitor.<init>: 0,06% (3 inclusive)
        4: com.sun.tools.javac.code.Types$TypeRelation.<init>: 0,02% (1 inclusive)
    2: util.PeekIterator.<init>: 0,08% (4 inclusive)
      3: trees.BoundedMatchIterator.<init>: 0,08% (4 inclusive)
        4: trees.MatchFinder.find: 0,08% (4 inclusive)
    2: com.sun.tools.javac.file.BaseFileObject.<init>: 0,06% (3 inclusive)
      3: com.sun.tools.javac.file.ZipFileIndexArchive$ZipFileIndexFileObject.<init>: 0,06% (3 inclusive)
        4: com.sun.tools.javac.file.ZipFileIndexArchive.getFileObject: 0,06% (3 inclusive)
    2: java.io.Writer.<init>: 0,06% (3 inclusive)
      3: java.io.StringWriter.<init>: 0,06% (3 inclusive)
        4: util.apache.CharSequenceTranslator.translate: 0,06% (3 inclusive)
    2: java.util.concurrent.ConcurrentHashMap$HashEntry.<init>: 0,06% (3 inclusive)
      3: java.util.concurrent.ConcurrentHashMap$Segment.put: 0,06% (3 inclusive)
        4: java.util.concurrent.ConcurrentHashMap.putIfAbsent: 0,06% (3 inclusive)
    2: source.SourceString.<init>: 0,06% (3 inclusive)
      3: source.SourceComposed.<init>: 0,04% (2 inclusive)
        4: compiler.util.MatchCreator.new_match: 0,04% (2 inclusive)
      3: compiler.util.Quoter$DynamicQuoteMethod.dynamicQuote: 0,02% (1 inclusive)
        4: compiler.util.Quoter.dynamicQuote: 0,02% (1 inclusive)
    2: java.io.File.<init>: 0,06% (3 inclusive)
      3: java.io.File.getParentFile: 0,02% (1 inclusive)
        4: sun.misc.Launcher$BootClassPathHolder$1.run: 0,02% (1 inclusive)
      3: com.sun.tools.javac.file.JavacFileManager.listDirectory: 0,02% (1 inclusive)
        4: com.sun.tools.javac.file.JavacFileManager.listContainer: 0,02% (1 inclusive)
      3: sun.misc.URLClassPath$FileLoader.getResource: 0,02% (1 inclusive)
        4: sun.misc.URLClassPath.getResource: 0,02% (1 inclusive)
    2: java.lang.reflect.AccessibleObject.<init>: 0,04% (2 inclusive)
      3: java.lang.reflect.Field.<init>: 0,04% (2 inclusive)
        4: java.lang.reflect.Field.copy: 0,04% (2 inclusive)
    2: com.sun.tools.javac.file.ZipFileIndex$DirectoryEntry.<init>: 0,04% (2 inclusive)
      3: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.readEntry: 0,04% (2 inclusive)
        4: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.buildIndex: 0,04% (2 inclusive)
    2: java.net.URLClassLoader$1.<init>: 0,04% (2 inclusive)
      3: java.net.URLClassLoader.findClass: 0,04% (2 inclusive)
        4: java.lang.ClassLoader.loadClass: 0,04% (2 inclusive)
    2: com.sun.tools.javac.util.ListBuffer$1.<init>: 0,04% (2 inclusive)
      3: com.sun.tools.javac.util.ListBuffer.iterator: 0,04% (2 inclusive)
        4: com.sun.tools.javac.code.DeferredLintHandler.flush: 0,04% (2 inclusive)
    2: java.lang.Throwable.<init>: 0,04% (2 inclusive)
      3: java.lang.Exception.<init>: 0,04% (2 inclusive)
        4: java.security.PrivilegedActionException.<init>: 0,02% (1 inclusive)
        4: java.lang.ReflectiveOperationException.<init>: 0,02% (1 inclusive)
    2: java.lang.ClassLoader.getClassLoadingLock: 0,04% (2 inclusive)
      3: java.lang.ClassLoader.loadClass: 0,04% (2 inclusive)
        4: java.lang.ClassLoader.loadClass: 0,02% (1 inclusive)
        4: sun.misc.Launcher$AppClassLoader.loadClass: 0,02% (1 inclusive)
    2: trees.MatchSpec.<init>: 0,04% (2 inclusive)
      3: trees.MatchSpec$RuleSpec.<init>: 0,02% (1 inclusive)
        4: trees.MatchSpec.rule: 0,02% (1 inclusive)
      3: trees.MatchSpec$ExprSpec.<init>: 0,02% (1 inclusive)
        4: trees.MatchSpec.expr: 0,02% (1 inclusive)
    2: java.net.URL.<init>: 0,02% (1 inclusive)
      3: java.net.URL.<init>: 0,02% (1 inclusive)
        4: sun.misc.URLClassPath$FileLoader.getResource: 0,02% (1 inclusive)
    2: java.lang.ref.Reference.<init>: 0,02% (1 inclusive)
      3: java.lang.ref.WeakReference.<init>: 0,02% (1 inclusive)
        4: java.util.WeakHashMap$Entry.<init>: 0,02% (1 inclusive)
    2: com.sun.tools.javac.jvm.Items$Item.<init>: 0,02% (1 inclusive)
      3: com.sun.tools.javac.jvm.Items$LocalItem.<init>: 0,02% (1 inclusive)
        4: com.sun.tools.javac.jvm.Items.makeLocalItem: 0,02% (1 inclusive)
    2: java.util.zip.ZipEntry.<init>: 0,02% (1 inclusive)
      3: java.util.jar.JarEntry.<init>: 0,02% (1 inclusive)
        4: java.util.jar.JarFile$JarFileEntry.<init>: 0,02% (1 inclusive)
    2: com.sun.tools.javac.code.Types$ImplementationCache$Entry.<init>: 0,02% (1 inclusive)
      3: com.sun.tools.javac.code.Types$ImplementationCache.get: 0,02% (1 inclusive)
        4: com.sun.tools.javac.code.Types.implementation: 0,02% (1 inclusive)
    2: java.io.InputStream.<init>: 0,02% (1 inclusive)
      3: java.util.zip.ZipFile$ZipFileInputStream.<init>: 0,02% (1 inclusive)
        4: java.util.zip.ZipFile.getInputStream: 0,02% (1 inclusive)
    2: com.sun.tools.javac.parser.Keywords.<init>: 0,02% (1 inclusive)
      3: com.sun.tools.javac.parser.Keywords.instance: 0,02% (1 inclusive)
        4: com.sun.tools.javac.parser.ParserFactory.<init>: 0,02% (1 inclusive)
    2: com.sun.tools.javac.comp.AttrContext.<init>: 0,02% (1 inclusive)
      3: com.sun.tools.javac.comp.AttrContext.dup: 0,02% (1 inclusive)
        4: com.sun.tools.javac.comp.Enter.classEnv: 0,02% (1 inclusive)
    2: java.io.FileDescriptor.<init>: 0,02% (1 inclusive)
      3: java.io.FileInputStream.<init>: 0,02% (1 inclusive)
        4: sun.misc.URLClassPath$FileLoader$1.getInputStream: 0,02% (1 inclusive)
    2: java.io.FileInputStream.<init>: 0,02% (1 inclusive)
      3: sun.misc.URLClassPath$FileLoader$1.getInputStream: 0,02% (1 inclusive)
        4: sun.misc.Resource.cachedInputStream: 0,02% (1 inclusive)
    2: com.sun.tools.javac.code.Scope$3$1.<init>: 0,02% (1 inclusive)
      3: com.sun.tools.javac.code.Scope$3.iterator: 0,02% (1 inclusive)
        4: com.sun.tools.javac.code.Scope$CompoundScope$2$1.nextIterator: 0,02% (1 inclusive)
    2: com.sun.tools.javac.jvm.ClassReader$AttributeReader.<init>: 0,02% (1 inclusive)
      3: com.sun.tools.javac.jvm.ClassReader$2.<init>: 0,02% (1 inclusive)
        4: com.sun.tools.javac.jvm.ClassReader.initAttributeReaders: 0,02% (1 inclusive)
    2: com.sun.tools.javac.jvm.ClassFile.<init>: 0,02% (1 inclusive)
      3: com.sun.tools.javac.jvm.ClassWriter.<init>: 0,02% (1 inclusive)
        4: com.sun.tools.javac.jvm.ClassWriter.instance: 0,02% (1 inclusive)
    2: com.sun.tools.javac.code.Scope.<init>: 0,02% (1 inclusive)
      3: com.sun.tools.javac.code.Scope.<init>: 0,02% (1 inclusive)
        4: com.sun.tools.javac.code.Scope.dup: 0,02% (1 inclusive)
    2: com.sun.tools.javac.tree.JCTree.<init>: 0,02% (1 inclusive)
      3: com.sun.tools.javac.tree.JCTree$JCExpression.<init>: 0,02% (1 inclusive)
        4: com.sun.tools.javac.tree.JCTree$JCFieldAccess.<init>: 0,02% (1 inclusive)
    2: com.sun.tools.javac.comp.Env.<init>: 0,02% (1 inclusive)
      3: com.sun.tools.javac.jvm.Gen.genClass: 0,02% (1 inclusive)
        4: com.sun.tools.javac.main.JavaCompiler.genCode: 0,02% (1 inclusive)
    2: com.sun.tools.javac.code.Symtab.<init>: 0,02% (1 inclusive)
      3: com.sun.tools.javac.code.Symtab.instance: 0,02% (1 inclusive)
        4: com.sun.tools.javac.jvm.ClassReader.<init>: 0,02% (1 inclusive)
    2: com.sun.tools.javac.main.JavacOption$Option.<init>: 0,02% (1 inclusive)
      3: com.sun.tools.javac.main.JavacOption$Option.<init>: 0,02% (1 inclusive)
        4: com.sun.tools.javac.main.RecognizedOptions$11.<init>: 0,02% (1 inclusive)
    2: com.sun.tools.javac.jvm.ClassFile$NameAndType.<init>: 0,02% (1 inclusive)
      3: com.sun.tools.javac.jvm.ClassWriter.nameType: 0,02% (1 inclusive)
        4: com.sun.tools.javac.jvm.ClassWriter.writePool: 0,02% (1 inclusive)
    2: com.sun.tools.javac.jvm.Items.<init>: 0,02% (1 inclusive)
      3: com.sun.tools.javac.jvm.Gen.initCode: 0,02% (1 inclusive)
        4: com.sun.tools.javac.jvm.Gen.genMethod: 0,02% (1 inclusive)
    2: grammar.Expression.<init>: 0,02% (1 inclusive)
      3: grammar.Expression$CharClass.<init>: 0,02% (1 inclusive)
        4: grammar.GrammarDSL.chars: 0,02% (1 inclusive)
    2: source.SourceStream.<init>: 0,02% (1 inclusive)
      3: parser.Matcher.<init>: 0,02% (1 inclusive)
        4: compiler.util.Quoter.primitiveQuote: 0,02% (1 inclusive)
    2: parser.Matcher.<init>: 0,02% (1 inclusive)
      3: compiler.util.Quoter$DynamicQuoteMethod.dynamicQuote: 0,02% (1 inclusive)
        4: compiler.util.Quoter.dynamicQuote: 0,02% (1 inclusive)
    2: sun.nio.fs.WindowsFileAttributes.<init>: 0,02% (1 inclusive)
      3: sun.nio.fs.WindowsFileAttributes.fromFindData: 0,02% (1 inclusive)
        4: sun.nio.fs.WindowsDirectoryStream$WindowsDirectoryIterator.readNextEntry: 0,02% (1 inclusive)
  1: parser.Matcher.parse: 21,19% (1102 inclusive)
    2: parser.NestedMemo.get: 8,15% (424 inclusive)
      3: parser.Matcher.visitChild: 0,02% (1 inclusive)
        4: parser.Matcher.visitChoice: 0,02% (1 inclusive)
  1: parser.ParseData.<init>: 21,17% (1101 inclusive)
    2: parser.Matcher.parse: 21,17% (1101 inclusive)
      3: parser.NestedMemo.get: 8,13% (423 inclusive)
  1: java.util.ArrayList.<init>: 17,12% (890 inclusive)
    2: parser.ParseErrors.<init>: 4,19% (218 inclusive)
      3: parser.ParseData.<init>: 4,19% (218 inclusive)
        4: parser.Matcher.parse: 4,19% (218 inclusive)
    2: parser.ParseData.<init>: 4,08% (212 inclusive)
      3: parser.Matcher.parse: 4,08% (212 inclusive)
    2: compiler.MatchTreeTransformer.transformChilds: 0,02% (1 inclusive)
      3: compiler.MacroExpander.transform: 0,02% (1 inclusive)
        4: compiler.MatchTreeTransformer.transformChilds: 0,02% (1 inclusive)
    2: parser.Match.getCaptures: 0,02% (1 inclusive)
      3: compiler.macros.ArraySliceMacro.expand: 0,02% (1 inclusive)
  1: java.util.AbstractCollection.<init>: 9,96% (518 inclusive)
    2: java.util.AbstractList.<init>: 8,83% (459 inclusive)
      3: java.util.ArrayList.<init>: 8,81% (458 inclusive)
      3: java.util.Arrays$ArrayList.<init>: 0,02% (1 inclusive)
    2: com.sun.tools.javac.util.List.<init>: 1,04% (54 inclusive)
      3: com.sun.tools.javac.util.List.reverse: 0,79% (41 inclusive)
      3: com.sun.tools.javac.util.List.of: 0,12% (6 inclusive)
      3: com.sun.tools.javac.util.ListBuffer.append: 0,08% (4 inclusive)
      3: com.sun.tools.javac.util.List.prepend: 0,04% (2 inclusive)
      3: com.sun.tools.javac.util.ListBuffer.clear: 0,02% (1 inclusive)
    2: java.util.AbstractQueue.<init>: 0,06% (3 inclusive)
      3: com.sun.tools.javac.util.ListBuffer.<init>: 0,06% (3 inclusive)
    2: java.util.AbstractSet.<init>: 0,04% (2 inclusive)
      3: java.util.HashSet.<init>: 0,04% (2 inclusive)
  1: sun.misc.Resource.getBytes: 9,67% (503 inclusive)
    2: java.net.URLClassLoader.defineClass: 0,15% (8 inclusive)
      3: java.net.URLClassLoader.access$100: 0,06% (3 inclusive)
  1: parser.ParseErrors.<init>: 8,96% (466 inclusive)
    2: parser.ParseData.<init>: 8,96% (466 inclusive)
      3: parser.Matcher.parse: 8,96% (466 inclusive)
  1: java.util.zip.ZipFile.access$1400: 8,85% (460 inclusive)
    2: java.util.zip.ZipFile$ZipFileInputStream.read: 8,85% (460 inclusive)
      3: sun.misc.Resource.getBytes: 8,71% (453 inclusive)
      3: java.util.zip.ZipFile$ZipFileInflaterInputStream.fill: 0,08% (4 inclusive)
      3: java.util.jar.Manifest$FastInputStream.fill: 0,04% (2 inclusive)
      3: java.io.DataInputStream.readFully: 0,02% (1 inclusive)
  1: java.util.zip.ZipFile.read: 8,85% (460 inclusive)
    2: java.util.zip.ZipFile.access$1400: 8,85% (460 inclusive)
      3: java.util.zip.ZipFile$ZipFileInputStream.read: 8,85% (460 inclusive)
        4: sun.misc.Resource.getBytes: 8,71% (453 inclusive)
        4: java.util.zip.ZipFile$ZipFileInflaterInputStream.fill: 0,08% (4 inclusive)
        4: java.util.jar.Manifest$FastInputStream.fill: 0,04% (2 inclusive)
        4: java.io.DataInputStream.readFully: 0,02% (1 inclusive)
  1: java.util.zip.ZipFile$ZipFileInputStream.read: 8,85% (460 inclusive)
    2: sun.misc.Resource.getBytes: 8,71% (453 inclusive)
    2: java.util.zip.ZipFile$ZipFileInflaterInputStream.fill: 0,08% (4 inclusive)
    2: java.util.jar.Manifest$FastInputStream.fill: 0,04% (2 inclusive)
    2: java.io.DataInputStream.readFully: 0,02% (1 inclusive)
  1: java.util.AbstractList.<init>: 8,83% (459 inclusive)
    2: java.util.ArrayList.<init>: 8,81% (458 inclusive)
    2: java.util.Arrays$ArrayList.<init>: 0,02% (1 inclusive)
  1: parser.NestedMemo.get: 8,29% (431 inclusive)
    2: parser.Matcher.visitChild: 0,15% (8 inclusive)
      3: parser.Matcher.visitChoice: 0,02% (1 inclusive)
  1: java.io.WinNTFileSystem.getBooleanAttributes: 6,25% (325 inclusive)
    2: java.io.File.exists: 6,06% (315 inclusive)
      3: sun.misc.URLClassPath$FileLoader.getResource: 5,62% (292 inclusive)
        4: sun.misc.URLClassPath.getResource: 5,6% (291 inclusive)
        4: sun.misc.URLClassPath$FileLoader.findResource: 0,02% (1 inclusive)
      3: sun.misc.FileURLMapper.exists: 0,27% (14 inclusive)
        4: sun.misc.URLClassPath$JarLoader.getJarFile: 0,27% (14 inclusive)
      3: driver.SourceRepository.hint: 0,1% (5 inclusive)
        4: driver.DependencyResolver.run: 0,1% (5 inclusive)
      3: javax.tools.ToolProvider.findSystemToolClass: 0,06% (3 inclusive)
        4: javax.tools.ToolProvider.getSystemToolClass: 0,06% (3 inclusive)
      3: util.FileUtils.create: 0,02% (1 inclusive)
        4: compiler.java.CompiledClass.dump: 0,02% (1 inclusive)
    2: java.io.File.isDirectory: 0,15% (8 inclusive)
      3: com.sun.tools.javac.file.JavacFileManager.listDirectory: 0,13% (7 inclusive)
        4: com.sun.tools.javac.file.JavacFileManager.listContainer: 0,13% (7 inclusive)
      3: com.sun.tools.javac.file.FSInfo.isDirectory: 0,02% (1 inclusive)
        4: com.sun.tools.javac.file.JavacFileManager.listContainer: 0,02% (1 inclusive)
    2: java.io.File.isFile: 0,04% (2 inclusive)
      3: com.sun.tools.javac.file.FSInfo.isFile: 0,04% (2 inclusive)
        4: com.sun.tools.javac.file.Paths$Path.addFile: 0,04% (2 inclusive)
  1: java.io.File.exists: 6,06% (315 inclusive)
    2: sun.misc.URLClassPath$FileLoader.getResource: 5,62% (292 inclusive)
      3: sun.misc.URLClassPath.getResource: 5,6% (291 inclusive)
      3: sun.misc.URLClassPath$FileLoader.findResource: 0,02% (1 inclusive)
    2: sun.misc.FileURLMapper.exists: 0,27% (14 inclusive)
      3: sun.misc.URLClassPath$JarLoader.getJarFile: 0,27% (14 inclusive)
    2: driver.SourceRepository.hint: 0,1% (5 inclusive)
      3: driver.DependencyResolver.run: 0,1% (5 inclusive)
    2: javax.tools.ToolProvider.findSystemToolClass: 0,06% (3 inclusive)
      3: javax.tools.ToolProvider.getSystemToolClass: 0,06% (3 inclusive)
    2: util.FileUtils.create: 0,02% (1 inclusive)
      3: compiler.java.CompiledClass.dump: 0,02% (1 inclusive)
  1: sun.misc.URLClassPath.getResource: 5,92% (308 inclusive)
    2: java.net.URLClassLoader$1.run: 0,19% (10 inclusive)
      3: java.net.URLClassLoader$1.run: 0,02% (1 inclusive)
  1: sun.misc.URLClassPath$FileLoader.getResource: 5,81% (302 inclusive)
    2: sun.misc.URLClassPath.getResource: 5,73% (298 inclusive)
      3: java.net.URLClassLoader$1.run: 0,1% (5 inclusive)
    2: sun.misc.URLClassPath$FileLoader.findResource: 0,02% (1 inclusive)
  1: java.io.FileInputStream.<init>: 5,46% (284 inclusive)
    2: sun.misc.URLClassPath$FileLoader$1.getInputStream: 4,4% (229 inclusive)
      3: sun.misc.Resource.cachedInputStream: 4,38% (228 inclusive)
    2: com.sun.tools.javac.file.RegularFileObject.openInputStream: 0,79% (41 inclusive)
      3: com.sun.tools.javac.jvm.ClassReader.fillIn: 0,79% (41 inclusive)
    2: source.SourceFileText.<init>: 0,23% (12 inclusive)
      3: source.SourceFileText.<init>: 0,23% (12 inclusive)
    2: java.io.FileReader.<init>: 0,04% (2 inclusive)
      3: sun.misc.MetaIndex.registerDirectory: 0,04% (2 inclusive)
  1: java.io.FileInputStream.open: 5,42% (282 inclusive)
    2: java.io.FileInputStream.<init>: 5,42% (282 inclusive)
      3: sun.misc.URLClassPath$FileLoader$1.getInputStream: 4,37% (227 inclusive)
        4: sun.misc.Resource.cachedInputStream: 4,37% (227 inclusive)
      3: com.sun.tools.javac.file.RegularFileObject.openInputStream: 0,79% (41 inclusive)
        4: com.sun.tools.javac.jvm.ClassReader.fillIn: 0,79% (41 inclusive)
      3: source.SourceFileText.<init>: 0,23% (12 inclusive)
        4: source.SourceFileText.<init>: 0,23% (12 inclusive)
      3: java.io.FileReader.<init>: 0,04% (2 inclusive)
        4: sun.misc.MetaIndex.registerDirectory: 0,04% (2 inclusive)
  1: sun.misc.Resource.cachedInputStream: 4,46% (232 inclusive)
  1: sun.misc.URLClassPath$FileLoader$1.getInputStream: 4,4% (229 inclusive)
    2: sun.misc.Resource.cachedInputStream: 4,38% (228 inclusive)
  1: java.lang.String.<init>: 4,33% (225 inclusive)
    2: java.lang.String.substring: 2,27% (118 inclusive)
      3: source.SourceFileText.at: 1,15% (60 inclusive)
      3: source.SourceString.at: 0,69% (36 inclusive)
      3: java.lang.String.substring: 0,23% (12 inclusive)
      3: com.sun.tools.javac.file.BaseFileObject.removeExtension: 0,08% (4 inclusive)
      3: com.sun.tools.javac.file.RelativePath$RelativeFile.dirname: 0,02% (1 inclusive)
      3: java.net.URLClassLoader.defineClass: 0,02% (1 inclusive)
      3: sun.net.www.protocol.jar.Handler.parseURL: 0,02% (1 inclusive)
      3: java.net.URLStreamHandler.parseURL: 0,02% (1 inclusive)
      3: java.io.Win32FileSystem.normalize: 0,02% (1 inclusive)
      3: com.sun.tools.javac.file.RelativePath$RelativeDirectory.dirname: 0,02% (1 inclusive)
    2: java.lang.StringBuilder.toString: 1,02% (53 inclusive)
      3: com.sun.tools.javac.file.RelativePath$RelativeFile.<init>: 0,46% (24 inclusive)
      3: java.net.URLStreamHandler.parseURL: 0,1% (5 inclusive)
      3: grammar.ExpressionTreeCleaner.visit: 0,1% (5 inclusive)
      3: com.sun.tools.javac.file.RegularFileObject.inferBinaryName: 0,08% (4 inclusive)
      3: com.sun.tools.javac.file.RelativePath$RelativeDirectory.<init>: 0,04% (2 inclusive)
      3: util.StringUtils.escape: 0,04% (2 inclusive)
      3: com.sun.tools.javac.util.Options.isSet: 0,04% (2 inclusive)
      3: sun.net.www.protocol.jar.Handler.parseContextSpec: 0,04% (2 inclusive)
      3: source.SourceComposed.strFromMatches: 0,04% (2 inclusive)
      3: com.sun.tools.javac.util.JCDiagnostic$Factory.qualify: 0,04% (2 inclusive)
      3: com.sun.tools.javac.code.Symtab.initType: 0,02% (1 inclusive)
      3: files.RelativeSourcePath.fileName: 0,02% (1 inclusive)
      3: java.io.ObjectStreamField.getClassSignature: 0,02% (1 inclusive)
    2: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.readEntry: 0,56% (29 inclusive)
      3: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.buildIndex: 0,31% (16 inclusive)
    2: java.lang.StringBuffer.toString: 0,15% (8 inclusive)
      3: java.io.Win32FileSystem.normalize: 0,08% (4 inclusive)
      3: java.net.URLStreamHandler.toExternalForm: 0,06% (3 inclusive)
      3: java.io.StringWriter.toString: 0,02% (1 inclusive)
    2: java.lang.String.replace: 0,1% (5 inclusive)
      3: com.sun.tools.javac.file.ZipFileIndexArchive$ZipFileIndexFileObject.inferBinaryName: 0,08% (4 inclusive)
      3: sun.misc.URLClassPath$FileLoader.getResource: 0,02% (1 inclusive)
    2: java.lang.String.toLowerCase: 0,06% (3 inclusive)
      3: java.io.Win32FileSystem.hashCode: 0,06% (3 inclusive)
    2: java.lang.String.concat: 0,06% (3 inclusive)
      3: java.net.URLClassLoader$1.run: 0,06% (3 inclusive)
    2: sun.launcher.LauncherHelper.makePlatformString: 0,04% (2 inclusive)
    2: com.sun.tools.javac.util.Convert.utf2string: 0,02% (1 inclusive)
      3: com.sun.tools.javac.util.Name.toString: 0,02% (1 inclusive)
    2: java.util.jar.Attributes.read: 0,02% (1 inclusive)
      3: java.util.jar.Manifest.read: 0,02% (1 inclusive)
        4: java.util.jar.Manifest.<init>: 0,02% (1 inclusive)
    2: sun.net.www.ParseUtil.encodePath: 0,02% (1 inclusive)
      3: sun.misc.URLClassPath$FileLoader.getResource: 0,02% (1 inclusive)
    2: java.io.Win32FileSystem.resolve: 0,02% (1 inclusive)
      3: java.io.File.<init>: 0,02% (1 inclusive)
  1: java.lang.ClassLoader.loadClass: 4,19% (218 inclusive)
    2: sun.misc.Launcher$AppClassLoader.loadClass: 0,06% (3 inclusive)
  1: util.apache.CharSequenceTranslator.translate: 4,1% (213 inclusive)
    2: source.SourceString.<init>: 3,87% (201 inclusive)
    2: source.SourceFileText.<init>: 0,13% (7 inclusive)
  1: java.lang.ClassLoader.findBootstrapClass: 4,04% (210 inclusive)
    2: java.lang.ClassLoader.findBootstrapClassOrNull: 4,04% (210 inclusive)
      3: java.lang.ClassLoader.loadClass: 4,04% (210 inclusive)
        4: java.lang.ClassLoader.loadClass: 4,04% (210 inclusive)
  1: java.lang.ClassLoader.findBootstrapClassOrNull: 4,04% (210 inclusive)
    2: java.lang.ClassLoader.loadClass: 4,04% (210 inclusive)
      3: java.lang.ClassLoader.loadClass: 4,04% (210 inclusive)
  1: java.lang.Character.toChars: 4% (208 inclusive)
    2: util.apache.CharSequenceTranslator.translate: 4% (208 inclusive)
      3: util.apache.CharSequenceTranslator.translate: 4% (208 inclusive)
        4: source.SourceString.<init>: 3,87% (201 inclusive)
        4: source.SourceFileText.<init>: 0,13% (7 inclusive)
  1: source.SourceString.<init>: 3,92% (204 inclusive)
    2: source.SourceComposed.<init>: 0,04% (2 inclusive)
      3: compiler.util.MatchCreator.new_match: 0,04% (2 inclusive)
    2: compiler.util.Quoter$DynamicQuoteMethod.dynamicQuote: 0,02% (1 inclusive)
      3: compiler.util.Quoter.dynamicQuote: 0,02% (1 inclusive)
  1: java.lang.Integer.<init>: 2,81% (146 inclusive)
    2: java.lang.Integer.valueOf: 2,79% (145 inclusive)
    2: java.lang.Integer$IntegerCache.<clinit>: 0,02% (1 inclusive)
  1: java.lang.Number.<init>: 2,81% (146 inclusive)
    2: java.lang.Integer.<init>: 2,81% (146 inclusive)
      3: java.lang.Integer.valueOf: 2,79% (145 inclusive)
      3: java.lang.Integer$IntegerCache.<clinit>: 0,02% (1 inclusive)
  1: java.lang.Integer.valueOf: 2,79% (145 inclusive)
  1: java.util.AbstractList.iterator: 2,73% (142 inclusive)
    2: java.util.AbstractCollection.addAll: 0,02% (1 inclusive)
      3: java.util.HashSet.<init>: 0,02% (1 inclusive)
        4: sun.nio.fs.WindowsFileSystem.<clinit>: 0,02% (1 inclusive)
  1: java.util.AbstractList$Itr.<init>: 2,71% (141 inclusive)
    2: java.util.AbstractList.iterator: 2,71% (141 inclusive)
  1: java.util.HashMap.put: 2,44% (127 inclusive)
    2: parser.NestedMemo.set: 0,06% (3 inclusive)
    2: com.sun.tools.javac.util.Context.put: 0,02% (1 inclusive)
      3: com.sun.tools.javac.util.Context.put: 0,02% (1 inclusive)
  1: java.util.HashMap.addEntry: 2,42% (126 inclusive)
    2: java.util.HashMap.put: 2,42% (126 inclusive)
      3: parser.NestedMemo.set: 0,06% (3 inclusive)
  1: java.util.HashMap$Entry.<init>: 2,37% (123 inclusive)
    2: java.util.HashMap.addEntry: 2,37% (123 inclusive)
      3: java.util.HashMap.put: 2,37% (123 inclusive)
  1: java.lang.String.substring: 2,27% (118 inclusive)
    2: source.SourceFileText.at: 1,15% (60 inclusive)
    2: source.SourceString.at: 0,69% (36 inclusive)
    2: com.sun.tools.javac.file.BaseFileObject.removeExtension: 0,08% (4 inclusive)
    2: com.sun.tools.javac.file.RelativePath$RelativeFile.dirname: 0,02% (1 inclusive)
    2: java.net.URLClassLoader.defineClass: 0,02% (1 inclusive)
    2: sun.net.www.protocol.jar.Handler.parseURL: 0,02% (1 inclusive)
    2: java.net.URLStreamHandler.parseURL: 0,02% (1 inclusive)
    2: java.io.Win32FileSystem.normalize: 0,02% (1 inclusive)
    2: com.sun.tools.javac.file.RelativePath$RelativeDirectory.dirname: 0,02% (1 inclusive)
  1: java.util.zip.ZipFile.getEntry: 1,83% (95 inclusive)
    2: java.util.jar.JarFile.getEntry: 1,83% (95 inclusive)
      3: java.util.jar.JarFile.getJarEntry: 1,77% (92 inclusive)
  1: java.util.jar.JarFile.getEntry: 1,83% (95 inclusive)
    2: java.util.jar.JarFile.getJarEntry: 1,77% (92 inclusive)
  1: java.util.jar.JarFile.getJarEntry: 1,77% (92 inclusive)
  1: java.util.ArrayList.iterator: 1,62% (84 inclusive)
    2: driver.EntryPoint.getPaths: 0,04% (2 inclusive)
      3: driver.EntryPoint.run: 0,04% (2 inclusive)
        4: driver.EntryPoint.main: 0,04% (2 inclusive)
  1: java.util.ArrayList$Itr.<init>: 1,58% (82 inclusive)
    2: java.util.ArrayList.iterator: 1,58% (82 inclusive)
  1: java.util.zip.ZipFile.<init>: 1,56% (81 inclusive)
    2: java.util.jar.JarFile.<init>: 1,56% (81 inclusive)
      3: java.util.jar.JarFile.<init>: 0,38% (20 inclusive)
        4: sun.misc.URLClassPath$JarLoader.getJarFile: 0,08% (4 inclusive)
  1: java.io.RandomAccessFile.read: 1,56% (81 inclusive)
    2: java.io.RandomAccessFile.readFully: 1,56% (81 inclusive)
      3: java.io.RandomAccessFile.readFully: 1,21% (63 inclusive)
      3: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.findCENRecord: 0,23% (12 inclusive)
      3: com.sun.tools.javac.file.ZipFileIndex.readBytes: 0,12% (6 inclusive)
  1: java.io.RandomAccessFile.readFully: 1,56% (81 inclusive)
    2: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.findCENRecord: 0,23% (12 inclusive)
    2: com.sun.tools.javac.file.ZipFileIndex.readBytes: 0,12% (6 inclusive)
  1: java.util.jar.JarFile.<init>: 1,56% (81 inclusive)
    2: sun.misc.URLClassPath$JarLoader.getJarFile: 0,08% (4 inclusive)
  1: java.io.RandomAccessFile.readBytes: 1,56% (81 inclusive)
    2: java.io.RandomAccessFile.read: 1,56% (81 inclusive)
      3: java.io.RandomAccessFile.readFully: 1,56% (81 inclusive)
        4: java.io.RandomAccessFile.readFully: 1,21% (63 inclusive)
        4: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.findCENRecord: 0,23% (12 inclusive)
        4: com.sun.tools.javac.file.ZipFileIndex.readBytes: 0,12% (6 inclusive)
  1: parser.ParseData.succeed: 1,54% (80 inclusive)
    2: parser.Matcher.succeed: 1,54% (80 inclusive)
  1: parser.Match.<init>: 1,54% (80 inclusive)
    2: parser.ParseData.succeed: 1,54% (80 inclusive)
      3: parser.Matcher.succeed: 1,54% (80 inclusive)
  1: parser.Matcher.succeed: 1,54% (80 inclusive)
  1: java.util.Collections$UnmodifiableRandomAccessList.<init>: 1,33% (69 inclusive)
  1: java.util.Collections$UnmodifiableList.<init>: 1,33% (69 inclusive)
    2: java.util.Collections$UnmodifiableRandomAccessList.<init>: 1,33% (69 inclusive)
  1: java.util.Collections$UnmodifiableCollection.<init>: 1,33% (69 inclusive)
    2: java.util.Collections$UnmodifiableList.<init>: 1,33% (69 inclusive)
      3: java.util.Collections$UnmodifiableRandomAccessList.<init>: 1,33% (69 inclusive)
  1: java.util.zip.ZipFile.open: 1,17% (61 inclusive)
    2: java.util.zip.ZipFile.<init>: 1,17% (61 inclusive)
      3: java.util.zip.ZipFile.<init>: 1,17% (61 inclusive)
        4: java.util.jar.JarFile.<init>: 1,17% (61 inclusive)
  1: source.SourceFileText.at: 1,15% (60 inclusive)
  1: trees.MatchIterator$NodeState.<init>: 1,1% (57 inclusive)
    2: trees.MatchIterator.forward: 1,1% (57 inclusive)
      3: trees.MatchIterator.next: 1,1% (57 inclusive)
  1: trees.MatchIterator.next: 1,1% (57 inclusive)
  1: trees.MatchIterator.forward: 1,1% (57 inclusive)
    2: trees.MatchIterator.next: 1,1% (57 inclusive)
  1: source.SourceFileText.<init>: 1,06% (55 inclusive)
    2: driver.SourceFile.<init>: 0,29% (15 inclusive)
  1: com.sun.tools.javac.file.RelativePath$RelativeFile.<init>: 1,04% (54 inclusive)
    2: com.sun.tools.javac.file.ZipFileIndex$Entry.getName: 0,17% (9 inclusive)
    2: com.sun.tools.javac.file.ZipFileIndexArchive.getFileObject: 0,02% (1 inclusive)
  1: com.sun.tools.javac.util.List.<init>: 1,04% (54 inclusive)
    2: com.sun.tools.javac.util.List.reverse: 0,79% (41 inclusive)
    2: com.sun.tools.javac.util.List.of: 0,12% (6 inclusive)
    2: com.sun.tools.javac.util.ListBuffer.append: 0,08% (4 inclusive)
    2: com.sun.tools.javac.util.List.prepend: 0,04% (2 inclusive)
    2: com.sun.tools.javac.util.ListBuffer.clear: 0,02% (1 inclusive)
  1: java.lang.StringBuilder.toString: 1,02% (53 inclusive)
    2: com.sun.tools.javac.file.RelativePath$RelativeFile.<init>: 0,46% (24 inclusive)
    2: java.net.URLStreamHandler.parseURL: 0,1% (5 inclusive)
    2: grammar.ExpressionTreeCleaner.visit: 0,1% (5 inclusive)
    2: com.sun.tools.javac.file.RegularFileObject.inferBinaryName: 0,08% (4 inclusive)
    2: com.sun.tools.javac.file.RelativePath$RelativeDirectory.<init>: 0,04% (2 inclusive)
    2: util.StringUtils.escape: 0,04% (2 inclusive)
    2: com.sun.tools.javac.util.Options.isSet: 0,04% (2 inclusive)
    2: sun.net.www.protocol.jar.Handler.parseContextSpec: 0,04% (2 inclusive)
    2: source.SourceComposed.strFromMatches: 0,04% (2 inclusive)
    2: com.sun.tools.javac.util.JCDiagnostic$Factory.qualify: 0,04% (2 inclusive)
    2: com.sun.tools.javac.code.Symtab.initType: 0,02% (1 inclusive)
    2: files.RelativeSourcePath.fileName: 0,02% (1 inclusive)
    2: java.io.ObjectStreamField.getClassSignature: 0,02% (1 inclusive)
  1: java.util.Arrays.copyOf: 0,88% (46 inclusive)
    2: java.lang.AbstractStringBuilder.expandCapacity: 0,52% (27 inclusive)
      3: java.lang.AbstractStringBuilder.ensureCapacityInternal: 0,52% (27 inclusive)
        4: java.lang.AbstractStringBuilder.append: 0,52% (27 inclusive)
    2: java.util.ArrayList.grow: 0,23% (12 inclusive)
      3: java.util.ArrayList.ensureCapacityInternal: 0,23% (12 inclusive)
    2: sun.misc.Resource.getBytes: 0,06% (3 inclusive)
      3: java.net.URLClassLoader.defineClass: 0,06% (3 inclusive)
        4: java.net.URLClassLoader.access$100: 0,06% (3 inclusive)
    2: java.util.ArrayList.toArray: 0,02% (1 inclusive)
      3: java.util.Collections$UnmodifiableCollection.toArray: 0,02% (1 inclusive)
    2: java.util.zip.ZipCoder.getBytes: 0,02% (1 inclusive)
      3: java.util.zip.ZipFile.getEntry: 0,02% (1 inclusive)
        4: java.util.jar.JarFile.getEntry: 0,02% (1 inclusive)
    2: java.lang.String.<init>: 0,02% (1 inclusive)
      3: java.io.Win32FileSystem.resolve: 0,02% (1 inclusive)
        4: java.io.File.<init>: 0,02% (1 inclusive)
    2: java.util.Vector.grow: 0,02% (1 inclusive)
      3: java.util.Vector.ensureCapacityHelper: 0,02% (1 inclusive)
  1: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.readEntry: 0,83% (43 inclusive)
    2: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.buildIndex: 0,58% (30 inclusive)
  1: sun.misc.URLClassPath$FileLoader$1.getContentLength: 0,81% (42 inclusive)
    2: sun.misc.Resource.getBytes: 0,81% (42 inclusive)
  1: java.io.File.length: 0,81% (42 inclusive)
    2: sun.misc.URLClassPath$FileLoader$1.getContentLength: 0,81% (42 inclusive)
      3: sun.misc.Resource.getBytes: 0,81% (42 inclusive)
  1: java.io.WinNTFileSystem.getLength: 0,81% (42 inclusive)
    2: java.io.File.length: 0,81% (42 inclusive)
      3: sun.misc.URLClassPath$FileLoader$1.getContentLength: 0,81% (42 inclusive)
        4: sun.misc.Resource.getBytes: 0,81% (42 inclusive)
  1: util.ArrayIterator.<init>: 0,79% (41 inclusive)
  1: com.sun.tools.javac.jvm.ClassReader.fillIn: 0,79% (41 inclusive)
  1: util.AbstractBiIterator.<init>: 0,79% (41 inclusive)
    2: util.ArrayIterator.<init>: 0,79% (41 inclusive)
      3: util.ArrayIterator.<init>: 0,79% (41 inclusive)
  1: com.sun.tools.javac.util.List.reverse: 0,79% (41 inclusive)
  1: com.sun.tools.javac.file.RegularFileObject.openInputStream: 0,79% (41 inclusive)
    2: com.sun.tools.javac.jvm.ClassReader.fillIn: 0,79% (41 inclusive)
  1: java.lang.AbstractStringBuilder.<init>: 0,73% (38 inclusive)
    2: java.lang.StringBuilder.<init>: 0,6% (31 inclusive)
      3: com.sun.tools.javac.file.RelativePath$RelativeFile.<init>: 0,37% (19 inclusive)
        4: com.sun.tools.javac.file.ZipFileIndex$Entry.getName: 0,17% (9 inclusive)
        4: com.sun.tools.javac.file.ZipFileIndexArchive.getFileObject: 0,02% (1 inclusive)
      3: source.SourceComposed.strFromMatches: 0,06% (3 inclusive)
      3: java.net.URLStreamHandler.parseURL: 0,06% (3 inclusive)
        4: sun.net.www.protocol.file.Handler.parseURL: 0,04% (2 inclusive)
      3: com.sun.tools.javac.util.JCDiagnostic$Factory.qualify: 0,04% (2 inclusive)
        4: com.sun.tools.javac.util.JCDiagnostic$Factory.create: 0,02% (1 inclusive)
      3: util.StringUtils.escape: 0,02% (1 inclusive)
      3: sun.net.www.protocol.jar.Handler.parseContextSpec: 0,02% (1 inclusive)
        4: sun.net.www.protocol.jar.Handler.parseURL: 0,02% (1 inclusive)
      3: grammar.ExpressionTreeCleaner.visit: 0,02% (1 inclusive)
      3: com.sun.tools.javac.file.RelativePath$RelativeDirectory.<init>: 0,02% (1 inclusive)
        4: com.sun.tools.javac.file.ZipFileIndex.getRelativeDirectory: 0,02% (1 inclusive)
    2: java.lang.StringBuffer.<init>: 0,13% (7 inclusive)
      3: java.io.Win32FileSystem.normalize: 0,06% (3 inclusive)
        4: java.io.Win32FileSystem.normalize: 0,04% (2 inclusive)
      3: java.io.StringWriter.<init>: 0,04% (2 inclusive)
        4: util.apache.CharSequenceTranslator.translate: 0,04% (2 inclusive)
      3: java.net.URLStreamHandler.toExternalForm: 0,04% (2 inclusive)
        4: java.net.URL.toExternalForm: 0,02% (1 inclusive)
  1: com.sun.tools.javac.file.JavacFileManager.listDirectory: 0,71% (37 inclusive)
    2: com.sun.tools.javac.file.JavacFileManager.listContainer: 0,17% (9 inclusive)
      3: com.sun.tools.javac.file.JavacFileManager.list: 0,02% (1 inclusive)
        4: compiler.java.CollectingJavaFileManager.list: 0,02% (1 inclusive)
  1: source.SourceString.at: 0,69% (36 inclusive)
  1: java.io.FileInputStream.getChannel: 0,63% (33 inclusive)
    2: source.SourceFileText.<init>: 0,63% (33 inclusive)
      3: source.SourceFileText.<init>: 0,37% (19 inclusive)
        4: driver.SourceFile.<init>: 0,27% (14 inclusive)
  1: java.net.URLClassLoader.defineClass: 0,62% (32 inclusive)
    2: java.net.URLClassLoader.access$100: 0,1% (5 inclusive)
      3: java.net.URLClassLoader$1.run: 0,04% (2 inclusive)
        4: java.net.URLClassLoader$1.run: 0,02% (1 inclusive)
  1: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.buildIndex: 0,62% (32 inclusive)
    2: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.access$000: 0,04% (2 inclusive)
      3: com.sun.tools.javac.file.ZipFileIndex.checkIndex: 0,02% (1 inclusive)
        4: com.sun.tools.javac.file.ZipFileIndex.<init>: 0,02% (1 inclusive)
  1: java.util.Arrays.copyOfRange: 0,62% (32 inclusive)
    2: java.lang.String.<init>: 0,62% (32 inclusive)
      3: java.lang.StringBuilder.toString: 0,56% (29 inclusive)
        4: com.sun.tools.javac.file.RelativePath$RelativeFile.<init>: 0,29% (15 inclusive)
        4: com.sun.tools.javac.file.RegularFileObject.inferBinaryName: 0,08% (4 inclusive)
        4: java.net.URLStreamHandler.parseURL: 0,04% (2 inclusive)
        4: grammar.ExpressionTreeCleaner.visit: 0,04% (2 inclusive)
        4: com.sun.tools.javac.code.Symtab.initType: 0,02% (1 inclusive)
        4: files.RelativeSourcePath.fileName: 0,02% (1 inclusive)
        4: source.SourceComposed.strFromMatches: 0,02% (1 inclusive)
        4: java.io.ObjectStreamField.getClassSignature: 0,02% (1 inclusive)
        4: com.sun.tools.javac.util.JCDiagnostic$Factory.qualify: 0,02% (1 inclusive)
        4: sun.net.www.protocol.jar.Handler.parseContextSpec: 0,02% (1 inclusive)
      3: java.lang.StringBuffer.toString: 0,06% (3 inclusive)
        4: java.net.URLStreamHandler.toExternalForm: 0,04% (2 inclusive)
        4: java.io.StringWriter.toString: 0,02% (1 inclusive)
  1: java.lang.StringBuilder.<init>: 0,6% (31 inclusive)
    2: com.sun.tools.javac.file.RelativePath$RelativeFile.<init>: 0,37% (19 inclusive)
      3: com.sun.tools.javac.file.ZipFileIndex$Entry.getName: 0,17% (9 inclusive)
      3: com.sun.tools.javac.file.ZipFileIndexArchive.getFileObject: 0,02% (1 inclusive)
    2: source.SourceComposed.strFromMatches: 0,06% (3 inclusive)
    2: java.net.URLStreamHandler.parseURL: 0,06% (3 inclusive)
      3: sun.net.www.protocol.file.Handler.parseURL: 0,04% (2 inclusive)
    2: com.sun.tools.javac.util.JCDiagnostic$Factory.qualify: 0,04% (2 inclusive)
      3: com.sun.tools.javac.util.JCDiagnostic$Factory.create: 0,02% (1 inclusive)
    2: util.StringUtils.escape: 0,02% (1 inclusive)
    2: sun.net.www.protocol.jar.Handler.parseContextSpec: 0,02% (1 inclusive)
      3: sun.net.www.protocol.jar.Handler.parseURL: 0,02% (1 inclusive)
    2: grammar.ExpressionTreeCleaner.visit: 0,02% (1 inclusive)
    2: com.sun.tools.javac.file.RelativePath$RelativeDirectory.<init>: 0,02% (1 inclusive)
      3: com.sun.tools.javac.file.ZipFileIndex.getRelativeDirectory: 0,02% (1 inclusive)
  1: java.io.File.listFiles: 0,54% (28 inclusive)
    2: com.sun.tools.javac.file.JavacFileManager.listDirectory: 0,54% (28 inclusive)
  1: sun.misc.URLClassPath$JarLoader.getJarFile: 0,52% (27 inclusive)
    2: sun.misc.URLClassPath$JarLoader.access$600: 0,17% (9 inclusive)
      3: sun.misc.URLClassPath$JarLoader$1.run: 0,17% (9 inclusive)
        4: sun.misc.URLClassPath$JarLoader$1.run: 0,17% (9 inclusive)
  1: java.lang.AbstractStringBuilder.append: 0,52% (27 inclusive)
  1: java.lang.AbstractStringBuilder.expandCapacity: 0,52% (27 inclusive)
    2: java.lang.AbstractStringBuilder.ensureCapacityInternal: 0,52% (27 inclusive)
      3: java.lang.AbstractStringBuilder.append: 0,52% (27 inclusive)
  1: java.lang.AbstractStringBuilder.ensureCapacityInternal: 0,52% (27 inclusive)
    2: java.lang.AbstractStringBuilder.append: 0,52% (27 inclusive)
  1: java.lang.String.replace: 0,52% (27 inclusive)
    2: com.sun.tools.javac.file.ZipFileIndexArchive$ZipFileIndexFileObject.inferBinaryName: 0,33% (17 inclusive)
      3: com.sun.tools.javac.file.JavacFileManager.inferBinaryName: 0,25% (13 inclusive)
        4: compiler.java.CollectingJavaFileManager.inferBinaryName: 0,25% (13 inclusive)
    2: sun.misc.URLClassPath$FileLoader.getResource: 0,08% (4 inclusive)
      3: sun.misc.URLClassPath.getResource: 0,06% (3 inclusive)
        4: java.net.URLClassLoader$1.run: 0,06% (3 inclusive)
    2: java.net.URLClassLoader.isSealed: 0,04% (2 inclusive)
      3: java.net.URLClassLoader.getAndVerifyPackage: 0,04% (2 inclusive)
        4: java.net.URLClassLoader.defineClass: 0,04% (2 inclusive)
    2: java.net.URLClassLoader$1.run: 0,04% (2 inclusive)
      3: java.net.URLClassLoader$1.run: 0,04% (2 inclusive)
        4: java.security.AccessController.doPrivileged: 0,04% (2 inclusive)
    2: com.sun.tools.javac.file.RegularFileObject.inferBinaryName: 0,04% (2 inclusive)
      3: com.sun.tools.javac.file.JavacFileManager.inferBinaryName: 0,04% (2 inclusive)
        4: compiler.java.CollectingJavaFileManager.inferBinaryName: 0,04% (2 inclusive)
  1: com.sun.tools.javac.file.ZipFileIndex.openFile: 0,5% (26 inclusive)
    2: com.sun.tools.javac.file.ZipFileIndex.read: 0,4% (21 inclusive)
    2: com.sun.tools.javac.file.ZipFileIndex.checkIndex: 0,1% (5 inclusive)
  1: java.io.RandomAccessFile.<init>: 0,5% (26 inclusive)
    2: com.sun.tools.javac.file.ZipFileIndex.openFile: 0,5% (26 inclusive)
      3: com.sun.tools.javac.file.ZipFileIndex.read: 0,4% (21 inclusive)
      3: com.sun.tools.javac.file.ZipFileIndex.checkIndex: 0,1% (5 inclusive)
  1: java.io.RandomAccessFile.open: 0,5% (26 inclusive)
    2: java.io.RandomAccessFile.<init>: 0,5% (26 inclusive)
      3: com.sun.tools.javac.file.ZipFileIndex.openFile: 0,5% (26 inclusive)
        4: com.sun.tools.javac.file.ZipFileIndex.read: 0,4% (21 inclusive)
        4: com.sun.tools.javac.file.ZipFileIndex.checkIndex: 0,1% (5 inclusive)
  1: java.util.regex.Pattern.sequence: 0,48% (25 inclusive)
    2: java.util.regex.Pattern.expr: 0,35% (18 inclusive)
      3: java.util.regex.Pattern.compile: 0,25% (13 inclusive)
        4: java.util.regex.Pattern.<init>: 0,23% (12 inclusive)
      3: java.util.regex.Pattern.group0: 0,04% (2 inclusive)
  1: java.io.File.list: 0,48% (25 inclusive)
    2: java.io.File.listFiles: 0,48% (25 inclusive)
      3: com.sun.tools.javac.file.JavacFileManager.listDirectory: 0,48% (25 inclusive)
  1: java.io.WinNTFileSystem.list: 0,48% (25 inclusive)
    2: java.io.File.list: 0,48% (25 inclusive)
      3: java.io.File.listFiles: 0,48% (25 inclusive)
        4: com.sun.tools.javac.file.JavacFileManager.listDirectory: 0,48% (25 inclusive)
  1: parser.NestedMemo.set: 0,46% (24 inclusive)
    2: parser.NestedMemo.get: 0,13% (7 inclusive)
      3: parser.Matcher.visitChild: 0,13% (7 inclusive)
  1: java.util.HashMap.<init>: 0,46% (24 inclusive)
    2: parser.NestedMemo.set: 0,4% (21 inclusive)
      3: parser.NestedMemo.get: 0,13% (7 inclusive)
        4: parser.Matcher.visitChild: 0,13% (7 inclusive)
    2: java.util.HashSet.<init>: 0,04% (2 inclusive)
      3: com.sun.tools.javac.main.JavaCompiler.parseFiles: 0,02% (1 inclusive)
        4: com.sun.tools.javac.main.JavaCompiler.compile: 0,02% (1 inclusive)
  1: com.sun.tools.javac.file.ZipFileIndex.read: 0,42% (22 inclusive)
  1: com.sun.tools.javac.file.RelativePath.<init>: 0,38% (20 inclusive)
    2: com.sun.tools.javac.file.RelativePath$RelativeFile.<init>: 0,21% (11 inclusive)
      3: com.sun.tools.javac.file.RelativePath$RelativeFile.<init>: 0,21% (11 inclusive)
    2: com.sun.tools.javac.file.RelativePath$RelativeDirectory.<init>: 0,17% (9 inclusive)
      3: com.sun.tools.javac.file.RelativePath$RelativeDirectory.dirname: 0,08% (4 inclusive)
      3: com.sun.tools.javac.file.ZipFileIndex.getRelativeDirectory: 0,06% (3 inclusive)
      3: com.sun.tools.javac.file.RelativePath$RelativeFile.dirname: 0,04% (2 inclusive)
  1: java.util.jar.JarFile.hasClassPathAttribute: 0,37% (19 inclusive)
    2: java.util.jar.JavaUtilJarAccessImpl.jarFileHasClassPathAttribute: 0,37% (19 inclusive)
      3: sun.misc.URLClassPath$JarLoader.getClassPath: 0,27% (14 inclusive)
        4: sun.misc.URLClassPath.getLoader: 0,15% (8 inclusive)
  1: java.util.regex.Pattern.compile: 0,37% (19 inclusive)
    2: java.util.regex.Pattern.<init>: 0,23% (12 inclusive)
    2: java.util.regex.Pattern.matches: 0,1% (5 inclusive)
    2: com.sun.tools.javac.processing.JavacProcessingEnvironment.<clinit>: 0,02% (1 inclusive)
  1: java.util.jar.JavaUtilJarAccessImpl.jarFileHasClassPathAttribute: 0,37% (19 inclusive)
    2: sun.misc.URLClassPath$JarLoader.getClassPath: 0,27% (14 inclusive)
      3: sun.misc.URLClassPath.getLoader: 0,15% (8 inclusive)
  1: sun.misc.URLClassPath$JarLoader.getClassPath: 0,37% (19 inclusive)
    2: sun.misc.URLClassPath.getLoader: 0,25% (13 inclusive)
      3: sun.misc.URLClassPath.getResource: 0,1% (5 inclusive)
  1: java.util.regex.Pattern.<init>: 0,35% (18 inclusive)
    2: java.util.regex.Pattern.compile: 0,12% (6 inclusive)
      3: java.util.regex.Pattern.matches: 0,1% (5 inclusive)
      3: com.sun.tools.javac.processing.JavacProcessingEnvironment.<clinit>: 0,02% (1 inclusive)
  1: java.util.regex.Pattern.expr: 0,35% (18 inclusive)
    2: java.util.regex.Pattern.compile: 0,25% (13 inclusive)
      3: java.util.regex.Pattern.<init>: 0,23% (12 inclusive)
    2: java.util.regex.Pattern.group0: 0,04% (2 inclusive)
  1: java.util.jar.JarFile.getManifestFromReference: 0,35% (18 inclusive)
    2: java.util.jar.JarFile.getManifest: 0,35% (18 inclusive)
      3: sun.misc.URLClassPath$JarLoader$2.getManifest: 0,31% (16 inclusive)
        4: java.net.URLClassLoader.defineClass: 0,06% (3 inclusive)
  1: driver.SourceFile.<init>: 0,35% (18 inclusive)
  1: driver.EntryPoint.getPaths: 0,35% (18 inclusive)
    2: driver.EntryPoint.run: 0,23% (12 inclusive)
      3: driver.EntryPoint.main: 0,04% (2 inclusive)
  1: java.util.jar.JarFile.getManifest: 0,35% (18 inclusive)
    2: sun.misc.URLClassPath$JarLoader$2.getManifest: 0,31% (16 inclusive)
      3: java.net.URLClassLoader.defineClass: 0,06% (3 inclusive)
  1: sun.nio.cs.FastCharsetProvider.lookup: 0,33% (17 inclusive)
    2: sun.nio.cs.FastCharsetProvider.charsetForName: 0,31% (16 inclusive)
      3: java.nio.charset.Charset.lookup2: 0,12% (6 inclusive)
        4: java.nio.charset.Charset.lookup: 0,12% (6 inclusive)
  1: com.sun.tools.javac.file.ZipFileIndexArchive$ZipFileIndexFileObject.inferBinaryName: 0,33% (17 inclusive)
    2: com.sun.tools.javac.file.JavacFileManager.inferBinaryName: 0,25% (13 inclusive)
      3: compiler.java.CollectingJavaFileManager.inferBinaryName: 0,25% (13 inclusive)
  1: util.FileUtils.glob: 0,33% (17 inclusive)
    2: driver.EntryPoint.getPaths: 0,31% (16 inclusive)
      3: driver.EntryPoint.run: 0,19% (10 inclusive)
  1: java.net.URLClassLoader$1.run: 0,33% (17 inclusive)
    2: java.security.AccessController.doPrivileged: 0,04% (2 inclusive)
  1: java.io.FileOutputStream.<init>: 0,31% (16 inclusive)
    2: util.FileUtils.write: 0,25% (13 inclusive)
    2: compiler.java.CompiledClass.dump: 0,06% (3 inclusive)
  1: java.io.FileOutputStream.open: 0,31% (16 inclusive)
    2: java.io.FileOutputStream.<init>: 0,31% (16 inclusive)
      3: java.io.FileOutputStream.<init>: 0,31% (16 inclusive)
        4: util.FileUtils.write: 0,25% (13 inclusive)
        4: compiler.java.CompiledClass.dump: 0,06% (3 inclusive)
  1: sun.misc.URLClassPath$JarLoader$2.getManifest: 0,31% (16 inclusive)
    2: java.net.URLClassLoader.defineClass: 0,06% (3 inclusive)
  1: compiler.java.CompiledClass.dump: 0,31% (16 inclusive)
    2: driver.CompilationDriver.dumpAndOrLoadClass: 0,02% (1 inclusive)
      3: driver.CompilationDriver.dumpAndOrLoadClasses: 0,02% (1 inclusive)
        4: driver.CompilationDriver.dumpAndOrLoadClasses: 0,02% (1 inclusive)
  1: sun.nio.cs.FastCharsetProvider.charsetForName: 0,31% (16 inclusive)
    2: java.nio.charset.Charset.lookup2: 0,12% (6 inclusive)
      3: java.nio.charset.Charset.lookup: 0,12% (6 inclusive)
  1: java.util.AbstractMap.<init>: 0,31% (16 inclusive)
    2: java.util.HashMap.<init>: 0,31% (16 inclusive)
      3: parser.NestedMemo.set: 0,27% (14 inclusive)
      3: java.util.HashSet.<init>: 0,02% (1 inclusive)
      3: java.util.HashMap.<init>: 0,02% (1 inclusive)
  1: java.lang.Class.forName: 0,29% (15 inclusive)
    2: sun.nio.cs.FastCharsetProvider.lookup: 0,21% (11 inclusive)
      3: sun.nio.cs.FastCharsetProvider.charsetForName: 0,19% (10 inclusive)
    2: sun.nio.ch.Util$4.run: 0,08% (4 inclusive)
      3: sun.nio.ch.Util$4.run: 0,08% (4 inclusive)
  1: com.sun.tools.javac.file.ZipFileIndex$Entry.<init>: 0,29% (15 inclusive)
    2: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.readEntry: 0,23% (12 inclusive)
      3: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.buildIndex: 0,23% (12 inclusive)
    2: com.sun.tools.javac.file.ZipFileIndex$DirectoryEntry.getEntry: 0,06% (3 inclusive)
      3: com.sun.tools.javac.file.ZipFileIndex$DirectoryEntry.access$100: 0,06% (3 inclusive)
  1: java.lang.Class.forName0: 0,29% (15 inclusive)
    2: java.lang.Class.forName: 0,29% (15 inclusive)
      3: sun.nio.cs.FastCharsetProvider.lookup: 0,21% (11 inclusive)
        4: sun.nio.cs.FastCharsetProvider.charsetForName: 0,19% (10 inclusive)
      3: sun.nio.ch.Util$4.run: 0,08% (4 inclusive)
        4: sun.nio.ch.Util$4.run: 0,08% (4 inclusive)
  1: compiler.java.CollectingJavaFileManager.inferBinaryName: 0,29% (15 inclusive)
  1: util.FileUtils.write: 0,29% (15 inclusive)
  1: com.sun.tools.javac.code.Type.<init>: 0,29% (15 inclusive)
    2: com.sun.tools.javac.code.Type$MethodType.<init>: 0,15% (8 inclusive)
      3: com.sun.tools.javac.jvm.ClassReader.sigToType: 0,12% (6 inclusive)
      3: com.sun.tools.javac.code.Types$Subst.visitMethodType: 0,02% (1 inclusive)
      3: com.sun.tools.javac.code.Symtab.enterBinop: 0,02% (1 inclusive)
    2: com.sun.tools.javac.code.Type$ClassType.<init>: 0,08% (4 inclusive)
      3: com.sun.tools.javac.code.Symbol$ClassSymbol.<init>: 0,08% (4 inclusive)
    2: com.sun.tools.javac.code.Type$PackageType.<init>: 0,02% (1 inclusive)
      3: com.sun.tools.javac.code.Symbol$PackageSymbol.<init>: 0,02% (1 inclusive)
    2: com.sun.tools.javac.code.Type$WildcardType.<init>: 0,02% (1 inclusive)
      3: com.sun.tools.javac.jvm.ClassReader.sigToType: 0,02% (1 inclusive)
    2: com.sun.tools.javac.code.Type$ArrayType.<init>: 0,02% (1 inclusive)
      3: com.sun.tools.javac.comp.Attr.visitTypeArray: 0,02% (1 inclusive)
  1: com.sun.tools.javac.file.JavacFileManager.inferBinaryName: 0,29% (15 inclusive)
    2: compiler.java.CollectingJavaFileManager.inferBinaryName: 0,29% (15 inclusive)
  1: java.lang.ClassLoader.defineClass: 0,27% (14 inclusive)
    2: java.security.SecureClassLoader.defineClass: 0,27% (14 inclusive)
      3: java.net.URLClassLoader.defineClass: 0,27% (14 inclusive)
  1: com.sun.tools.javac.code.Symbol$ClassSymbol.<init>: 0,27% (14 inclusive)
  1: java.lang.ClassLoader.defineClass1: 0,27% (14 inclusive)
    2: java.lang.ClassLoader.defineClass: 0,27% (14 inclusive)
      3: java.security.SecureClassLoader.defineClass: 0,27% (14 inclusive)
        4: java.net.URLClassLoader.defineClass: 0,27% (14 inclusive)
  1: java.lang.StringCoding.decode: 0,27% (14 inclusive)
    2: java.lang.String.<init>: 0,25% (13 inclusive)
      3: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.readEntry: 0,25% (13 inclusive)
  1: sun.misc.FileURLMapper.exists: 0,27% (14 inclusive)
    2: sun.misc.URLClassPath$JarLoader.getJarFile: 0,27% (14 inclusive)
  1: java.security.SecureClassLoader.defineClass: 0,27% (14 inclusive)
    2: java.net.URLClassLoader.defineClass: 0,27% (14 inclusive)
  1: sun.misc.URLClassPath.getLoader: 0,27% (14 inclusive)
    2: sun.misc.URLClassPath.getResource: 0,12% (6 inclusive)
      3: java.net.URLClassLoader$1.run: 0,02% (1 inclusive)
        4: java.net.URLClassLoader$1.run: 0,02% (1 inclusive)
  1: sun.misc.URLClassPath$JarLoader$2.getInputStream: 0,25% (13 inclusive)
    2: sun.misc.Resource.cachedInputStream: 0,08% (4 inclusive)
  1: java.io.WinNTFileSystem.canonicalize0: 0,25% (13 inclusive)
    2: java.io.Win32FileSystem.canonicalize: 0,25% (13 inclusive)
      3: java.io.File.getCanonicalPath: 0,25% (13 inclusive)
        4: com.sun.tools.javac.file.JavacFileManager.caseMapCheck: 0,21% (11 inclusive)
        4: java.io.FilePermission$1.run: 0,04% (2 inclusive)
  1: java.util.zip.ZipFile.getInputStream: 0,25% (13 inclusive)
    2: java.util.jar.JarFile.hasClassPathAttribute: 0,21% (11 inclusive)
      3: java.util.jar.JavaUtilJarAccessImpl.jarFileHasClassPathAttribute: 0,21% (11 inclusive)
        4: sun.misc.URLClassPath$JarLoader.getClassPath: 0,12% (6 inclusive)
  1: java.util.jar.JarFile.initializeVerifier: 0,25% (13 inclusive)
    2: java.util.jar.JarFile.getInputStream: 0,25% (13 inclusive)
      3: sun.misc.URLClassPath$JarLoader$2.getInputStream: 0,25% (13 inclusive)
        4: sun.misc.Resource.cachedInputStream: 0,08% (4 inclusive)
  1: java.util.jar.JarFile.getInputStream: 0,25% (13 inclusive)
    2: sun.misc.URLClassPath$JarLoader$2.getInputStream: 0,25% (13 inclusive)
      3: sun.misc.Resource.cachedInputStream: 0,08% (4 inclusive)
  1: java.io.File.getCanonicalPath: 0,25% (13 inclusive)
    2: com.sun.tools.javac.file.JavacFileManager.caseMapCheck: 0,21% (11 inclusive)
    2: java.io.FilePermission$1.run: 0,04% (2 inclusive)
  1: java.io.Win32FileSystem.canonicalize: 0,25% (13 inclusive)
    2: java.io.File.getCanonicalPath: 0,25% (13 inclusive)
      3: com.sun.tools.javac.file.JavacFileManager.caseMapCheck: 0,21% (11 inclusive)
      3: java.io.FilePermission$1.run: 0,04% (2 inclusive)
  1: java.lang.StringCoding$StringDecoder.decode: 0,25% (13 inclusive)
    2: java.lang.StringCoding.decode: 0,25% (13 inclusive)
      3: java.lang.String.<init>: 0,25% (13 inclusive)
        4: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.readEntry: 0,25% (13 inclusive)
  1: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.findCENRecord: 0,25% (13 inclusive)
    2: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.<init>: 0,02% (1 inclusive)
      3: com.sun.tools.javac.file.ZipFileIndex.checkIndex: 0,02% (1 inclusive)
        4: com.sun.tools.javac.file.ZipFileIndex.<init>: 0,02% (1 inclusive)
  1: javax.tools.ToolProvider.findSystemToolClass: 0,23% (12 inclusive)
    2: javax.tools.ToolProvider.getSystemToolClass: 0,23% (12 inclusive)
      3: javax.tools.ToolProvider.getSystemTool: 0,17% (9 inclusive)
        4: javax.tools.ToolProvider.getSystemJavaCompiler: 0,1% (5 inclusive)
  1: com.sun.tools.javac.file.RelativePath$RelativeDirectory.<init>: 0,23% (12 inclusive)
    2: com.sun.tools.javac.file.RelativePath$RelativeDirectory.dirname: 0,08% (4 inclusive)
    2: com.sun.tools.javac.file.ZipFileIndex.getRelativeDirectory: 0,08% (4 inclusive)
    2: com.sun.tools.javac.file.RelativePath$RelativeFile.dirname: 0,04% (2 inclusive)
  1: java.util.ArrayList.grow: 0,23% (12 inclusive)
    2: java.util.ArrayList.ensureCapacityInternal: 0,23% (12 inclusive)
  1: com.sun.tools.javac.processing.JavacProcessingEnvironment.<init>: 0,23% (12 inclusive)
    2: com.sun.tools.javac.main.JavaCompiler.initProcessAnnotations: 0,17% (9 inclusive)
  1: java.util.jar.JarVerifier.<init>: 0,23% (12 inclusive)
    2: java.util.jar.JarFile.getManifestFromReference: 0,23% (12 inclusive)
      3: java.util.jar.JarFile.getManifest: 0,23% (12 inclusive)
        4: sun.misc.URLClassPath$JarLoader$2.getManifest: 0,23% (12 inclusive)
  1: sun.nio.fs.WindowsFileAttributeViews$Basic.readAttributes: 0,23% (12 inclusive)
    2: sun.nio.fs.WindowsFileSystemProvider.readAttributes: 0,12% (6 inclusive)
      3: java.nio.file.Files.readAttributes: 0,02% (1 inclusive)
  1: driver.EntryPoint.run: 0,23% (12 inclusive)
    2: driver.EntryPoint.main: 0,04% (2 inclusive)
  1: sun.nio.fs.WindowsFileAttributes.get: 0,23% (12 inclusive)
    2: sun.nio.fs.WindowsFileAttributeViews$Basic.readAttributes: 0,21% (11 inclusive)
      3: sun.nio.fs.WindowsFileAttributeViews$Basic.readAttributes: 0,12% (6 inclusive)
        4: sun.nio.fs.WindowsFileSystemProvider.readAttributes: 0,1% (5 inclusive)
  1: javax.tools.ToolProvider.getSystemToolClass: 0,23% (12 inclusive)
    2: javax.tools.ToolProvider.getSystemTool: 0,17% (9 inclusive)
      3: javax.tools.ToolProvider.getSystemJavaCompiler: 0,1% (5 inclusive)
  1: java.util.ArrayList.ensureCapacityInternal: 0,23% (12 inclusive)
  1: java.nio.file.Files.walkFileTree: 0,21% (11 inclusive)
    2: util.FileUtils.glob: 0,17% (9 inclusive)
      3: driver.EntryPoint.getPaths: 0,15% (8 inclusive)
        4: driver.EntryPoint.run: 0,08% (4 inclusive)
  1: sun.misc.URLClassPath$JarLoader$1.run: 0,21% (11 inclusive)
    2: java.security.AccessController.doPrivileged: 0,04% (2 inclusive)
      3: sun.misc.URLClassPath$JarLoader.ensureOpen: 0,04% (2 inclusive)
  1: java.security.AccessController.doPrivileged: 0,21% (11 inclusive)
    2: java.net.URLClassLoader.newInstance: 0,1% (5 inclusive)
    2: sun.misc.URLClassPath$JarLoader.ensureOpen: 0,04% (2 inclusive)
    2: java.net.URLClassLoader.findClass: 0,04% (2 inclusive)
      3: java.lang.ClassLoader.loadClass: 0,04% (2 inclusive)
        4: sun.misc.Launcher$AppClassLoader.loadClass: 0,02% (1 inclusive)
        4: java.lang.ClassLoader.loadClass: 0,02% (1 inclusive)
  1: java.util.regex.Pattern.family: 0,21% (11 inclusive)
    2: java.util.regex.Pattern.sequence: 0,19% (10 inclusive)
      3: java.util.regex.Pattern.expr: 0,06% (3 inclusive)
        4: java.util.regex.Pattern.group0: 0,04% (2 inclusive)
  1: com.sun.tools.javac.file.JavacFileManager.caseMapCheck: 0,21% (11 inclusive)
  1: util.FileUtils.create: 0,19% (10 inclusive)
    2: compiler.java.CompiledClass.dump: 0,15% (8 inclusive)
    2: util.FileUtils.write: 0,04% (2 inclusive)
  1: com.sun.tools.javac.code.Scope$Entry.<init>: 0,19% (10 inclusive)
    2: com.sun.tools.javac.code.Scope.makeEntry: 0,15% (8 inclusive)
      3: com.sun.tools.javac.code.Scope.enter: 0,15% (8 inclusive)
    2: com.sun.tools.javac.code.Scope$ImportScope$ImportEntry.<init>: 0,04% (2 inclusive)
      3: com.sun.tools.javac.code.Scope$ImportScope.makeEntry: 0,04% (2 inclusive)
  1: java.lang.reflect.Field.acquireFieldAccessor: 0,19% (10 inclusive)
    2: java.lang.reflect.Field.getFieldAccessor: 0,19% (10 inclusive)
      3: java.lang.reflect.Field.get: 0,12% (6 inclusive)
  1: com.sun.tools.javac.file.JavacFileManager.listContainer: 0,19% (10 inclusive)
    2: com.sun.tools.javac.file.JavacFileManager.list: 0,02% (1 inclusive)
      3: compiler.java.CollectingJavaFileManager.list: 0,02% (1 inclusive)
  1: java.lang.reflect.Field.getFieldAccessor: 0,19% (10 inclusive)
    2: java.lang.reflect.Field.get: 0,12% (6 inclusive)
  1: sun.nio.fs.WindowsFileSystemProvider.newDirectoryStream: 0,19% (10 inclusive)
    2: java.nio.file.Files.newDirectoryStream: 0,04% (2 inclusive)
      3: java.nio.file.FileTreeWalker.walk: 0,04% (2 inclusive)
        4: java.nio.file.FileTreeWalker.walk: 0,04% (2 inclusive)
  1: sun.reflect.ReflectionFactory.newFieldAccessor: 0,19% (10 inclusive)
    2: java.lang.reflect.Field.acquireFieldAccessor: 0,19% (10 inclusive)
      3: java.lang.reflect.Field.getFieldAccessor: 0,19% (10 inclusive)
        4: java.lang.reflect.Field.get: 0,12% (6 inclusive)
  1: com.sun.tools.javac.file.ZipFileIndex$Entry.getName: 0,17% (9 inclusive)
  1: sun.misc.URLClassPath$JarLoader.access$600: 0,17% (9 inclusive)
    2: sun.misc.URLClassPath$JarLoader$1.run: 0,17% (9 inclusive)
      3: sun.misc.URLClassPath$JarLoader$1.run: 0,17% (9 inclusive)
  1: java.util.ResourceBundle$Control$CandidateListCache.createObject: 0,17% (9 inclusive)
    2: sun.util.locale.LocaleObjectCache.get: 0,1% (5 inclusive)
  1: java.net.URLClassLoader.newInstance: 0,17% (9 inclusive)
    2: javax.tools.ToolProvider.findSystemToolClass: 0,08% (4 inclusive)
      3: javax.tools.ToolProvider.getSystemToolClass: 0,08% (4 inclusive)
        4: javax.tools.ToolProvider.getSystemTool: 0,08% (4 inclusive)
  1: sun.nio.fs.WindowsFileSystemProvider.readAttributes: 0,17% (9 inclusive)
    2: java.nio.file.Files.readAttributes: 0,08% (4 inclusive)
      3: java.nio.file.FileTreeWalker.walk: 0,02% (1 inclusive)
  1: java.io.File.createNewFile: 0,17% (9 inclusive)
    2: util.FileUtils.create: 0,17% (9 inclusive)
      3: compiler.java.CompiledClass.dump: 0,13% (7 inclusive)
      3: util.FileUtils.write: 0,04% (2 inclusive)
  1: com.sun.tools.javac.main.JavaCompiler.initProcessAnnotations: 0,17% (9 inclusive)
  1: java.lang.ClassLoader.getResource: 0,17% (9 inclusive)
  1: java.lang.String.toCharArray: 0,17% (9 inclusive)
    2: com.sun.tools.javac.util.Name$Table.fromString: 0,08% (4 inclusive)
      3: com.sun.tools.javac.util.Names.fromString: 0,08% (4 inclusive)
        4: com.sun.tools.javac.code.Symtab.enterBinop: 0,04% (2 inclusive)
        4: com.sun.tools.javac.code.Symtab.enterClass: 0,02% (1 inclusive)
        4: com.sun.tools.javac.tree.TreeInfo.<init>: 0,02% (1 inclusive)
    2: util.StringUtils.escape: 0,06% (3 inclusive)
      3: grammar.ExpressionTreeCleaner.visit: 0,06% (3 inclusive)
        4: grammar.Expression$StringLiteral.accept: 0,06% (3 inclusive)
    2: sun.net.www.ParseUtil.encodePath: 0,02% (1 inclusive)
      3: sun.misc.URLClassPath$JarLoader.checkResource: 0,02% (1 inclusive)
        4: sun.misc.URLClassPath$JarLoader.getResource: 0,02% (1 inclusive)
    2: java.util.zip.ZipCoder.getBytes: 0,02% (1 inclusive)
      3: java.util.zip.ZipFile.getEntry: 0,02% (1 inclusive)
        4: java.util.jar.JarFile.getEntry: 0,02% (1 inclusive)
  1: java.util.regex.Pattern.charPropertyNodeFor: 0,17% (9 inclusive)
    2: java.util.regex.Pattern.family: 0,17% (9 inclusive)
      3: java.util.regex.Pattern.sequence: 0,15% (8 inclusive)
        4: java.util.regex.Pattern.expr: 0,02% (1 inclusive)
  1: sun.net.www.protocol.file.Handler.createFileURLConnection: 0,17% (9 inclusive)
    2: sun.net.www.protocol.file.Handler.openConnection: 0,17% (9 inclusive)
      3: sun.net.www.protocol.file.Handler.openConnection: 0,13% (7 inclusive)
        4: java.net.URL.openConnection: 0,13% (7 inclusive)
  1: com.sun.tools.javac.util.Name.append: 0,17% (9 inclusive)
    2: com.sun.tools.javac.code.Symbol$TypeSymbol.formFlatName: 0,13% (7 inclusive)
      3: com.sun.tools.javac.jvm.ClassReader.enterClass: 0,08% (4 inclusive)
        4: com.sun.tools.javac.jvm.ClassReader.includeClassFile: 0,08% (4 inclusive)
      3: com.sun.tools.javac.code.Symbol$ClassSymbol.<init>: 0,06% (3 inclusive)
        4: com.sun.tools.javac.code.Symbol$ClassSymbol.<init>: 0,06% (3 inclusive)
    2: com.sun.tools.javac.code.Symbol$TypeSymbol.formFullName: 0,04% (2 inclusive)
      3: com.sun.tools.javac.code.Symbol$ClassSymbol.<init>: 0,04% (2 inclusive)
        4: com.sun.tools.javac.code.Symbol$ClassSymbol.<init>: 0,04% (2 inclusive)
  1: sun.net.www.protocol.file.Handler.openConnection: 0,17% (9 inclusive)
    2: java.net.URL.openConnection: 0,13% (7 inclusive)
  1: java.net.URLStreamHandler.parseURL: 0,17% (9 inclusive)
    2: sun.net.www.protocol.file.Handler.parseURL: 0,04% (2 inclusive)
  1: sun.nio.ch.FileChannelImpl.<clinit>: 0,17% (9 inclusive)
    2: java.io.FileInputStream.getChannel: 0,17% (9 inclusive)
      3: source.SourceFileText.<init>: 0,17% (9 inclusive)
        4: source.SourceFileText.<init>: 0,06% (3 inclusive)
  1: javax.tools.ToolProvider.getSystemTool: 0,17% (9 inclusive)
    2: javax.tools.ToolProvider.getSystemJavaCompiler: 0,1% (5 inclusive)
  1: grammar.ExpressionTreeCleaner.visit: 0,17% (9 inclusive)
    2: grammar.Expression$StringLiteral.accept: 0,06% (3 inclusive)
  1: java.util.ResourceBundle$Control$CandidateListCache.getDefaultList: 0,17% (9 inclusive)
    2: java.util.ResourceBundle$Control$CandidateListCache.createObject: 0,17% (9 inclusive)
      3: java.util.ResourceBundle$Control$CandidateListCache.createObject: 0,1% (5 inclusive)
        4: sun.util.locale.LocaleObjectCache.get: 0,1% (5 inclusive)
  1: java.io.WinNTFileSystem.createFileExclusively: 0,17% (9 inclusive)
    2: java.io.File.createNewFile: 0,17% (9 inclusive)
      3: util.FileUtils.create: 0,17% (9 inclusive)
        4: compiler.java.CompiledClass.dump: 0,13% (7 inclusive)
        4: util.FileUtils.write: 0,04% (2 inclusive)
  1: sun.nio.fs.WindowsDirectoryStream.<init>: 0,15% (8 inclusive)
    2: sun.nio.fs.WindowsFileSystemProvider.newDirectoryStream: 0,15% (8 inclusive)
  1: sun.nio.fs.WindowsNativeDispatcher.FindFirstFile0: 0,15% (8 inclusive)
    2: sun.nio.fs.WindowsNativeDispatcher.FindFirstFile: 0,15% (8 inclusive)
      3: sun.nio.fs.WindowsDirectoryStream.<init>: 0,15% (8 inclusive)
        4: sun.nio.fs.WindowsFileSystemProvider.newDirectoryStream: 0,15% (8 inclusive)
  1: sun.nio.fs.WindowsFileSystem.getPathMatcher: 0,15% (8 inclusive)
    2: util.FileUtils.glob: 0,15% (8 inclusive)
      3: driver.EntryPoint.getPaths: 0,15% (8 inclusive)
        4: driver.EntryPoint.run: 0,12% (6 inclusive)
  1: sun.nio.fs.WindowsNativeDispatcher.FindFirstFile: 0,15% (8 inclusive)
    2: sun.nio.fs.WindowsDirectoryStream.<init>: 0,15% (8 inclusive)
      3: sun.nio.fs.WindowsFileSystemProvider.newDirectoryStream: 0,15% (8 inclusive)
  1: java.lang.StringBuffer.toString: 0,15% (8 inclusive)
    2: java.io.Win32FileSystem.normalize: 0,08% (4 inclusive)
    2: java.net.URLStreamHandler.toExternalForm: 0,06% (3 inclusive)
    2: java.io.StringWriter.toString: 0,02% (1 inclusive)
  1: com.sun.tools.javac.code.Scope.makeEntry: 0,15% (8 inclusive)
    2: com.sun.tools.javac.code.Scope.enter: 0,15% (8 inclusive)
  1: com.sun.tools.javac.util.Name.<init>: 0,15% (8 inclusive)
    2: com.sun.tools.javac.util.SharedNameTable$NameImpl.<init>: 0,15% (8 inclusive)
      3: com.sun.tools.javac.util.SharedNameTable.fromChars: 0,1% (5 inclusive)
      3: com.sun.tools.javac.util.SharedNameTable.fromUtf: 0,06% (3 inclusive)
  1: java.io.File.<init>: 0,15% (8 inclusive)
    2: java.io.File.listFiles: 0,06% (3 inclusive)
      3: com.sun.tools.javac.file.JavacFileManager.listDirectory: 0,06% (3 inclusive)
    2: sun.misc.URLClassPath$FileLoader.getResource: 0,04% (2 inclusive)
      3: sun.misc.URLClassPath.getResource: 0,04% (2 inclusive)
    2: java.io.File.getParentFile: 0,02% (1 inclusive)
      3: sun.misc.Launcher$BootClassPathHolder$1.run: 0,02% (1 inclusive)
    2: com.sun.tools.javac.file.JavacFileManager.listDirectory: 0,02% (1 inclusive)
      3: com.sun.tools.javac.file.JavacFileManager.listContainer: 0,02% (1 inclusive)
  1: com.sun.tools.javac.util.SharedNameTable$NameImpl.<init>: 0,15% (8 inclusive)
    2: com.sun.tools.javac.util.SharedNameTable.fromChars: 0,1% (5 inclusive)
    2: com.sun.tools.javac.util.SharedNameTable.fromUtf: 0,06% (3 inclusive)
  1: sun.misc.URLClassPath$JarLoader.ensureOpen: 0,15% (8 inclusive)
    2: sun.misc.URLClassPath$JarLoader.<init>: 0,12% (6 inclusive)
      3: sun.misc.URLClassPath$3.run: 0,12% (6 inclusive)
        4: sun.misc.URLClassPath$3.run: 0,12% (6 inclusive)
  1: java.io.File.isDirectory: 0,15% (8 inclusive)
    2: com.sun.tools.javac.file.JavacFileManager.listDirectory: 0,13% (7 inclusive)
      3: com.sun.tools.javac.file.JavacFileManager.listContainer: 0,13% (7 inclusive)
    2: com.sun.tools.javac.file.FSInfo.isDirectory: 0,02% (1 inclusive)
      3: com.sun.tools.javac.file.JavacFileManager.listContainer: 0,02% (1 inclusive)
  1: sun.nio.ch.FileChannelImpl.open: 0,15% (8 inclusive)
    2: java.io.FileInputStream.getChannel: 0,15% (8 inclusive)
      3: source.SourceFileText.<init>: 0,15% (8 inclusive)
  1: com.sun.tools.javac.code.Symbol.<init>: 0,15% (8 inclusive)
    2: com.sun.tools.javac.code.Symbol$TypeSymbol.<init>: 0,1% (5 inclusive)
      3: com.sun.tools.javac.code.Symbol$ClassSymbol.<init>: 0,1% (5 inclusive)
    2: com.sun.tools.javac.code.Symbol$MethodSymbol.<init>: 0,04% (2 inclusive)
      3: com.sun.tools.javac.jvm.ClassReader.readMethod: 0,04% (2 inclusive)
    2: com.sun.tools.javac.code.Symbol$DelegatedSymbol.<init>: 0,02% (1 inclusive)
      3: com.sun.tools.javac.jvm.Pool$Method.<init>: 0,02% (1 inclusive)
  1: com.sun.tools.javac.code.Type$MethodType.<init>: 0,15% (8 inclusive)
    2: com.sun.tools.javac.jvm.ClassReader.sigToType: 0,12% (6 inclusive)
    2: com.sun.tools.javac.code.Types$Subst.visitMethodType: 0,02% (1 inclusive)
    2: com.sun.tools.javac.code.Symtab.enterBinop: 0,02% (1 inclusive)
  1: com.sun.tools.javac.code.Scope.enter: 0,15% (8 inclusive)
  1: trees.MatchFinder.find: 0,15% (8 inclusive)
    2: parser.Match.first: 0,02% (1 inclusive)
      3: driver.RequiresParser.parseRequires: 0,02% (1 inclusive)
  1: parser.Matcher.visitChild: 0,15% (8 inclusive)
    2: parser.Matcher.visitChoice: 0,02% (1 inclusive)
  1: sun.nio.ch.FileChannelImpl.<init>: 0,15% (8 inclusive)
    2: sun.nio.ch.FileChannelImpl.open: 0,15% (8 inclusive)
      3: java.io.FileInputStream.getChannel: 0,15% (8 inclusive)
        4: source.SourceFileText.<init>: 0,15% (8 inclusive)
  1: java.io.Win32FileSystem.normalize: 0,15% (8 inclusive)
  1: com.sun.tools.javac.jvm.ClassReader.sigToType: 0,13% (7 inclusive)
  1: java.net.URL.openConnection: 0,13% (7 inclusive)
  1: java.lang.ClassLoader.loadLibrary: 0,13% (7 inclusive)
    2: java.lang.Runtime.loadLibrary0: 0,13% (7 inclusive)
  1: java.lang.StringBuffer.<init>: 0,13% (7 inclusive)
    2: java.io.Win32FileSystem.normalize: 0,06% (3 inclusive)
      3: java.io.Win32FileSystem.normalize: 0,04% (2 inclusive)
    2: java.io.StringWriter.<init>: 0,04% (2 inclusive)
      3: util.apache.CharSequenceTranslator.translate: 0,04% (2 inclusive)
    2: java.net.URLStreamHandler.toExternalForm: 0,04% (2 inclusive)
      3: java.net.URL.toExternalForm: 0,02% (1 inclusive)
  1: com.sun.tools.javac.processing.JavacProcessingEnvironment.initProcessorOptions: 0,13% (7 inclusive)
    2: com.sun.tools.javac.processing.JavacProcessingEnvironment.<init>: 0,13% (7 inclusive)
      3: com.sun.tools.javac.main.JavaCompiler.initProcessAnnotations: 0,08% (4 inclusive)
  1: util.PeekIterator.<init>: 0,13% (7 inclusive)
    2: trees.BoundedMatchIterator.<init>: 0,13% (7 inclusive)
      3: trees.MatchFinder.find: 0,08% (4 inclusive)
  1: com.sun.tools.javac.util.JavacMessages.getBundles: 0,13% (7 inclusive)
    2: com.sun.tools.javac.util.JavacMessages.setCurrentLocale: 0,13% (7 inclusive)
      3: com.sun.tools.javac.util.JavacMessages.<init>: 0,02% (1 inclusive)
  1: java.util.regex.Pattern$CharPropertyNames.<clinit>: 0,13% (7 inclusive)
    2: java.util.regex.Pattern.charPropertyNodeFor: 0,13% (7 inclusive)
      3: java.util.regex.Pattern.family: 0,13% (7 inclusive)
        4: java.util.regex.Pattern.sequence: 0,13% (7 inclusive)
  1: java.util.HashSet.iterator: 0,13% (7 inclusive)
    2: driver.Requires.imports: 0,13% (7 inclusive)
      3: driver.SourceFile.<init>: 0,06% (3 inclusive)
  1: java.lang.ClassLoader.getBootstrapResource: 0,13% (7 inclusive)
    2: java.lang.ClassLoader.getResource: 0,13% (7 inclusive)
  1: java.lang.ClassLoader.getBootstrapClassPath: 0,13% (7 inclusive)
    2: java.lang.ClassLoader.getBootstrapResource: 0,13% (7 inclusive)
      3: java.lang.ClassLoader.getResource: 0,13% (7 inclusive)
  1: sun.security.util.ManifestEntryVerifier.<init>: 0,13% (7 inclusive)
    2: java.util.jar.JarFile.initializeVerifier: 0,13% (7 inclusive)
      3: java.util.jar.JarFile.getInputStream: 0,13% (7 inclusive)
        4: sun.misc.URLClassPath$JarLoader$2.getInputStream: 0,13% (7 inclusive)
  1: com.sun.tools.javac.code.Symbol$TypeSymbol.formFlatName: 0,13% (7 inclusive)
    2: com.sun.tools.javac.jvm.ClassReader.enterClass: 0,08% (4 inclusive)
      3: com.sun.tools.javac.jvm.ClassReader.includeClassFile: 0,08% (4 inclusive)
    2: com.sun.tools.javac.code.Symbol$ClassSymbol.<init>: 0,06% (3 inclusive)
      3: com.sun.tools.javac.code.Symbol$ClassSymbol.<init>: 0,06% (3 inclusive)
  1: java.util.HashMap$KeySet.iterator: 0,13% (7 inclusive)
    2: java.util.HashSet.iterator: 0,08% (4 inclusive)
      3: driver.Requires.imports: 0,08% (4 inclusive)
    2: com.sun.tools.javac.processing.JavacProcessingEnvironment.initProcessorOptions: 0,06% (3 inclusive)
      3: com.sun.tools.javac.processing.JavacProcessingEnvironment.<init>: 0,06% (3 inclusive)
  1: sun.misc.Launcher.getBootstrapClassPath: 0,13% (7 inclusive)
    2: java.lang.ClassLoader.getBootstrapClassPath: 0,13% (7 inclusive)
      3: java.lang.ClassLoader.getBootstrapResource: 0,13% (7 inclusive)
        4: java.lang.ClassLoader.getResource: 0,13% (7 inclusive)
  1: driver.Requires.imports: 0,13% (7 inclusive)
    2: driver.SourceFile.<init>: 0,06% (3 inclusive)
  1: java.lang.Runtime.loadLibrary0: 0,13% (7 inclusive)
  1: java.util.ResourceBundle.getBundle: 0,13% (7 inclusive)
    2: com.sun.tools.javac.util.JavacMessages.getBundles: 0,13% (7 inclusive)
      3: com.sun.tools.javac.util.JavacMessages.setCurrentLocale: 0,13% (7 inclusive)
        4: com.sun.tools.javac.util.JavacMessages.<init>: 0,02% (1 inclusive)
  1: java.lang.ClassLoader.loadLibrary0: 0,13% (7 inclusive)
    2: java.lang.ClassLoader.loadLibrary: 0,13% (7 inclusive)
      3: java.lang.Runtime.loadLibrary0: 0,13% (7 inclusive)
  1: java.lang.ClassLoader$NativeLibrary.load: 0,13% (7 inclusive)
    2: java.lang.ClassLoader.loadLibrary0: 0,13% (7 inclusive)
      3: java.lang.ClassLoader.loadLibrary: 0,13% (7 inclusive)
        4: java.lang.Runtime.loadLibrary0: 0,13% (7 inclusive)
  1: trees.BoundedMatchIterator.<init>: 0,13% (7 inclusive)
    2: trees.MatchFinder.find: 0,08% (4 inclusive)
  1: com.sun.tools.javac.file.ZipFileIndex.checkIndex: 0,13% (7 inclusive)
    2: com.sun.tools.javac.file.ZipFileIndex.<init>: 0,04% (2 inclusive)
  1: com.sun.tools.javac.util.JavacMessages.setCurrentLocale: 0,13% (7 inclusive)
    2: com.sun.tools.javac.util.JavacMessages.<init>: 0,02% (1 inclusive)
  1: com.sun.tools.javac.util.SharedNameTable.fromChars: 0,12% (6 inclusive)
    2: com.sun.tools.javac.util.Names.fromChars: 0,02% (1 inclusive)
      3: com.sun.tools.javac.parser.Scanner.scanOperator: 0,02% (1 inclusive)
        4: com.sun.tools.javac.parser.Scanner.nextToken: 0,02% (1 inclusive)
  1: com.sun.tools.javac.file.ZipFileIndex.readBytes: 0,12% (6 inclusive)
  1: java.util.jar.Manifest.<init>: 0,12% (6 inclusive)
    2: java.util.jar.JarFile.getManifestFromReference: 0,06% (3 inclusive)
      3: java.util.jar.JarFile.getManifest: 0,06% (3 inclusive)
        4: sun.misc.URLClassPath$JarLoader$2.getManifest: 0,02% (1 inclusive)
  1: sun.nio.cs.StreamEncoder.writeBytes: 0,12% (6 inclusive)
  1: java.util.ResourceBundle.findBundle: 0,12% (6 inclusive)
  1: java.io.FileOutputStream.writeBytes: 0,12% (6 inclusive)
    2: java.io.FileOutputStream.write: 0,12% (6 inclusive)
      3: java.io.BufferedOutputStream.write: 0,12% (6 inclusive)
        4: sun.nio.cs.StreamEncoder.writeBytes: 0,12% (6 inclusive)
  1: sun.misc.URLClassPath$3.run: 0,12% (6 inclusive)
  1: com.sun.tools.javac.util.List.of: 0,12% (6 inclusive)
  1: sun.misc.URLClassPath$JarLoader.<init>: 0,12% (6 inclusive)
    2: sun.misc.URLClassPath$3.run: 0,12% (6 inclusive)
      3: sun.misc.URLClassPath$3.run: 0,12% (6 inclusive)
  1: java.net.URLClassLoader.getPermissions: 0,12% (6 inclusive)
    2: sun.misc.Launcher$AppClassLoader.getPermissions: 0,08% (4 inclusive)
      3: java.security.SecureClassLoader.getProtectionDomain: 0,08% (4 inclusive)
  1: java.nio.charset.Charset.lookup: 0,12% (6 inclusive)
  1: java.lang.reflect.Field.get: 0,12% (6 inclusive)
  1: util.StringUtils.escape: 0,12% (6 inclusive)
    2: grammar.ExpressionTreeCleaner.visit: 0,06% (3 inclusive)
      3: grammar.Expression$StringLiteral.accept: 0,06% (3 inclusive)
  1: com.sun.tools.javac.file.RegularFileObject.inferBinaryName: 0,12% (6 inclusive)
    2: com.sun.tools.javac.file.JavacFileManager.inferBinaryName: 0,04% (2 inclusive)
      3: compiler.java.CollectingJavaFileManager.inferBinaryName: 0,04% (2 inclusive)
  1: java.nio.charset.Charset.lookup2: 0,12% (6 inclusive)
    2: java.nio.charset.Charset.lookup: 0,12% (6 inclusive)
  1: java.io.FileOutputStream.write: 0,12% (6 inclusive)
    2: java.io.BufferedOutputStream.write: 0,12% (6 inclusive)
      3: sun.nio.cs.StreamEncoder.writeBytes: 0,12% (6 inclusive)
  1: java.io.BufferedOutputStream.write: 0,12% (6 inclusive)
    2: sun.nio.cs.StreamEncoder.writeBytes: 0,12% (6 inclusive)
  1: sun.misc.URLClassPath$JarLoader.parseExtensionsDependencies: 0,1% (5 inclusive)
    2: sun.misc.URLClassPath$JarLoader.getClassPath: 0,1% (5 inclusive)
      3: sun.misc.URLClassPath.getLoader: 0,1% (5 inclusive)
        4: sun.misc.URLClassPath.getResource: 0,1% (5 inclusive)
  1: java.io.StringWriter.<init>: 0,1% (5 inclusive)
    2: util.apache.CharSequenceTranslator.translate: 0,1% (5 inclusive)
  1: java.net.URLClassLoader.access$100: 0,1% (5 inclusive)
    2: java.net.URLClassLoader$1.run: 0,04% (2 inclusive)
      3: java.net.URLClassLoader$1.run: 0,02% (1 inclusive)
  1: javax.tools.ToolProvider.getSystemJavaCompiler: 0,1% (5 inclusive)
  1: source.SourceComposed.strFromMatches: 0,1% (5 inclusive)
  1: com.sun.tools.javac.file.RelativePath$RelativeDirectory.dirname: 0,1% (5 inclusive)
  1: sun.misc.PerfCounter.<init>: 0,1% (5 inclusive)
    2: sun.misc.PerfCounter.newPerfCounter: 0,1% (5 inclusive)
      3: sun.misc.PerfCounter$CoreCounters.<clinit>: 0,1% (5 inclusive)
  1: sun.misc.URLClassPath$JarLoader.getResource: 0,1% (5 inclusive)
    2: sun.misc.URLClassPath.getResource: 0,08% (4 inclusive)
      3: java.net.URLClassLoader$1.run: 0,08% (4 inclusive)
  1: java.util.jar.Manifest.read: 0,1% (5 inclusive)
    2: java.util.jar.Manifest.<init>: 0,1% (5 inclusive)
      3: java.util.jar.JarFile.getManifestFromReference: 0,04% (2 inclusive)
        4: java.util.jar.JarFile.getManifest: 0,04% (2 inclusive)
  1: java.nio.file.FileTreeWalker.walk: 0,1% (5 inclusive)
    2: java.nio.file.Files.walkFileTree: 0,04% (2 inclusive)
      3: java.nio.file.Files.walkFileTree: 0,04% (2 inclusive)
  1: java.lang.String.toLowerCase: 0,1% (5 inclusive)
    2: java.io.Win32FileSystem.hashCode: 0,1% (5 inclusive)
      3: java.io.File.hashCode: 0,04% (2 inclusive)
        4: java.util.HashMap.get: 0,04% (2 inclusive)
  1: java.io.Win32FileSystem.hashCode: 0,1% (5 inclusive)
    2: java.io.File.hashCode: 0,04% (2 inclusive)
      3: java.util.HashMap.get: 0,04% (2 inclusive)
  1: java.io.Win32FileSystem.resolve: 0,1% (5 inclusive)
    2: java.io.File.<init>: 0,1% (5 inclusive)
      3: java.io.File.listFiles: 0,06% (3 inclusive)
        4: com.sun.tools.javac.file.JavacFileManager.listDirectory: 0,06% (3 inclusive)
      3: sun.misc.URLClassPath$FileLoader.getResource: 0,02% (1 inclusive)
        4: sun.misc.URLClassPath.getResource: 0,02% (1 inclusive)
  1: java.util.Collections.synchronizedMap: 0,1% (5 inclusive)
    2: com.sun.tools.javac.processing.JavacFiler.<init>: 0,1% (5 inclusive)
      3: com.sun.tools.javac.processing.JavacProcessingEnvironment.<init>: 0,1% (5 inclusive)
        4: com.sun.tools.javac.main.JavaCompiler.initProcessAnnotations: 0,1% (5 inclusive)
  1: java.net.URLClassLoader$6.run: 0,1% (5 inclusive)
    2: java.security.AccessController.doPrivileged: 0,1% (5 inclusive)
      3: java.net.URLClassLoader.newInstance: 0,1% (5 inclusive)
  1: com.sun.tools.javac.processing.JavacFiler.<init>: 0,1% (5 inclusive)
    2: com.sun.tools.javac.processing.JavacProcessingEnvironment.<init>: 0,1% (5 inclusive)
      3: com.sun.tools.javac.main.JavaCompiler.initProcessAnnotations: 0,1% (5 inclusive)
  1: sun.misc.PerfCounter.newPerfCounter: 0,1% (5 inclusive)
    2: sun.misc.PerfCounter$CoreCounters.<clinit>: 0,1% (5 inclusive)
  1: java.util.Stack.<init>: 0,1% (5 inclusive)
  1: driver.DependencyResolver.run: 0,1% (5 inclusive)
  1: java.net.URLStreamHandler.toExternalForm: 0,1% (5 inclusive)
    2: java.net.URL.toExternalForm: 0,02% (1 inclusive)
  1: sun.misc.PerfCounter$CoreCounters.<clinit>: 0,1% (5 inclusive)
  1: sun.misc.URLClassPath$JarLoader.checkResource: 0,1% (5 inclusive)
    2: sun.misc.URLClassPath$JarLoader.getResource: 0,1% (5 inclusive)
      3: sun.misc.URLClassPath.getResource: 0,08% (4 inclusive)
        4: java.net.URLClassLoader$1.run: 0,08% (4 inclusive)
  1: java.util.Vector.<init>: 0,1% (5 inclusive)
    2: java.util.Stack.<init>: 0,1% (5 inclusive)
  1: sun.util.locale.LocaleObjectCache.get: 0,1% (5 inclusive)
  1: java.util.zip.ZipFile.getInflater: 0,1% (5 inclusive)
    2: java.util.zip.ZipFile.getInputStream: 0,1% (5 inclusive)
      3: java.util.jar.JarFile.hasClassPathAttribute: 0,1% (5 inclusive)
        4: java.util.jar.JavaUtilJarAccessImpl.jarFileHasClassPathAttribute: 0,1% (5 inclusive)
  1: java.util.regex.Pattern.matches: 0,1% (5 inclusive)
  1: sun.nio.fs.DefaultFileSystemProvider.create: 0,1% (5 inclusive)
    2: java.nio.file.FileSystems$DefaultFileSystemHolder.getDefaultProvider: 0,08% (4 inclusive)
      3: java.nio.file.FileSystems$DefaultFileSystemHolder.access$000: 0,04% (2 inclusive)
        4: java.nio.file.FileSystems$DefaultFileSystemHolder$1.run: 0,04% (2 inclusive)
  1: com.sun.tools.javac.code.Symbol$TypeSymbol.<init>: 0,1% (5 inclusive)
    2: com.sun.tools.javac.code.Symbol$ClassSymbol.<init>: 0,1% (5 inclusive)
  1: java.util.HashSet.<init>: 0,1% (5 inclusive)
    2: sun.nio.fs.WindowsFileSystem.<clinit>: 0,02% (1 inclusive)
    2: com.sun.tools.javac.main.JavaCompiler.parseFiles: 0,02% (1 inclusive)
      3: com.sun.tools.javac.main.JavaCompiler.compile: 0,02% (1 inclusive)
  1: driver.SourceRepository.hint: 0,1% (5 inclusive)
    2: driver.DependencyResolver.run: 0,1% (5 inclusive)
  1: java.io.FilterOutputStream.close: 0,08% (4 inclusive)
    2: compiler.java.CompiledClass.dump: 0,08% (4 inclusive)
  1: java.io.FileOutputStream.close0: 0,08% (4 inclusive)
    2: java.io.FileOutputStream.close: 0,08% (4 inclusive)
      3: java.io.FilterOutputStream.close: 0,08% (4 inclusive)
        4: compiler.java.CompiledClass.dump: 0,08% (4 inclusive)
  1: java.net.URLClassLoader.findClass: 0,08% (4 inclusive)
    2: java.lang.ClassLoader.loadClass: 0,08% (4 inclusive)
      3: sun.misc.Launcher$AppClassLoader.loadClass: 0,02% (1 inclusive)
      3: java.lang.ClassLoader.loadClass: 0,02% (1 inclusive)
  1: com.sun.tools.javac.util.Name$Table.fromString: 0,08% (4 inclusive)
    2: com.sun.tools.javac.util.Names.fromString: 0,08% (4 inclusive)
      3: com.sun.tools.javac.code.Symtab.enterBinop: 0,04% (2 inclusive)
      3: com.sun.tools.javac.code.Symtab.enterClass: 0,02% (1 inclusive)
      3: com.sun.tools.javac.tree.TreeInfo.<init>: 0,02% (1 inclusive)
  1: java.io.FileOutputStream.close: 0,08% (4 inclusive)
    2: java.io.FilterOutputStream.close: 0,08% (4 inclusive)
      3: compiler.java.CompiledClass.dump: 0,08% (4 inclusive)
  1: java.lang.Throwable.<init>: 0,08% (4 inclusive)
    2: java.lang.Exception.<init>: 0,08% (4 inclusive)
      3: java.security.PrivilegedActionException.<init>: 0,02% (1 inclusive)
      3: java.lang.ReflectiveOperationException.<init>: 0,02% (1 inclusive)
  1: trees.MatchFinder.trace: 0,08% (4 inclusive)
    2: trees.MatchFinder.find: 0,08% (4 inclusive)
      3: parser.Match.first: 0,02% (1 inclusive)
        4: driver.RequiresParser.parseRequires: 0,02% (1 inclusive)
  1: java.net.URLClassLoader.getAndVerifyPackage: 0,08% (4 inclusive)
    2: java.net.URLClassLoader.defineClass: 0,08% (4 inclusive)
  1: com.sun.tools.javac.util.Names.fromString: 0,08% (4 inclusive)
    2: com.sun.tools.javac.code.Symtab.enterBinop: 0,04% (2 inclusive)
    2: com.sun.tools.javac.code.Symtab.enterClass: 0,02% (1 inclusive)
    2: com.sun.tools.javac.tree.TreeInfo.<init>: 0,02% (1 inclusive)
  1: java.util.EnumSet.noneOf: 0,08% (4 inclusive)
    2: java.nio.file.Files.walkFileTree: 0,08% (4 inclusive)
      3: util.FileUtils.glob: 0,08% (4 inclusive)
        4: driver.EntryPoint.getPaths: 0,08% (4 inclusive)
  1: com.sun.tools.javac.jvm.ClassReader.enterClass: 0,08% (4 inclusive)
    2: com.sun.tools.javac.jvm.ClassReader.includeClassFile: 0,08% (4 inclusive)
  1: java.lang.Exception.<init>: 0,08% (4 inclusive)
    2: java.security.PrivilegedActionException.<init>: 0,02% (1 inclusive)
    2: java.lang.ReflectiveOperationException.<init>: 0,02% (1 inclusive)
  1: java.util.Collections.unmodifiableMap: 0,08% (4 inclusive)
    2: com.sun.tools.javac.processing.JavacProcessingEnvironment.initProcessorOptions: 0,08% (4 inclusive)
      3: com.sun.tools.javac.processing.JavacProcessingEnvironment.<init>: 0,08% (4 inclusive)
        4: com.sun.tools.javac.main.JavaCompiler.initProcessAnnotations: 0,08% (4 inclusive)
  1: com.sun.tools.javac.file.ZipFileIndex.getRelativeDirectory: 0,08% (4 inclusive)
  1: sun.nio.ch.Util.<clinit>: 0,08% (4 inclusive)
    2: sun.nio.ch.FileChannelImpl.<clinit>: 0,08% (4 inclusive)
      3: java.io.FileInputStream.getChannel: 0,08% (4 inclusive)
        4: source.SourceFileText.<init>: 0,08% (4 inclusive)
  1: com.sun.tools.javac.code.Types$DefaultTypeVisitor.<init>: 0,08% (4 inclusive)
    2: com.sun.tools.javac.code.Types$SimpleVisitor.<init>: 0,08% (4 inclusive)
      3: com.sun.tools.javac.code.Types$UnaryVisitor.<init>: 0,06% (3 inclusive)
      3: com.sun.tools.javac.code.Types$TypeRelation.<init>: 0,02% (1 inclusive)
  1: java.util.ResourceBundle$Control.newBundle: 0,08% (4 inclusive)
    2: java.util.ResourceBundle.loadBundle: 0,08% (4 inclusive)
      3: java.util.ResourceBundle.findBundle: 0,08% (4 inclusive)
        4: java.util.ResourceBundle.findBundle: 0,08% (4 inclusive)
  1: java.nio.file.FileSystems$DefaultFileSystemHolder.defaultFileSystem: 0,08% (4 inclusive)
    2: java.nio.file.FileSystems$DefaultFileSystemHolder.<clinit>: 0,08% (4 inclusive)
      3: java.nio.file.FileSystems.getDefault: 0,04% (2 inclusive)
        4: java.nio.file.Paths.get: 0,04% (2 inclusive)
  1: sun.nio.ch.Util$4.run: 0,08% (4 inclusive)
  1: java.util.zip.ZipFile.getZipEntry: 0,08% (4 inclusive)
    2: java.util.zip.ZipFile.getEntry: 0,08% (4 inclusive)
      3: java.util.jar.JarFile.getEntry: 0,08% (4 inclusive)
        4: java.util.jar.JarFile.getJarEntry: 0,06% (3 inclusive)
  1: com.sun.tools.javac.jvm.ClassReader.includeClassFile: 0,08% (4 inclusive)
  1: java.nio.file.Paths.get: 0,08% (4 inclusive)
    2: driver.Config.<init>: 0,04% (2 inclusive)
      3: driver.Config.<clinit>: 0,04% (2 inclusive)
  1: java.nio.file.FileSystems$DefaultFileSystemHolder.<clinit>: 0,08% (4 inclusive)
    2: java.nio.file.FileSystems.getDefault: 0,04% (2 inclusive)
      3: java.nio.file.Paths.get: 0,04% (2 inclusive)
  1: java.security.SecureClassLoader.getProtectionDomain: 0,08% (4 inclusive)
  1: com.sun.tools.javac.file.ZipFileIndexArchive.getFileObject: 0,08% (4 inclusive)
  1: sun.misc.Perf.createLong: 0,08% (4 inclusive)
    2: sun.misc.PerfCounter.<init>: 0,08% (4 inclusive)
      3: sun.misc.PerfCounter.newPerfCounter: 0,08% (4 inclusive)
        4: sun.misc.PerfCounter$CoreCounters.<clinit>: 0,08% (4 inclusive)
  1: java.util.ResourceBundle$Control.<clinit>: 0,08% (4 inclusive)
    2: java.util.ResourceBundle.getBundle: 0,08% (4 inclusive)
      3: com.sun.tools.javac.util.JavacMessages.getBundles: 0,08% (4 inclusive)
        4: com.sun.tools.javac.util.JavacMessages.setCurrentLocale: 0,08% (4 inclusive)
  1: com.sun.tools.javac.code.Type$ClassType.<init>: 0,08% (4 inclusive)
    2: com.sun.tools.javac.code.Symbol$ClassSymbol.<init>: 0,08% (4 inclusive)
  1: java.util.ResourceBundle.loadBundle: 0,08% (4 inclusive)
    2: java.util.ResourceBundle.findBundle: 0,08% (4 inclusive)
      3: java.util.ResourceBundle.findBundle: 0,08% (4 inclusive)
  1: java.util.LinkedList.linkLast: 0,08% (4 inclusive)
    2: java.util.LinkedList.add: 0,08% (4 inclusive)
      3: java.util.ResourceBundle$Control$CandidateListCache.getDefaultList: 0,08% (4 inclusive)
        4: java.util.ResourceBundle$Control$CandidateListCache.createObject: 0,08% (4 inclusive)
  1: java.util.zip.ZipFile$ZipFileInflaterInputStream.fill: 0,08% (4 inclusive)
  1: java.lang.Class.getAnnotation: 0,08% (4 inclusive)
    2: java.lang.Class.isAnnotationPresent: 0,08% (4 inclusive)
      3: com.sun.tools.javac.api.ClientCodeWrapper.isTrusted: 0,08% (4 inclusive)
  1: java.util.HashMap.newKeyIterator: 0,08% (4 inclusive)
    2: java.util.HashMap$KeySet.iterator: 0,08% (4 inclusive)
      3: java.util.HashSet.iterator: 0,08% (4 inclusive)
        4: driver.Requires.imports: 0,08% (4 inclusive)
  1: com.sun.tools.javac.util.JCDiagnostic$Factory.qualify: 0,08% (4 inclusive)
    2: com.sun.tools.javac.util.JCDiagnostic$Factory.create: 0,02% (1 inclusive)
  1: com.sun.tools.javac.api.ClientCodeWrapper.isTrusted: 0,08% (4 inclusive)
  1: java.lang.Class.isAnnotationPresent: 0,08% (4 inclusive)
    2: com.sun.tools.javac.api.ClientCodeWrapper.isTrusted: 0,08% (4 inclusive)
  1: com.sun.tools.javac.util.ListBuffer.append: 0,08% (4 inclusive)
  1: java.nio.file.FileSystems$DefaultFileSystemHolder.getDefaultProvider: 0,08% (4 inclusive)
    2: java.nio.file.FileSystems$DefaultFileSystemHolder.access$000: 0,04% (2 inclusive)
      3: java.nio.file.FileSystems$DefaultFileSystemHolder$1.run: 0,04% (2 inclusive)
  1: com.sun.tools.javac.file.BaseFileObject.removeExtension: 0,08% (4 inclusive)
  1: java.util.LinkedList.add: 0,08% (4 inclusive)
    2: java.util.ResourceBundle$Control$CandidateListCache.getDefaultList: 0,08% (4 inclusive)
      3: java.util.ResourceBundle$Control$CandidateListCache.createObject: 0,08% (4 inclusive)
  1: sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor: 0,08% (4 inclusive)
    2: sun.reflect.ReflectionFactory.newFieldAccessor: 0,08% (4 inclusive)
      3: java.lang.reflect.Field.acquireFieldAccessor: 0,08% (4 inclusive)
        4: java.lang.reflect.Field.getFieldAccessor: 0,08% (4 inclusive)
  1: sun.misc.Launcher$AppClassLoader.getPermissions: 0,08% (4 inclusive)
    2: java.security.SecureClassLoader.getProtectionDomain: 0,08% (4 inclusive)
  1: sun.net.www.ParseUtil.encodePath: 0,08% (4 inclusive)
    2: sun.misc.URLClassPath$FileLoader.getResource: 0,06% (3 inclusive)
      3: sun.misc.URLClassPath.getResource: 0,04% (2 inclusive)
        4: java.net.URLClassLoader$1.run: 0,04% (2 inclusive)
    2: sun.misc.URLClassPath$JarLoader.checkResource: 0,02% (1 inclusive)
      3: sun.misc.URLClassPath$JarLoader.getResource: 0,02% (1 inclusive)
  1: java.util.zip.ZipCoder.getBytes: 0,08% (4 inclusive)
    2: java.util.zip.ZipFile.getEntry: 0,08% (4 inclusive)
      3: java.util.jar.JarFile.getEntry: 0,08% (4 inclusive)
        4: java.util.jar.JarFile.getJarEntry: 0,04% (2 inclusive)
  1: com.sun.tools.javac.code.Types$SimpleVisitor.<init>: 0,08% (4 inclusive)
    2: com.sun.tools.javac.code.Types$UnaryVisitor.<init>: 0,06% (3 inclusive)
    2: com.sun.tools.javac.code.Types$TypeRelation.<init>: 0,02% (1 inclusive)
  1: java.lang.Class.initAnnotationsIfNecessary: 0,08% (4 inclusive)
    2: java.lang.Class.getAnnotation: 0,08% (4 inclusive)
      3: java.lang.Class.isAnnotationPresent: 0,08% (4 inclusive)
        4: com.sun.tools.javac.api.ClientCodeWrapper.isTrusted: 0,08% (4 inclusive)
  1: java.nio.file.Files.readAttributes: 0,08% (4 inclusive)
    2: java.nio.file.FileTreeWalker.walk: 0,02% (1 inclusive)
  1: java.util.Vector.iterator: 0,06% (3 inclusive)
    2: trees.MatchIterator.trace: 0,06% (3 inclusive)
      3: trees.MatchFinder.trace: 0,06% (3 inclusive)
        4: trees.MatchFinder.find: 0,06% (3 inclusive)
  1: java.io.FileInputStream.close: 0,06% (3 inclusive)
    2: sun.misc.Resource.getBytes: 0,06% (3 inclusive)
      3: java.net.URLClassLoader.defineClass: 0,06% (3 inclusive)
  1: com.sun.tools.javac.util.ListBuffer.<init>: 0,06% (3 inclusive)
  1: java.util.HashMap.keySet: 0,06% (3 inclusive)
    2: java.util.HashSet.iterator: 0,06% (3 inclusive)
      3: driver.Requires.imports: 0,06% (3 inclusive)
        4: driver.SourceFile.<init>: 0,06% (3 inclusive)
  1: compiler.java.DynamicJavaCompiler.compile: 0,06% (3 inclusive)
  1: java.util.concurrent.ConcurrentHashMap$HashEntry.<init>: 0,06% (3 inclusive)
    2: java.util.concurrent.ConcurrentHashMap$Segment.put: 0,06% (3 inclusive)
      3: java.util.concurrent.ConcurrentHashMap.putIfAbsent: 0,06% (3 inclusive)
  1: java.util.concurrent.ConcurrentHashMap.putIfAbsent: 0,06% (3 inclusive)
  1: sun.nio.fs.WindowsFileSystemProvider.<init>: 0,06% (3 inclusive)
    2: sun.nio.fs.DefaultFileSystemProvider.create: 0,06% (3 inclusive)
      3: java.nio.file.FileSystems$DefaultFileSystemHolder.getDefaultProvider: 0,04% (2 inclusive)
  1: java.lang.ThreadLocal.get: 0,06% (3 inclusive)
    2: java.lang.StringCoding.deref: 0,04% (2 inclusive)
    2: sun.nio.fs.NativeBuffers.releaseNativeBuffer: 0,02% (1 inclusive)
      3: sun.nio.fs.NativeBuffer.release: 0,02% (1 inclusive)
  1: java.io.Writer.<init>: 0,06% (3 inclusive)
    2: java.io.StringWriter.<init>: 0,06% (3 inclusive)
      3: util.apache.CharSequenceTranslator.translate: 0,06% (3 inclusive)
  1: java.util.Collections.emptyIterator: 0,06% (3 inclusive)
    2: java.util.Collections$EmptyList.iterator: 0,06% (3 inclusive)
      3: util.PeekIterator.<init>: 0,06% (3 inclusive)
        4: trees.BoundedMatchIterator.<init>: 0,06% (3 inclusive)
  1: trees.MatchIterator.trace: 0,06% (3 inclusive)
    2: trees.MatchFinder.trace: 0,06% (3 inclusive)
      3: trees.MatchFinder.find: 0,06% (3 inclusive)
  1: com.sun.tools.javac.api.JavacTool.getTask: 0,06% (3 inclusive)
    2: compiler.java.DynamicJavaCompiler.compile: 0,06% (3 inclusive)
  1: java.io.FileInputStream.close0: 0,06% (3 inclusive)
    2: java.io.FileInputStream.close: 0,06% (3 inclusive)
      3: sun.misc.Resource.getBytes: 0,06% (3 inclusive)
        4: java.net.URLClassLoader.defineClass: 0,06% (3 inclusive)
  1: com.sun.tools.javac.util.SharedNameTable.fromUtf: 0,06% (3 inclusive)
  1: com.sun.tools.javac.comp.Resolve.selectBest: 0,06% (3 inclusive)
    2: com.sun.tools.javac.comp.Resolve.findFun: 0,02% (1 inclusive)
    2: com.sun.tools.javac.comp.Resolve.findMethod: 0,02% (1 inclusive)
  1: java.util.Collections$EmptyList.iterator: 0,06% (3 inclusive)
    2: util.PeekIterator.<init>: 0,06% (3 inclusive)
      3: trees.BoundedMatchIterator.<init>: 0,06% (3 inclusive)
  1: sun.misc.Launcher$AppClassLoader.loadClass: 0,06% (3 inclusive)
  1: sun.nio.fs.WindowsPath.resolve: 0,06% (3 inclusive)
    2: files.RelativeSourcePath.<init>: 0,06% (3 inclusive)
      3: driver.RequiresParser.parseRequire: 0,06% (3 inclusive)
  1: com.sun.tools.javac.file.ZipFileIndex$DirectoryEntry.getEntry: 0,06% (3 inclusive)
    2: com.sun.tools.javac.file.ZipFileIndex$DirectoryEntry.access$100: 0,06% (3 inclusive)
  1: com.sun.tools.javac.file.RelativePath$RelativeFile.dirname: 0,06% (3 inclusive)
  1: sun.net.www.protocol.jar.Handler.parseContextSpec: 0,06% (3 inclusive)
    2: sun.net.www.protocol.jar.Handler.parseURL: 0,02% (1 inclusive)
  1: grammar.Expression$StringLiteral.accept: 0,06% (3 inclusive)
  1: sun.nio.fs.WindowsNativeDispatcher.GetFileAttributesEx0: 0,06% (3 inclusive)
    2: sun.nio.fs.WindowsNativeDispatcher.GetFileAttributesEx: 0,06% (3 inclusive)
      3: sun.nio.fs.WindowsFileAttributes.get: 0,06% (3 inclusive)
        4: sun.nio.fs.WindowsFileAttributeViews$Basic.readAttributes: 0,06% (3 inclusive)
  1: java.util.concurrent.ConcurrentHashMap$Segment.put: 0,06% (3 inclusive)
    2: java.util.concurrent.ConcurrentHashMap.putIfAbsent: 0,06% (3 inclusive)
  1: java.util.AbstractQueue.<init>: 0,06% (3 inclusive)
    2: com.sun.tools.javac.util.ListBuffer.<init>: 0,06% (3 inclusive)
  1: files.RelativeSourcePath.<init>: 0,06% (3 inclusive)
    2: driver.RequiresParser.parseRequire: 0,06% (3 inclusive)
  1: sun.nio.fs.WindowsDirectoryStream$WindowsDirectoryIterator.readNextEntry: 0,06% (3 inclusive)
    2: sun.nio.fs.WindowsDirectoryStream$WindowsDirectoryIterator.hasNext: 0,04% (2 inclusive)
  1: sun.nio.fs.WindowsNativeDispatcher.<clinit>: 0,06% (3 inclusive)
    2: sun.nio.fs.WindowsFileAttributes.get: 0,06% (3 inclusive)
      3: sun.nio.fs.WindowsFileAttributeViews$Basic.readAttributes: 0,06% (3 inclusive)
        4: sun.nio.fs.WindowsFileAttributeViews$Basic.readAttributes: 0,02% (1 inclusive)
  1: com.sun.tools.javac.code.Symtab.enterBinop: 0,06% (3 inclusive)
  1: com.sun.tools.javac.file.BaseFileObject.<init>: 0,06% (3 inclusive)
    2: com.sun.tools.javac.file.ZipFileIndexArchive$ZipFileIndexFileObject.<init>: 0,06% (3 inclusive)
      3: com.sun.tools.javac.file.ZipFileIndexArchive.getFileObject: 0,06% (3 inclusive)
  1: java.security.Permissions.add: 0,06% (3 inclusive)
    2: java.net.URLClassLoader.getPermissions: 0,06% (3 inclusive)
      3: sun.misc.Launcher$AppClassLoader.getPermissions: 0,02% (1 inclusive)
        4: java.security.SecureClassLoader.getProtectionDomain: 0,02% (1 inclusive)
  1: java.lang.String.concat: 0,06% (3 inclusive)
    2: java.net.URLClassLoader$1.run: 0,06% (3 inclusive)
  1: driver.RequiresParser.parseRequire: 0,06% (3 inclusive)
  1: java.util.Collections$UnmodifiableCollection.iterator: 0,06% (3 inclusive)
    2: com.sun.tools.javac.api.JavacTool.getTask: 0,06% (3 inclusive)
      3: com.sun.tools.javac.api.JavacTool.getTask: 0,06% (3 inclusive)
        4: compiler.java.DynamicJavaCompiler.compile: 0,06% (3 inclusive)
  1: java.util.HashMap.resize: 0,06% (3 inclusive)
    2: java.util.HashMap.addEntry: 0,06% (3 inclusive)
      3: java.util.HashMap.put: 0,06% (3 inclusive)
        4: parser.NestedMemo.set: 0,06% (3 inclusive)
  1: java.util.jar.Attributes.read: 0,06% (3 inclusive)
    2: java.util.jar.Manifest.read: 0,06% (3 inclusive)
      3: java.util.jar.Manifest.<init>: 0,06% (3 inclusive)
  1: com.sun.tools.javac.file.ZipFileIndexArchive$ZipFileIndexFileObject.<init>: 0,06% (3 inclusive)
    2: com.sun.tools.javac.file.ZipFileIndexArchive.getFileObject: 0,06% (3 inclusive)
  1: com.sun.tools.javac.code.Types$UnaryVisitor.<init>: 0,06% (3 inclusive)
  1: com.sun.tools.javac.file.ZipFileIndex$DirectoryEntry.access$100: 0,06% (3 inclusive)
  1: sun.nio.fs.WindowsFileSystemProvider.getFileAttributeView: 0,06% (3 inclusive)
    2: sun.nio.fs.WindowsFileSystemProvider.readAttributes: 0,06% (3 inclusive)
      3: java.nio.file.Files.readAttributes: 0,06% (3 inclusive)
        4: java.nio.file.FileTreeWalker.walk: 0,02% (1 inclusive)
  1: com.sun.tools.javac.comp.Resolve.checkRawArgumentsAcceptable: 0,06% (3 inclusive)
    2: com.sun.tools.javac.comp.Resolve.rawInstantiate: 0,06% (3 inclusive)
      3: com.sun.tools.javac.comp.Resolve.selectBest: 0,06% (3 inclusive)
        4: com.sun.tools.javac.comp.Resolve.findFun: 0,02% (1 inclusive)
        4: com.sun.tools.javac.comp.Resolve.findMethod: 0,02% (1 inclusive)
  1: java.util.LinkedHashMap.newKeyIterator: 0,06% (3 inclusive)
    2: java.util.HashMap$KeySet.iterator: 0,06% (3 inclusive)
      3: com.sun.tools.javac.processing.JavacProcessingEnvironment.initProcessorOptions: 0,06% (3 inclusive)
        4: com.sun.tools.javac.processing.JavacProcessingEnvironment.<init>: 0,06% (3 inclusive)
  1: sun.nio.fs.WindowsNativeDispatcher.GetFileAttributesEx: 0,06% (3 inclusive)
    2: sun.nio.fs.WindowsFileAttributes.get: 0,06% (3 inclusive)
      3: sun.nio.fs.WindowsFileAttributeViews$Basic.readAttributes: 0,06% (3 inclusive)
  1: java.util.regex.Pattern.group0: 0,06% (3 inclusive)
    2: java.util.regex.Pattern.sequence: 0,02% (1 inclusive)
      3: java.util.regex.Pattern.expr: 0,02% (1 inclusive)
        4: java.util.regex.Pattern.compile: 0,02% (1 inclusive)
  1: com.sun.tools.javac.comp.Resolve.rawInstantiate: 0,06% (3 inclusive)
    2: com.sun.tools.javac.comp.Resolve.selectBest: 0,06% (3 inclusive)
      3: com.sun.tools.javac.comp.Resolve.findFun: 0,02% (1 inclusive)
      3: com.sun.tools.javac.comp.Resolve.findMethod: 0,02% (1 inclusive)
  1: compiler.MatchTreeTransformer.transformChilds: 0,06% (3 inclusive)
  1: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.access$000: 0,04% (2 inclusive)
    2: com.sun.tools.javac.file.ZipFileIndex.checkIndex: 0,02% (1 inclusive)
      3: com.sun.tools.javac.file.ZipFileIndex.<init>: 0,02% (1 inclusive)
  1: sun.misc.MetaIndex.registerDirectory: 0,04% (2 inclusive)
  1: parser.Matcher.<init>: 0,04% (2 inclusive)
    2: compiler.util.Quoter.primitiveQuote: 0,02% (1 inclusive)
    2: compiler.util.Quoter$DynamicQuoteMethod.dynamicQuote: 0,02% (1 inclusive)
      3: compiler.util.Quoter.dynamicQuote: 0,02% (1 inclusive)
  1: com.sun.tools.javac.util.Options.isSet: 0,04% (2 inclusive)
  1: com.sun.tools.javac.parser.Keywords.<init>: 0,04% (2 inclusive)
    2: com.sun.tools.javac.parser.Keywords.instance: 0,04% (2 inclusive)
      3: com.sun.tools.javac.parser.ParserFactory.<init>: 0,04% (2 inclusive)
        4: com.sun.tools.javac.parser.ParserFactory.instance: 0,02% (1 inclusive)
  1: sun.net.www.protocol.file.FileURLConnection.getPermission: 0,04% (2 inclusive)
    2: java.net.URLClassLoader.getPermissions: 0,04% (2 inclusive)
      3: sun.misc.Launcher$AppClassLoader.getPermissions: 0,04% (2 inclusive)
        4: java.security.SecureClassLoader.getProtectionDomain: 0,04% (2 inclusive)
  1: sun.nio.ch.FileChannelImpl.map: 0,04% (2 inclusive)
    2: source.SourceFileText.<init>: 0,04% (2 inclusive)
      3: source.SourceFileText.<init>: 0,02% (1 inclusive)
        4: driver.SourceFile.<init>: 0,02% (1 inclusive)
  1: java.io.FileReader.<init>: 0,04% (2 inclusive)
    2: sun.misc.MetaIndex.registerDirectory: 0,04% (2 inclusive)
  1: sun.nio.fs.WindowsPath.createFromNormalizedPath: 0,04% (2 inclusive)
    2: sun.nio.fs.WindowsDirectoryStream$WindowsDirectoryIterator.acceptEntry: 0,04% (2 inclusive)
      3: sun.nio.fs.WindowsDirectoryStream$WindowsDirectoryIterator.readNextEntry: 0,04% (2 inclusive)
        4: sun.nio.fs.WindowsDirectoryStream$WindowsDirectoryIterator.hasNext: 0,04% (2 inclusive)
  1: java.net.URLClassLoader.isSealed: 0,04% (2 inclusive)
    2: java.net.URLClassLoader.getAndVerifyPackage: 0,04% (2 inclusive)
      3: java.net.URLClassLoader.defineClass: 0,04% (2 inclusive)
  1: java.nio.file.Files.newDirectoryStream: 0,04% (2 inclusive)
    2: java.nio.file.FileTreeWalker.walk: 0,04% (2 inclusive)
      3: java.nio.file.FileTreeWalker.walk: 0,04% (2 inclusive)
  1: java.lang.ThreadLocal.setInitialValue: 0,04% (2 inclusive)
    2: java.lang.ThreadLocal.get: 0,04% (2 inclusive)
      3: java.lang.StringCoding.deref: 0,04% (2 inclusive)
  1: java.io.File.hashCode: 0,04% (2 inclusive)
    2: java.util.HashMap.get: 0,04% (2 inclusive)
  1: sun.nio.fs.WindowsDirectoryStream$WindowsDirectoryIterator.acceptEntry: 0,04% (2 inclusive)
    2: sun.nio.fs.WindowsDirectoryStream$WindowsDirectoryIterator.readNextEntry: 0,04% (2 inclusive)
      3: sun.nio.fs.WindowsDirectoryStream$WindowsDirectoryIterator.hasNext: 0,04% (2 inclusive)
  1: sun.nio.fs.WindowsFileSystem.getPath: 0,04% (2 inclusive)
    2: java.nio.file.Paths.get: 0,04% (2 inclusive)
      3: driver.Config.<init>: 0,04% (2 inclusive)
        4: driver.Config.<clinit>: 0,04% (2 inclusive)
  1: com.sun.tools.javac.jvm.ClassReader.readMethod: 0,04% (2 inclusive)
  1: java.util.HashMap.get: 0,04% (2 inclusive)
  1: com.sun.tools.javac.comp.Lower.translateTopLevelClass: 0,04% (2 inclusive)
    2: com.sun.tools.javac.main.JavaCompiler.desugar: 0,04% (2 inclusive)
      3: com.sun.tools.javac.main.JavaCompiler.desugar: 0,04% (2 inclusive)
  1: sun.net.www.protocol.file.FileURLConnection.<init>: 0,04% (2 inclusive)
    2: sun.net.www.protocol.file.Handler.createFileURLConnection: 0,04% (2 inclusive)
      3: sun.net.www.protocol.file.Handler.openConnection: 0,04% (2 inclusive)
  1: java.security.Permissions.getPermissionCollection: 0,04% (2 inclusive)
    2: java.security.Permissions.add: 0,04% (2 inclusive)
      3: java.net.URLClassLoader.getPermissions: 0,04% (2 inclusive)
  1: sun.reflect.ReflectionFactory.newMethodAccessor: 0,04% (2 inclusive)
    2: java.lang.reflect.Method.acquireMethodAccessor: 0,04% (2 inclusive)
      3: java.lang.reflect.Method.invoke: 0,04% (2 inclusive)
        4: java.lang.Class.getEnumConstantsShared: 0,04% (2 inclusive)
  1: com.sun.tools.javac.file.ZipFileIndex.<init>: 0,04% (2 inclusive)
  1: java.lang.ClassLoader.findLoadedClass0: 0,04% (2 inclusive)
    2: java.lang.ClassLoader.findLoadedClass: 0,04% (2 inclusive)
      3: java.lang.ClassLoader.loadClass: 0,04% (2 inclusive)
        4: java.lang.ClassLoader.loadClass: 0,02% (1 inclusive)
        4: sun.misc.Launcher$AppClassLoader.loadClass: 0,02% (1 inclusive)
  1: java.lang.Throwable.fillInStackTrace: 0,04% (2 inclusive)
    2: java.lang.Throwable.<init>: 0,04% (2 inclusive)
      3: java.lang.Exception.<init>: 0,04% (2 inclusive)
  1: sun.net.www.URLConnection.<init>: 0,04% (2 inclusive)
    2: sun.net.www.protocol.file.FileURLConnection.<init>: 0,04% (2 inclusive)
      3: sun.net.www.protocol.file.Handler.createFileURLConnection: 0,04% (2 inclusive)
        4: sun.net.www.protocol.file.Handler.openConnection: 0,04% (2 inclusive)
  1: java.util.ResourceBundle.getBundleImpl: 0,04% (2 inclusive)
    2: java.util.ResourceBundle.getBundle: 0,04% (2 inclusive)
      3: com.sun.tools.javac.util.JavacMessages.getBundles: 0,04% (2 inclusive)
        4: com.sun.tools.javac.util.JavacMessages.setCurrentLocale: 0,04% (2 inclusive)
  1: java.lang.ThreadLocal.createMap: 0,04% (2 inclusive)
    2: java.lang.ThreadLocal.setInitialValue: 0,04% (2 inclusive)
      3: java.lang.ThreadLocal.get: 0,04% (2 inclusive)
        4: java.lang.StringCoding.deref: 0,04% (2 inclusive)
  1: java.net.URI.create: 0,04% (2 inclusive)
    2: java.nio.file.FileSystems$DefaultFileSystemHolder.defaultFileSystem: 0,04% (2 inclusive)
      3: java.nio.file.FileSystems$DefaultFileSystemHolder.<clinit>: 0,04% (2 inclusive)
  1: compiler.util.MatchCreator.new_match: 0,04% (2 inclusive)
  1: com.sun.tools.javac.parser.Keywords.instance: 0,04% (2 inclusive)
    2: com.sun.tools.javac.parser.ParserFactory.<init>: 0,04% (2 inclusive)
      3: com.sun.tools.javac.parser.ParserFactory.instance: 0,02% (1 inclusive)
  1: java.io.FileInputStream.readBytes: 0,04% (2 inclusive)
    2: java.io.FileInputStream.read: 0,04% (2 inclusive)
      3: sun.misc.Resource.getBytes: 0,04% (2 inclusive)
        4: java.net.URLClassLoader.defineClass: 0,04% (2 inclusive)
  1: com.sun.tools.javac.util.ListBuffer.iterator: 0,04% (2 inclusive)
    2: com.sun.tools.javac.code.DeferredLintHandler.flush: 0,04% (2 inclusive)
  1: com.sun.tools.javac.util.List.prepend: 0,04% (2 inclusive)
  1: sun.nio.fs.WindowsFileAttributeViews.createBasicView: 0,04% (2 inclusive)
    2: sun.nio.fs.WindowsFileSystemProvider.getFileAttributeView: 0,04% (2 inclusive)
      3: sun.nio.fs.WindowsFileSystemProvider.readAttributes: 0,04% (2 inclusive)
        4: java.nio.file.Files.readAttributes: 0,04% (2 inclusive)
  1: com.sun.tools.javac.main.JavaCompiler.desugar: 0,04% (2 inclusive)
  1: java.lang.Class.getEnumConstantsShared: 0,04% (2 inclusive)
  1: com.sun.tools.javac.jvm.Gen.initCode: 0,04% (2 inclusive)
    2: com.sun.tools.javac.jvm.Gen.genMethod: 0,04% (2 inclusive)
  1: sun.nio.fs.WindowsFileSystem.<clinit>: 0,04% (2 inclusive)
    2: sun.nio.fs.WindowsFileSystemProvider.<init>: 0,02% (1 inclusive)
      3: sun.nio.fs.DefaultFileSystemProvider.create: 0,02% (1 inclusive)
  1: java.lang.reflect.Method.invoke: 0,04% (2 inclusive)
    2: java.lang.Class.getEnumConstantsShared: 0,04% (2 inclusive)
  1: java.util.regex.Pattern.newSlice: 0,04% (2 inclusive)
    2: java.util.regex.Pattern.atom: 0,04% (2 inclusive)
      3: java.util.regex.Pattern.sequence: 0,04% (2 inclusive)
        4: java.util.regex.Pattern.expr: 0,04% (2 inclusive)
  1: java.lang.reflect.Field.<init>: 0,04% (2 inclusive)
    2: java.lang.reflect.Field.copy: 0,04% (2 inclusive)
  1: java.util.regex.Pattern.<clinit>: 0,04% (2 inclusive)
    2: sun.nio.fs.WindowsFileSystem.getPathMatcher: 0,04% (2 inclusive)
      3: util.FileUtils.glob: 0,04% (2 inclusive)
        4: driver.EntryPoint.getPaths: 0,04% (2 inclusive)
  1: sun.net.www.protocol.file.Handler.parseURL: 0,04% (2 inclusive)
  1: java.io.FilePermission$1.run: 0,04% (2 inclusive)
  1: java.util.zip.ZipFile$ZipFileInputStream.<init>: 0,04% (2 inclusive)
    2: java.util.zip.ZipFile.getInputStream: 0,04% (2 inclusive)
  1: java.util.AbstractSet.<init>: 0,04% (2 inclusive)
    2: java.util.HashSet.<init>: 0,04% (2 inclusive)
  1: java.util.jar.Attributes.putValue: 0,04% (2 inclusive)
    2: java.util.jar.Attributes.read: 0,04% (2 inclusive)
      3: java.util.jar.Manifest.read: 0,04% (2 inclusive)
        4: java.util.jar.Manifest.<init>: 0,04% (2 inclusive)
  1: util.CollectingFileVisitor.visitFile: 0,04% (2 inclusive)
  1: com.sun.tools.javac.file.FSInfo.isFile: 0,04% (2 inclusive)
    2: com.sun.tools.javac.file.Paths$Path.addFile: 0,04% (2 inclusive)
  1: com.sun.tools.javac.code.Symbol$MethodSymbol.<init>: 0,04% (2 inclusive)
    2: com.sun.tools.javac.jvm.ClassReader.readMethod: 0,04% (2 inclusive)
  1: sun.launcher.LauncherHelper.makePlatformString: 0,04% (2 inclusive)
  1: sun.nio.ch.Util.load: 0,04% (2 inclusive)
    2: sun.nio.ch.FileChannelImpl.<clinit>: 0,04% (2 inclusive)
      3: java.io.FileInputStream.getChannel: 0,04% (2 inclusive)
        4: source.SourceFileText.<init>: 0,04% (2 inclusive)
  1: com.sun.tools.javac.code.Scope$ImportScope.makeEntry: 0,04% (2 inclusive)
  1: com.sun.tools.javac.code.Scope$ImportScope$ImportEntry.<init>: 0,04% (2 inclusive)
    2: com.sun.tools.javac.code.Scope$ImportScope.makeEntry: 0,04% (2 inclusive)
  1: com.sun.tools.javac.jvm.ClassReader.<init>: 0,04% (2 inclusive)
    2: com.sun.tools.javac.jvm.ClassReader.instance: 0,02% (1 inclusive)
      3: com.sun.tools.javac.main.JavaCompiler.<init>: 0,02% (1 inclusive)
        4: com.sun.tools.javac.main.JavaCompiler.instance: 0,02% (1 inclusive)
  1: java.nio.file.FileSystems$DefaultFileSystemHolder$1.run: 0,04% (2 inclusive)
  1: com.sun.tools.javac.code.Symbol$TypeSymbol.formFullName: 0,04% (2 inclusive)
    2: com.sun.tools.javac.code.Symbol$ClassSymbol.<init>: 0,04% (2 inclusive)
      3: com.sun.tools.javac.code.Symbol$ClassSymbol.<init>: 0,04% (2 inclusive)
  1: java.lang.ClassLoader.getClassLoadingLock: 0,04% (2 inclusive)
    2: java.lang.ClassLoader.loadClass: 0,04% (2 inclusive)
      3: java.lang.ClassLoader.loadClass: 0,02% (1 inclusive)
      3: sun.misc.Launcher$AppClassLoader.loadClass: 0,02% (1 inclusive)
  1: java.util.regex.Pattern.atom: 0,04% (2 inclusive)
    2: java.util.regex.Pattern.sequence: 0,04% (2 inclusive)
      3: java.util.regex.Pattern.expr: 0,04% (2 inclusive)
  1: sun.nio.fs.WindowsDirectoryStream$WindowsDirectoryIterator.hasNext: 0,04% (2 inclusive)
  1: com.sun.tools.javac.main.JavaCompiler.<init>: 0,04% (2 inclusive)
    2: com.sun.tools.javac.main.JavaCompiler.instance: 0,04% (2 inclusive)
  1: com.sun.tools.javac.util.ListBuffer$1.<init>: 0,04% (2 inclusive)
    2: com.sun.tools.javac.util.ListBuffer.iterator: 0,04% (2 inclusive)
      3: com.sun.tools.javac.code.DeferredLintHandler.flush: 0,04% (2 inclusive)
  1: java.util.ResourceBundle.putBundleInCache: 0,04% (2 inclusive)
    2: java.util.ResourceBundle.findBundle: 0,04% (2 inclusive)
      3: java.util.ResourceBundle.findBundle: 0,04% (2 inclusive)
        4: java.util.ResourceBundle.findBundle: 0,04% (2 inclusive)
  1: java.net.URLClassLoader$1.<init>: 0,04% (2 inclusive)
    2: java.net.URLClassLoader.findClass: 0,04% (2 inclusive)
      3: java.lang.ClassLoader.loadClass: 0,04% (2 inclusive)
  1: com.sun.tools.javac.file.Paths$Path.addFile: 0,04% (2 inclusive)
  1: com.sun.tools.javac.parser.ParserFactory.<init>: 0,04% (2 inclusive)
    2: com.sun.tools.javac.parser.ParserFactory.instance: 0,02% (1 inclusive)
  1: java.lang.reflect.AccessibleObject.<init>: 0,04% (2 inclusive)
    2: java.lang.reflect.Field.<init>: 0,04% (2 inclusive)
      3: java.lang.reflect.Field.copy: 0,04% (2 inclusive)
  1: java.lang.reflect.Method.acquireMethodAccessor: 0,04% (2 inclusive)
    2: java.lang.reflect.Method.invoke: 0,04% (2 inclusive)
      3: java.lang.Class.getEnumConstantsShared: 0,04% (2 inclusive)
  1: java.lang.ClassLoader.getResources: 0,04% (2 inclusive)
    2: java.util.ServiceLoader$LazyIterator.hasNext: 0,02% (1 inclusive)
  1: sun.nio.fs.WindowsFileSystem$2.matches: 0,04% (2 inclusive)
    2: util.CollectingFileVisitor.visitFile: 0,04% (2 inclusive)
      3: util.CollectingFileVisitor.visitFile: 0,04% (2 inclusive)
  1: java.net.URLClassLoader.findResource: 0,04% (2 inclusive)
    2: java.lang.ClassLoader.getResource: 0,04% (2 inclusive)
      3: java.lang.ClassLoader.getResource: 0,04% (2 inclusive)
        4: java.lang.ClassLoader.getResource: 0,04% (2 inclusive)
  1: sun.nio.fs.WindowsNativeDispatcher.initIDs: 0,04% (2 inclusive)
    2: sun.nio.fs.WindowsNativeDispatcher.<clinit>: 0,04% (2 inclusive)
      3: sun.nio.fs.WindowsFileAttributes.get: 0,04% (2 inclusive)
        4: sun.nio.fs.WindowsFileAttributeViews$Basic.readAttributes: 0,04% (2 inclusive)
  1: java.nio.file.FileSystems$DefaultFileSystemHolder.access$000: 0,04% (2 inclusive)
    2: java.nio.file.FileSystems$DefaultFileSystemHolder$1.run: 0,04% (2 inclusive)
  1: java.util.regex.Pattern.matcher: 0,04% (2 inclusive)
    2: sun.nio.fs.WindowsFileSystem$2.matches: 0,04% (2 inclusive)
      3: util.CollectingFileVisitor.visitFile: 0,04% (2 inclusive)
        4: util.CollectingFileVisitor.visitFile: 0,04% (2 inclusive)
  1: com.sun.tools.javac.jvm.Gen.genMethod: 0,04% (2 inclusive)
  1: java.lang.ClassLoader.findLoadedClass: 0,04% (2 inclusive)
    2: java.lang.ClassLoader.loadClass: 0,04% (2 inclusive)
      3: java.lang.ClassLoader.loadClass: 0,02% (1 inclusive)
      3: sun.misc.Launcher$AppClassLoader.loadClass: 0,02% (1 inclusive)
  1: com.sun.tools.javac.parser.JavacParser.term3: 0,04% (2 inclusive)
    2: com.sun.tools.javac.parser.JavacParser.term2: 0,02% (1 inclusive)
      3: com.sun.tools.javac.parser.JavacParser.term1: 0,02% (1 inclusive)
  1: com.sun.tools.javac.parser.JavacParser.term2: 0,04% (2 inclusive)
    2: com.sun.tools.javac.parser.JavacParser.term1: 0,04% (2 inclusive)
  1: com.sun.tools.javac.parser.JavacParser.term1: 0,04% (2 inclusive)
  1: driver.Config.<init>: 0,04% (2 inclusive)
    2: driver.Config.<clinit>: 0,04% (2 inclusive)
  1: java.lang.reflect.Field.copy: 0,04% (2 inclusive)
  1: compiler.util.Quoter$DynamicQuoteMethod.dynamicQuote: 0,04% (2 inclusive)
    2: compiler.util.Quoter.dynamicQuote: 0,04% (2 inclusive)
  1: trees.MatchSpec.<init>: 0,04% (2 inclusive)
    2: trees.MatchSpec$RuleSpec.<init>: 0,02% (1 inclusive)
      3: trees.MatchSpec.rule: 0,02% (1 inclusive)
    2: trees.MatchSpec$ExprSpec.<init>: 0,02% (1 inclusive)
      3: trees.MatchSpec.expr: 0,02% (1 inclusive)
  1: com.sun.tools.javac.code.Types$ImplementationCache.get: 0,04% (2 inclusive)
    2: com.sun.tools.javac.code.Types.implementation: 0,02% (1 inclusive)
  1: sun.reflect.NativeMethodAccessorImpl.invoke0: 0,04% (2 inclusive)
    2: sun.reflect.NativeMethodAccessorImpl.invoke: 0,02% (1 inclusive)
      3: sun.reflect.DelegatingMethodAccessorImpl.invoke: 0,02% (1 inclusive)
  1: com.sun.tools.javac.main.JavaCompiler.instance: 0,04% (2 inclusive)
  1: driver.Config.<clinit>: 0,04% (2 inclusive)
  1: source.SourceComposed.<init>: 0,04% (2 inclusive)
    2: compiler.util.MatchCreator.new_match: 0,04% (2 inclusive)
  1: java.io.File.isFile: 0,04% (2 inclusive)
    2: com.sun.tools.javac.file.FSInfo.isFile: 0,04% (2 inclusive)
      3: com.sun.tools.javac.file.Paths$Path.addFile: 0,04% (2 inclusive)
  1: java.util.jar.JarVerifier.beginEntry: 0,04% (2 inclusive)
    2: java.util.jar.JarFile.initializeVerifier: 0,04% (2 inclusive)
      3: java.util.jar.JarFile.getInputStream: 0,04% (2 inclusive)
        4: sun.misc.URLClassPath$JarLoader$2.getInputStream: 0,04% (2 inclusive)
  1: java.util.Collections$UnmodifiableCollection.size: 0,04% (2 inclusive)
    2: compiler.MatchTreeTransformer.transformChilds: 0,04% (2 inclusive)
      3: compiler.MacroExpander.transform: 0,02% (1 inclusive)
        4: compiler.MatchTreeTransformer.transformChilds: 0,02% (1 inclusive)
      3: compiler.PostExpansionTransformer.transform: 0,02% (1 inclusive)
        4: compiler.MatchTreeTransformer.transformChilds: 0,02% (1 inclusive)
  1: driver.EntryPoint.main: 0,04% (2 inclusive)
  1: compiler.MacroExpander.transform: 0,04% (2 inclusive)
    2: compiler.MatchTreeTransformer.transformChilds: 0,04% (2 inclusive)
  1: sun.net.www.protocol.jar.Handler.parseURL: 0,04% (2 inclusive)
  1: com.sun.tools.javac.code.Scope.<init>: 0,04% (2 inclusive)
    2: com.sun.tools.javac.comp.Lower.translateTopLevelClass: 0,02% (1 inclusive)
      3: com.sun.tools.javac.main.JavaCompiler.desugar: 0,02% (1 inclusive)
        4: com.sun.tools.javac.main.JavaCompiler.desugar: 0,02% (1 inclusive)
    2: com.sun.tools.javac.code.Scope.dup: 0,02% (1 inclusive)
  1: sun.nio.fs.WindowsFileSystem.<init>: 0,04% (2 inclusive)
    2: sun.nio.fs.WindowsFileSystemProvider.<init>: 0,04% (2 inclusive)
      3: sun.nio.fs.DefaultFileSystemProvider.create: 0,04% (2 inclusive)
        4: java.nio.file.FileSystems$DefaultFileSystemHolder.getDefaultProvider: 0,04% (2 inclusive)
  1: com.sun.tools.javac.code.DeferredLintHandler.flush: 0,04% (2 inclusive)
  1: java.io.FilePermission.newPermissionCollection: 0,04% (2 inclusive)
    2: java.security.Permissions.getPermissionCollection: 0,04% (2 inclusive)
      3: java.security.Permissions.add: 0,04% (2 inclusive)
        4: java.net.URLClassLoader.getPermissions: 0,04% (2 inclusive)
  1: com.sun.tools.javac.file.ZipFileIndex$DirectoryEntry.<init>: 0,04% (2 inclusive)
    2: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.readEntry: 0,04% (2 inclusive)
      3: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.buildIndex: 0,04% (2 inclusive)
  1: java.nio.channels.FileChannel.<clinit>: 0,04% (2 inclusive)
    2: java.io.FileInputStream.getChannel: 0,04% (2 inclusive)
      3: source.SourceFileText.<init>: 0,04% (2 inclusive)
        4: source.SourceFileText.<init>: 0,04% (2 inclusive)
  1: java.io.FileInputStream.read: 0,04% (2 inclusive)
    2: sun.misc.Resource.getBytes: 0,04% (2 inclusive)
      3: java.net.URLClassLoader.defineClass: 0,04% (2 inclusive)
  1: java.util.regex.Pattern$CharPropertyNames.charPropertyFor: 0,04% (2 inclusive)
    2: java.util.regex.Pattern.charPropertyNodeFor: 0,02% (1 inclusive)
      3: java.util.regex.Pattern.family: 0,02% (1 inclusive)
  1: java.lang.ClassLoader.getPackage: 0,04% (2 inclusive)
    2: java.net.URLClassLoader.getAndVerifyPackage: 0,04% (2 inclusive)
      3: java.net.URLClassLoader.defineClass: 0,04% (2 inclusive)
  1: compiler.util.Quoter.dynamicQuote: 0,04% (2 inclusive)
  1: java.lang.StringCoding.deref: 0,04% (2 inclusive)
  1: java.net.URI.<init>: 0,04% (2 inclusive)
    2: java.net.URI.create: 0,04% (2 inclusive)
      3: java.nio.file.FileSystems$DefaultFileSystemHolder.defaultFileSystem: 0,04% (2 inclusive)
        4: java.nio.file.FileSystems$DefaultFileSystemHolder.<clinit>: 0,04% (2 inclusive)
  1: java.util.jar.Manifest$FastInputStream.fill: 0,04% (2 inclusive)
  1: java.nio.file.FileSystems.getDefault: 0,04% (2 inclusive)
    2: java.nio.file.Paths.get: 0,04% (2 inclusive)
  1: com.sun.tools.javac.main.JavaCompiler.parseFiles: 0,02% (1 inclusive)
    2: com.sun.tools.javac.main.JavaCompiler.compile: 0,02% (1 inclusive)
  1: sun.nio.cs.MS1252.newDecoder: 0,02% (1 inclusive)
    2: java.lang.StringCoding$StringDecoder.<init>: 0,02% (1 inclusive)
      3: java.lang.StringCoding$StringDecoder.<init>: 0,02% (1 inclusive)
        4: java.lang.StringCoding.decode: 0,02% (1 inclusive)
  1: java.lang.ClassLoader.getBootstrapResources: 0,02% (1 inclusive)
    2: java.lang.ClassLoader.getResources: 0,02% (1 inclusive)
  1: com.sun.tools.javac.tree.JCTree$JCFieldAccess.<init>: 0,02% (1 inclusive)
  1: com.sun.tools.javac.code.Scope.dup: 0,02% (1 inclusive)
  1: com.sun.tools.javac.code.Type$PackageType.<init>: 0,02% (1 inclusive)
    2: com.sun.tools.javac.code.Symbol$PackageSymbol.<init>: 0,02% (1 inclusive)
  1: java.util.WeakHashMap$Entry.<init>: 0,02% (1 inclusive)
  1: driver.Context.<clinit>: 0,02% (1 inclusive)
    2: driver.DependencyResolver.<init>: 0,02% (1 inclusive)
      3: driver.DependencyResolver.resolve: 0,02% (1 inclusive)
  1: parser.Match.first: 0,02% (1 inclusive)
    2: driver.RequiresParser.parseRequires: 0,02% (1 inclusive)
  1: java.lang.ref.Finalizer.access$100: 0,02% (1 inclusive)
    2: java.lang.ref.Finalizer$FinalizerThread.run: 0,02% (1 inclusive)
  1: parser.Matcher.visitChoice: 0,02% (1 inclusive)
  1: java.lang.ref.Finalizer$FinalizerThread.run: 0,02% (1 inclusive)
  1: com.sun.tools.javac.util.Names.createTable: 0,02% (1 inclusive)
    2: com.sun.tools.javac.util.Names.<init>: 0,02% (1 inclusive)
  1: java.io.InputStream.<init>: 0,02% (1 inclusive)
    2: java.util.zip.ZipFile$ZipFileInputStream.<init>: 0,02% (1 inclusive)
      3: java.util.zip.ZipFile.getInputStream: 0,02% (1 inclusive)
  1: com.sun.tools.javac.file.FSInfo.isDirectory: 0,02% (1 inclusive)
    2: com.sun.tools.javac.file.JavacFileManager.listContainer: 0,02% (1 inclusive)
  1: com.sun.tools.javac.file.JavacFileManager.list: 0,02% (1 inclusive)
    2: compiler.java.CollectingJavaFileManager.list: 0,02% (1 inclusive)
  1: com.sun.tools.javac.util.Names.<init>: 0,02% (1 inclusive)
  1: com.sun.tools.javac.jvm.ClassReader.readClassOrType: 0,02% (1 inclusive)
    2: com.sun.tools.javac.jvm.ClassReader.readPool: 0,02% (1 inclusive)
      3: com.sun.tools.javac.jvm.ClassReader.readClassSymbol: 0,02% (1 inclusive)
  1: com.sun.tools.javac.util.Names.fromChars: 0,02% (1 inclusive)
    2: com.sun.tools.javac.parser.Scanner.scanOperator: 0,02% (1 inclusive)
      3: com.sun.tools.javac.parser.Scanner.nextToken: 0,02% (1 inclusive)
  1: com.sun.tools.javac.parser.Scanner.scanOperator: 0,02% (1 inclusive)
    2: com.sun.tools.javac.parser.Scanner.nextToken: 0,02% (1 inclusive)
  1: com.sun.tools.javac.jvm.Code.emitStackMap: 0,02% (1 inclusive)
    2: com.sun.tools.javac.jvm.Code.emitop: 0,02% (1 inclusive)
      3: com.sun.tools.javac.jvm.Code.emitop1w: 0,02% (1 inclusive)
  1: com.sun.tools.javac.code.Scope$CompoundScope$2$1.nextIterator: 0,02% (1 inclusive)
  1: com.sun.tools.javac.parser.JavacParser.newPosStack: 0,02% (1 inclusive)
    2: com.sun.tools.javac.parser.JavacParser.term2Rest: 0,02% (1 inclusive)
      3: com.sun.tools.javac.parser.JavacParser.term2: 0,02% (1 inclusive)
        4: com.sun.tools.javac.parser.JavacParser.term1: 0,02% (1 inclusive)
  1: com.sun.tools.javac.jvm.ClassReader$2.<init>: 0,02% (1 inclusive)
    2: com.sun.tools.javac.jvm.ClassReader.initAttributeReaders: 0,02% (1 inclusive)
  1: grammar.GrammarDSL.chars: 0,02% (1 inclusive)
  1: java.util.Arrays.sort: 0,02% (1 inclusive)
    2: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.buildIndex: 0,02% (1 inclusive)
      3: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.access$000: 0,02% (1 inclusive)
  1: java.lang.Object.getClass: 0,02% (1 inclusive)
    2: java.lang.Enum.compareTo: 0,02% (1 inclusive)
      3: com.sun.tools.javac.code.Source.allowVarargs: 0,02% (1 inclusive)
        4: com.sun.tools.javac.comp.Resolve.<init>: 0,02% (1 inclusive)
  1: com.sun.tools.javac.util.JavacMessages.<init>: 0,02% (1 inclusive)
  1: com.sun.tools.javac.util.JCDiagnostic$Factory.create: 0,02% (1 inclusive)
  1: grammar.java.CallbacksMacroDefinition.<clinit>: 0,02% (1 inclusive)
    2: grammar.java._E_MacroDefinitions.initialize: 0,02% (1 inclusive)
      3: sun.reflect.NativeMethodAccessorImpl.invoke0: 0,02% (1 inclusive)
  1: com.sun.tools.javac.code.Types.memberType: 0,02% (1 inclusive)
    2: com.sun.tools.javac.code.Symbol$MethodSymbol.overrides: 0,02% (1 inclusive)
      3: com.sun.tools.javac.code.Types$ImplementationCache.implementationInternal: 0,02% (1 inclusive)
        4: com.sun.tools.javac.code.Types$ImplementationCache.get: 0,02% (1 inclusive)
  1: sun.misc.PerfCounter.<clinit>: 0,02% (1 inclusive)
    2: java.net.URLClassLoader.defineClass: 0,02% (1 inclusive)
      3: java.net.URLClassLoader.access$100: 0,02% (1 inclusive)
        4: java.net.URLClassLoader$1.run: 0,02% (1 inclusive)
  1: com.sun.tools.javac.jvm.Code$State.<init>: 0,02% (1 inclusive)
    2: com.sun.tools.javac.jvm.Code.<init>: 0,02% (1 inclusive)
      3: com.sun.tools.javac.jvm.Gen.initCode: 0,02% (1 inclusive)
        4: com.sun.tools.javac.jvm.Gen.genMethod: 0,02% (1 inclusive)
  1: files.RelativeSourcePath.fileName: 0,02% (1 inclusive)
  1: sun.misc.Launcher$BootClassPathHolder$1.run: 0,02% (1 inclusive)
  1: com.sun.tools.javac.tree.TreeMaker.Unary: 0,02% (1 inclusive)
    2: com.sun.tools.javac.parser.JavacParser.term3: 0,02% (1 inclusive)
      3: com.sun.tools.javac.parser.JavacParser.term2: 0,02% (1 inclusive)
        4: com.sun.tools.javac.parser.JavacParser.term1: 0,02% (1 inclusive)
  1: com.sun.tools.javac.util.RichDiagnosticFormatter.instance: 0,02% (1 inclusive)
    2: com.sun.tools.javac.main.JavaCompiler.<init>: 0,02% (1 inclusive)
      3: com.sun.tools.javac.main.JavaCompiler.instance: 0,02% (1 inclusive)
  1: java.io.StringWriter.toString: 0,02% (1 inclusive)
  1: com.sun.tools.javac.tree.TreeInfo.<init>: 0,02% (1 inclusive)
  1: java.util.Arrays$LegacyMergeSort.<clinit>: 0,02% (1 inclusive)
    2: java.util.Arrays.sort: 0,02% (1 inclusive)
      3: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.buildIndex: 0,02% (1 inclusive)
        4: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.access$000: 0,02% (1 inclusive)
  1: trees.MatchSpec$ExprSpec.<init>: 0,02% (1 inclusive)
    2: trees.MatchSpec.expr: 0,02% (1 inclusive)
  1: com.sun.tools.javac.tree.JCTree.<init>: 0,02% (1 inclusive)
    2: com.sun.tools.javac.tree.JCTree$JCExpression.<init>: 0,02% (1 inclusive)
      3: com.sun.tools.javac.tree.JCTree$JCFieldAccess.<init>: 0,02% (1 inclusive)
  1: java.io.File.getParentFile: 0,02% (1 inclusive)
    2: sun.misc.Launcher$BootClassPathHolder$1.run: 0,02% (1 inclusive)
  1: java.util.Arrays$ArrayList.<init>: 0,02% (1 inclusive)
  1: java.util.regex.Pattern.access$600: 0,02% (1 inclusive)
    2: java.util.regex.Pattern$CharPropertyNames$2.make: 0,02% (1 inclusive)
      3: java.util.regex.Pattern$CharPropertyNames.charPropertyFor: 0,02% (1 inclusive)
  1: com.sun.tools.javac.comp.Check.checkConflicts: 0,02% (1 inclusive)
    2: com.sun.tools.javac.comp.Lower$1.visitMethodDef: 0,02% (1 inclusive)
      3: com.sun.tools.javac.tree.JCTree$JCMethodDecl.accept: 0,02% (1 inclusive)
        4: com.sun.tools.javac.tree.TreeScanner.scan: 0,02% (1 inclusive)
  1: com.sun.tools.javac.comp.AttrContext.<init>: 0,02% (1 inclusive)
    2: com.sun.tools.javac.comp.AttrContext.dup: 0,02% (1 inclusive)
      3: com.sun.tools.javac.comp.Enter.classEnv: 0,02% (1 inclusive)
  1: java.util.zip.ZipEntry.<init>: 0,02% (1 inclusive)
    2: java.util.jar.JarEntry.<init>: 0,02% (1 inclusive)
      3: java.util.jar.JarFile$JarFileEntry.<init>: 0,02% (1 inclusive)
  1: java.util.Vector.ensureCapacityHelper: 0,02% (1 inclusive)
  1: sun.nio.fs.NativeBuffer.release: 0,02% (1 inclusive)
  1: com.sun.tools.javac.code.Type$WildcardType.<init>: 0,02% (1 inclusive)
    2: com.sun.tools.javac.jvm.ClassReader.sigToType: 0,02% (1 inclusive)
  1: com.sun.tools.javac.tree.JCTree$JCExpression.<init>: 0,02% (1 inclusive)
    2: com.sun.tools.javac.tree.JCTree$JCFieldAccess.<init>: 0,02% (1 inclusive)
  1: java.util.jar.JarEntry.<init>: 0,02% (1 inclusive)
    2: java.util.jar.JarFile$JarFileEntry.<init>: 0,02% (1 inclusive)
  1: java.util.regex.Pattern$Ctype.isSatisfiedBy: 0,02% (1 inclusive)
    2: java.util.regex.Pattern$BmpCharProperty.match: 0,02% (1 inclusive)
      3: java.util.regex.Pattern$Curly.match: 0,02% (1 inclusive)
        4: java.util.regex.Pattern$GroupHead.match: 0,02% (1 inclusive)
  1: trees.MatchSpec$RuleSpec.<init>: 0,02% (1 inclusive)
    2: trees.MatchSpec.rule: 0,02% (1 inclusive)
  1: com.sun.tools.javac.jvm.ClassWriter.instance: 0,02% (1 inclusive)
  1: com.sun.tools.javac.util.RichDiagnosticFormatter.<init>: 0,02% (1 inclusive)
    2: com.sun.tools.javac.util.RichDiagnosticFormatter.instance: 0,02% (1 inclusive)
      3: com.sun.tools.javac.main.JavaCompiler.<init>: 0,02% (1 inclusive)
        4: com.sun.tools.javac.main.JavaCompiler.instance: 0,02% (1 inclusive)
  1: com.sun.tools.javac.comp.Env.<init>: 0,02% (1 inclusive)
    2: com.sun.tools.javac.jvm.Gen.genClass: 0,02% (1 inclusive)
      3: com.sun.tools.javac.main.JavaCompiler.genCode: 0,02% (1 inclusive)
  1: java.lang.Float.valueOf: 0,02% (1 inclusive)
    2: com.sun.tools.javac.parser.Scanner.hexFloatsWork: 0,02% (1 inclusive)
  1: sun.nio.ch.FileChannelImpl.size: 0,02% (1 inclusive)
    2: source.SourceFileText.<init>: 0,02% (1 inclusive)
      3: source.SourceFileText.<init>: 0,02% (1 inclusive)
  1: java.util.zip.ZipFile.getEntryCSize: 0,02% (1 inclusive)
    2: java.util.zip.ZipFile.access$1100: 0,02% (1 inclusive)
      3: java.util.zip.ZipFile$ZipFileInputStream.<init>: 0,02% (1 inclusive)
        4: java.util.zip.ZipFile.getInputStream: 0,02% (1 inclusive)
  1: com.sun.tools.javac.code.Scope$3$1.<init>: 0,02% (1 inclusive)
    2: com.sun.tools.javac.code.Scope$3.iterator: 0,02% (1 inclusive)
      3: com.sun.tools.javac.code.Scope$CompoundScope$2$1.nextIterator: 0,02% (1 inclusive)
  1: java.util.regex.Pattern$SliceU.match: 0,02% (1 inclusive)
    2: java.util.regex.Pattern$Curly.match0: 0,02% (1 inclusive)
  1: java.util.ArrayList.toArray: 0,02% (1 inclusive)
    2: java.util.Collections$UnmodifiableCollection.toArray: 0,02% (1 inclusive)
  1: sun.nio.fs.WindowsFileAttributes.<init>: 0,02% (1 inclusive)
    2: sun.nio.fs.WindowsFileAttributes.fromFindData: 0,02% (1 inclusive)
      3: sun.nio.fs.WindowsDirectoryStream$WindowsDirectoryIterator.readNextEntry: 0,02% (1 inclusive)
  1: grammar.Expression$CharClass.<init>: 0,02% (1 inclusive)
    2: grammar.GrammarDSL.chars: 0,02% (1 inclusive)
  1: com.sun.tools.javac.processing.JavacProcessingEnvironment.<clinit>: 0,02% (1 inclusive)
  1: trees.MatchSpec.expr: 0,02% (1 inclusive)
  1: com.sun.tools.javac.parser.Scanner.nextToken: 0,02% (1 inclusive)
  1: java.lang.Class.getComponentType: 0,02% (1 inclusive)
    2: java.util.Arrays.copyOf: 0,02% (1 inclusive)
      3: java.util.ArrayList.toArray: 0,02% (1 inclusive)
        4: java.util.Collections$UnmodifiableCollection.toArray: 0,02% (1 inclusive)
  1: com.sun.tools.javac.jvm.Pool$Method.<init>: 0,02% (1 inclusive)
  1: java.security.PrivilegedActionException.<init>: 0,02% (1 inclusive)
  1: java.util.Collections$UnmodifiableCollection.toArray: 0,02% (1 inclusive)
  1: java.io.ObjectStreamField.getClassSignature: 0,02% (1 inclusive)
  1: sun.misc.PerfCounter.get: 0,02% (1 inclusive)
    2: sun.misc.PerfCounter.add: 0,02% (1 inclusive)
  1: com.sun.tools.javac.tree.JCTree$JCIdent.accept: 0,02% (1 inclusive)
  1: com.sun.tools.javac.comp.Attr.visitIdent: 0,02% (1 inclusive)
    2: com.sun.tools.javac.tree.JCTree$JCIdent.accept: 0,02% (1 inclusive)
  1: java.lang.ReflectiveOperationException.<init>: 0,02% (1 inclusive)
  1: sun.misc.Unsafe.getLong: 0,02% (1 inclusive)
    2: java.nio.DirectLongBufferU.get: 0,02% (1 inclusive)
      3: sun.misc.PerfCounter.get: 0,02% (1 inclusive)
        4: sun.misc.PerfCounter.add: 0,02% (1 inclusive)
  1: com.sun.tools.javac.comp.Enter.classEnv: 0,02% (1 inclusive)
  1: grammar.java._A_Lexical.keyword: 0,02% (1 inclusive)
    2: grammar.java._A_Lexical.<init>: 0,02% (1 inclusive)
      3: grammar.java._B_Expressions.<init>: 0,02% (1 inclusive)
  1: compiler.java.StringJavaFileObject.getCharContent: 0,02% (1 inclusive)
  1: com.sun.tools.javac.code.Types.implementation: 0,02% (1 inclusive)
  1: sun.launcher.LauncherHelper.checkAndLoadMain: 0,02% (1 inclusive)
  1: java.util.Collections.emptyEnumeration: 0,02% (1 inclusive)
    2: java.lang.ClassLoader.findResources: 0,02% (1 inclusive)
      3: java.lang.ClassLoader.getResources: 0,02% (1 inclusive)
        4: java.util.ServiceLoader$LazyIterator.hasNext: 0,02% (1 inclusive)
  1: java.io.FileDescriptor.<init>: 0,02% (1 inclusive)
    2: java.io.FileInputStream.<init>: 0,02% (1 inclusive)
      3: sun.misc.URLClassPath$FileLoader$1.getInputStream: 0,02% (1 inclusive)
  1: java.util.AbstractCollection.addAll: 0,02% (1 inclusive)
    2: java.util.HashSet.<init>: 0,02% (1 inclusive)
      3: sun.nio.fs.WindowsFileSystem.<clinit>: 0,02% (1 inclusive)
  1: com.sun.tools.javac.main.JavacOption$Option.<init>: 0,02% (1 inclusive)
    2: com.sun.tools.javac.main.RecognizedOptions$11.<init>: 0,02% (1 inclusive)
  1: com.sun.tools.javac.code.Symbol$MethodSymbol.overrides: 0,02% (1 inclusive)
    2: com.sun.tools.javac.code.Types$ImplementationCache.implementationInternal: 0,02% (1 inclusive)
      3: com.sun.tools.javac.code.Types$ImplementationCache.get: 0,02% (1 inclusive)
  1: com.sun.tools.javac.main.RecognizedOptions$11.<init>: 0,02% (1 inclusive)
  1: java.lang.Enum.compareTo: 0,02% (1 inclusive)
    2: com.sun.tools.javac.code.Source.allowVarargs: 0,02% (1 inclusive)
      3: com.sun.tools.javac.comp.Resolve.<init>: 0,02% (1 inclusive)
  1: sun.misc.PerfCounter.add: 0,02% (1 inclusive)
  1: java.nio.DirectLongBufferU.get: 0,02% (1 inclusive)
    2: sun.misc.PerfCounter.get: 0,02% (1 inclusive)
      3: sun.misc.PerfCounter.add: 0,02% (1 inclusive)
  1: com.sun.tools.javac.code.Types$ImplementationCache.implementationInternal: 0,02% (1 inclusive)
    2: com.sun.tools.javac.code.Types$ImplementationCache.get: 0,02% (1 inclusive)
  1: java.lang.StringCoding$StringDecoder.<init>: 0,02% (1 inclusive)
    2: java.lang.StringCoding.decode: 0,02% (1 inclusive)
  1: com.sun.tools.javac.code.Symtab.initType: 0,02% (1 inclusive)
  1: com.sun.tools.javac.util.Convert.utf2string: 0,02% (1 inclusive)
    2: com.sun.tools.javac.util.Name.toString: 0,02% (1 inclusive)
  1: com.sun.tools.javac.api.JavacTaskImpl.call: 0,02% (1 inclusive)
  1: java.net.URL.toExternalForm: 0,02% (1 inclusive)
  1: com.sun.tools.javac.jvm.ClassWriter.nameType: 0,02% (1 inclusive)
    2: com.sun.tools.javac.jvm.ClassWriter.writePool: 0,02% (1 inclusive)
  1: sun.nio.ch.Util.initDBBRConstructor: 0,02% (1 inclusive)
    2: sun.nio.ch.Util.newMappedByteBufferR: 0,02% (1 inclusive)
      3: sun.nio.ch.FileChannelImpl.map: 0,02% (1 inclusive)
        4: source.SourceFileText.<init>: 0,02% (1 inclusive)
  1: com.sun.tools.javac.jvm.Code.<init>: 0,02% (1 inclusive)
    2: com.sun.tools.javac.jvm.Gen.initCode: 0,02% (1 inclusive)
      3: com.sun.tools.javac.jvm.Gen.genMethod: 0,02% (1 inclusive)
  1: com.sun.tools.javac.jvm.ClassReader.readClassSymbol: 0,02% (1 inclusive)
  1: driver.CompilationDriver.dumpAndOrLoadClass: 0,02% (1 inclusive)
    2: driver.CompilationDriver.dumpAndOrLoadClasses: 0,02% (1 inclusive)
      3: driver.CompilationDriver.dumpAndOrLoadClasses: 0,02% (1 inclusive)
  1: com.sun.tools.javac.jvm.ClassWriter.assembleClassSig: 0,02% (1 inclusive)
  1: com.sun.tools.javac.main.JavaCompiler.compile: 0,02% (1 inclusive)
  1: sun.misc.Unsafe.getByte: 0,02% (1 inclusive)
    2: java.nio.DirectByteBuffer.get: 0,02% (1 inclusive)
      3: sun.nio.cs.UTF_8$Decoder.decodeBufferLoop: 0,02% (1 inclusive)
        4: sun.nio.cs.UTF_8$Decoder.decodeLoop: 0,02% (1 inclusive)
  1: compiler.util.Quoter.primitiveQuote: 0,02% (1 inclusive)
  1: java.lang.Character.toLowerCase: 0,02% (1 inclusive)
    2: java.util.regex.Pattern$SliceU.match: 0,02% (1 inclusive)
      3: java.util.regex.Pattern$Curly.match0: 0,02% (1 inclusive)
  1: trees.MatchSpec.rule: 0,02% (1 inclusive)
  1: com.sun.tools.javac.parser.Scanner.token: 0,02% (1 inclusive)
    2: com.sun.tools.javac.parser.JavacParser.arguments: 0,02% (1 inclusive)
      3: com.sun.tools.javac.parser.JavacParser.arguments: 0,02% (1 inclusive)
        4: com.sun.tools.javac.parser.JavacParser.term3: 0,02% (1 inclusive)
  1: java.util.regex.Pattern$CharPropertyNames$5.make: 0,02% (1 inclusive)
    2: java.util.regex.Pattern$CharPropertyNames.charPropertyFor: 0,02% (1 inclusive)
      3: java.util.regex.Pattern.charPropertyNodeFor: 0,02% (1 inclusive)
        4: java.util.regex.Pattern.family: 0,02% (1 inclusive)
  1: com.sun.tools.javac.code.Types$Subst.visitMethodType: 0,02% (1 inclusive)
  1: com.sun.tools.javac.code.Scope$3.iterator: 0,02% (1 inclusive)
    2: com.sun.tools.javac.code.Scope$CompoundScope$2$1.nextIterator: 0,02% (1 inclusive)
  1: grammar.java._B_Expressions.<init>: 0,02% (1 inclusive)
  1: parser.Match.getCaptures: 0,02% (1 inclusive)
    2: compiler.macros.ArraySliceMacro.expand: 0,02% (1 inclusive)
  1: java.util.regex.Pattern$GroupHead.match: 0,02% (1 inclusive)
  1: com.sun.tools.javac.util.Context.put: 0,02% (1 inclusive)
  1: java.lang.CharacterDataLatin1.toLowerCase: 0,02% (1 inclusive)
    2: java.lang.Character.toLowerCase: 0,02% (1 inclusive)
      3: java.util.regex.Pattern$SliceU.match: 0,02% (1 inclusive)
        4: java.util.regex.Pattern$Curly.match0: 0,02% (1 inclusive)
  1: java.util.ServiceLoader.iterator: 0,02% (1 inclusive)
    2: sun.reflect.NativeMethodAccessorImpl.invoke0: 0,02% (1 inclusive)
      3: sun.reflect.NativeMethodAccessorImpl.invoke: 0,02% (1 inclusive)
        4: sun.reflect.DelegatingMethodAccessorImpl.invoke: 0,02% (1 inclusive)
  1: java.lang.ref.Finalizer.runFinalizer: 0,02% (1 inclusive)
    2: java.lang.ref.Finalizer.access$100: 0,02% (1 inclusive)
      3: java.lang.ref.Finalizer$FinalizerThread.run: 0,02% (1 inclusive)
  1: com.sun.tools.javac.jvm.ClassReader$AttributeReader.<init>: 0,02% (1 inclusive)
    2: com.sun.tools.javac.jvm.ClassReader$2.<init>: 0,02% (1 inclusive)
      3: com.sun.tools.javac.jvm.ClassReader.initAttributeReaders: 0,02% (1 inclusive)
  1: com.sun.tools.javac.comp.AttrContext.dup: 0,02% (1 inclusive)
    2: com.sun.tools.javac.comp.Enter.classEnv: 0,02% (1 inclusive)
  1: com.sun.tools.javac.comp.Resolve.findMethod: 0,02% (1 inclusive)
  1: java.util.ArrayList.subList: 0,02% (1 inclusive)
    2: java.lang.String.split: 0,02% (1 inclusive)
      3: java.lang.String.split: 0,02% (1 inclusive)
        4: files.Package.<init>: 0,02% (1 inclusive)
  1: java.lang.Integer$IntegerCache.<clinit>: 0,02% (1 inclusive)
  1: sun.nio.cs.MS1252.<clinit>: 0,02% (1 inclusive)
    2: java.lang.Class.forName0: 0,02% (1 inclusive)
      3: java.lang.Class.forName: 0,02% (1 inclusive)
        4: sun.nio.cs.FastCharsetProvider.lookup: 0,02% (1 inclusive)
  1: java.nio.DirectByteBuffer.get: 0,02% (1 inclusive)
    2: sun.nio.cs.UTF_8$Decoder.decodeBufferLoop: 0,02% (1 inclusive)
      3: sun.nio.cs.UTF_8$Decoder.decodeLoop: 0,02% (1 inclusive)
  1: com.sun.tools.javac.comp.Attr.visitTypeArray: 0,02% (1 inclusive)
  1: java.lang.ClassLoader.findResources: 0,02% (1 inclusive)
    2: java.lang.ClassLoader.getResources: 0,02% (1 inclusive)
      3: java.util.ServiceLoader$LazyIterator.hasNext: 0,02% (1 inclusive)
  1: java.nio.CharBuffer.wrap: 0,02% (1 inclusive)
    2: compiler.java.StringJavaFileObject.getCharContent: 0,02% (1 inclusive)
      3: compiler.java.StringJavaFileObject.getCharContent: 0,02% (1 inclusive)
  1: com.sun.tools.javac.code.Types$ImplementationCache$Entry.<init>: 0,02% (1 inclusive)
    2: com.sun.tools.javac.code.Types$ImplementationCache.get: 0,02% (1 inclusive)
      3: com.sun.tools.javac.code.Types.implementation: 0,02% (1 inclusive)
  1: java.io.RandomAccessFile.close0: 0,02% (1 inclusive)
    2: java.io.RandomAccessFile.close: 0,02% (1 inclusive)
      3: com.sun.tools.javac.file.ZipFileIndex.closeFile: 0,02% (1 inclusive)
        4: com.sun.tools.javac.file.ZipFileIndex.read: 0,02% (1 inclusive)
  1: com.sun.tools.javac.util.ByteBuffer.copy: 0,02% (1 inclusive)
    2: com.sun.tools.javac.util.ByteBuffer.appendBytes: 0,02% (1 inclusive)
      3: com.sun.tools.javac.util.ByteBuffer.appendBytes: 0,02% (1 inclusive)
        4: com.sun.tools.javac.jvm.ClassWriter.assembleClassSig: 0,02% (1 inclusive)
  1: sun.nio.cs.UTF_8$Decoder.decodeBufferLoop: 0,02% (1 inclusive)
    2: sun.nio.cs.UTF_8$Decoder.decodeLoop: 0,02% (1 inclusive)
  1: java.lang.ref.WeakReference.<init>: 0,02% (1 inclusive)
    2: java.util.WeakHashMap$Entry.<init>: 0,02% (1 inclusive)
  1: driver.DependencyResolver.<init>: 0,02% (1 inclusive)
    2: driver.DependencyResolver.resolve: 0,02% (1 inclusive)
  1: com.sun.tools.javac.code.Type$ArrayType.<init>: 0,02% (1 inclusive)
    2: com.sun.tools.javac.comp.Attr.visitTypeArray: 0,02% (1 inclusive)
  1: com.sun.tools.javac.code.Symbol$PackageSymbol.<init>: 0,02% (1 inclusive)
  1: com.sun.tools.javac.comp.Check.checkDeprecated: 0,02% (1 inclusive)
    2: com.sun.tools.javac.comp.Attr.checkId: 0,02% (1 inclusive)
      3: com.sun.tools.javac.comp.Attr.visitIdent: 0,02% (1 inclusive)
        4: com.sun.tools.javac.tree.JCTree$JCIdent.accept: 0,02% (1 inclusive)
  1: java.security.SecureClassLoader.getPermissions: 0,02% (1 inclusive)
    2: java.net.URLClassLoader.getPermissions: 0,02% (1 inclusive)
      3: sun.misc.Launcher$AppClassLoader.getPermissions: 0,02% (1 inclusive)
        4: java.security.SecureClassLoader.getProtectionDomain: 0,02% (1 inclusive)
  1: com.sun.tools.javac.code.Symbol$DelegatedSymbol.<init>: 0,02% (1 inclusive)
    2: com.sun.tools.javac.jvm.Pool$Method.<init>: 0,02% (1 inclusive)
  1: com.sun.tools.javac.jvm.Items$LocalItem.<init>: 0,02% (1 inclusive)
    2: com.sun.tools.javac.jvm.Items.makeLocalItem: 0,02% (1 inclusive)
  1: com.sun.tools.javac.comp.Lower$1.visitMethodDef: 0,02% (1 inclusive)
    2: com.sun.tools.javac.tree.JCTree$JCMethodDecl.accept: 0,02% (1 inclusive)
      3: com.sun.tools.javac.tree.TreeScanner.scan: 0,02% (1 inclusive)
  1: com.sun.tools.javac.main.JavaCompiler.genCode: 0,02% (1 inclusive)
  1: com.sun.tools.javac.jvm.ClassReader.instance: 0,02% (1 inclusive)
    2: com.sun.tools.javac.main.JavaCompiler.<init>: 0,02% (1 inclusive)
      3: com.sun.tools.javac.main.JavaCompiler.instance: 0,02% (1 inclusive)
  1: java.util.HashMap.values: 0,02% (1 inclusive)
    2: com.sun.tools.javac.comp.Lower.translateTopLevelClass: 0,02% (1 inclusive)
      3: com.sun.tools.javac.main.JavaCompiler.desugar: 0,02% (1 inclusive)
        4: com.sun.tools.javac.main.JavaCompiler.desugar: 0,02% (1 inclusive)
  1: com.sun.tools.javac.jvm.ClassFile.<init>: 0,02% (1 inclusive)
    2: com.sun.tools.javac.jvm.ClassWriter.<init>: 0,02% (1 inclusive)
      3: com.sun.tools.javac.jvm.ClassWriter.instance: 0,02% (1 inclusive)
  1: sun.nio.fs.WindowsFileAttributes.fromFindData: 0,02% (1 inclusive)
    2: sun.nio.fs.WindowsDirectoryStream$WindowsDirectoryIterator.readNextEntry: 0,02% (1 inclusive)
  1: source.SourceStream.<init>: 0,02% (1 inclusive)
    2: parser.Matcher.<init>: 0,02% (1 inclusive)
      3: compiler.util.Quoter.primitiveQuote: 0,02% (1 inclusive)
  1: com.sun.tools.javac.jvm.ClassWriter.<init>: 0,02% (1 inclusive)
    2: com.sun.tools.javac.jvm.ClassWriter.instance: 0,02% (1 inclusive)
  1: sun.misc.FloatingDecimal.parseHexString: 0,02% (1 inclusive)
    2: sun.misc.FloatingDecimal.readJavaFormatString: 0,02% (1 inclusive)
      3: java.lang.Float.valueOf: 0,02% (1 inclusive)
        4: com.sun.tools.javac.parser.Scanner.hexFloatsWork: 0,02% (1 inclusive)
  1: com.sun.tools.javac.jvm.ClassReader.readPool: 0,02% (1 inclusive)
    2: com.sun.tools.javac.jvm.ClassReader.readClassSymbol: 0,02% (1 inclusive)
  1: java.util.jar.JarFile$JarFileEntry.<init>: 0,02% (1 inclusive)
  1: driver.RequiresParser.parseRequires: 0,02% (1 inclusive)
  1: grammar.java._A_Lexical.<init>: 0,02% (1 inclusive)
    2: grammar.java._B_Expressions.<init>: 0,02% (1 inclusive)
  1: com.sun.tools.javac.util.SharedNameTable.<init>: 0,02% (1 inclusive)
    2: com.sun.tools.javac.util.Names.createTable: 0,02% (1 inclusive)
      3: com.sun.tools.javac.util.Names.<init>: 0,02% (1 inclusive)
  1: java.io.DataInputStream.readFully: 0,02% (1 inclusive)
  1: java.net.URL.<init>: 0,02% (1 inclusive)
    2: sun.misc.URLClassPath$FileLoader.getResource: 0,02% (1 inclusive)
  1: com.sun.tools.javac.tree.JCTree$JCMethodDecl.accept: 0,02% (1 inclusive)
    2: com.sun.tools.javac.tree.TreeScanner.scan: 0,02% (1 inclusive)
  1: com.sun.tools.javac.jvm.ClassFile$NameAndType.<init>: 0,02% (1 inclusive)
    2: com.sun.tools.javac.jvm.ClassWriter.nameType: 0,02% (1 inclusive)
      3: com.sun.tools.javac.jvm.ClassWriter.writePool: 0,02% (1 inclusive)
  1: com.sun.tools.javac.jvm.Items$Item.<init>: 0,02% (1 inclusive)
    2: com.sun.tools.javac.jvm.Items$LocalItem.<init>: 0,02% (1 inclusive)
      3: com.sun.tools.javac.jvm.Items.makeLocalItem: 0,02% (1 inclusive)
  1: com.sun.tools.javac.main.Main.compile: 0,02% (1 inclusive)
    2: com.sun.tools.javac.api.JavacTaskImpl.call: 0,02% (1 inclusive)
  1: sun.nio.fs.NativeBuffers.allocNativeBuffer: 0,02% (1 inclusive)
    2: sun.nio.fs.NativeBuffers.getNativeBuffer: 0,02% (1 inclusive)
      3: sun.nio.fs.WindowsFileAttributes.get: 0,02% (1 inclusive)
  1: java.util.Vector.grow: 0,02% (1 inclusive)
    2: java.util.Vector.ensureCapacityHelper: 0,02% (1 inclusive)
  1: com.sun.tools.javac.parser.JavacParser.arguments: 0,02% (1 inclusive)
    2: com.sun.tools.javac.parser.JavacParser.term3: 0,02% (1 inclusive)
  1: compiler.PostExpansionTransformer.transform: 0,02% (1 inclusive)
    2: compiler.MatchTreeTransformer.transformChilds: 0,02% (1 inclusive)
  1: driver.CompilationDriver.dumpAndOrLoadClasses: 0,02% (1 inclusive)
  1: java.util.regex.Pattern$Curly.match0: 0,02% (1 inclusive)
  1: sun.misc.FloatingDecimal.readJavaFormatString: 0,02% (1 inclusive)
    2: java.lang.Float.valueOf: 0,02% (1 inclusive)
      3: com.sun.tools.javac.parser.Scanner.hexFloatsWork: 0,02% (1 inclusive)
  1: com.sun.tools.javac.code.Source.<clinit>: 0,02% (1 inclusive)
    2: com.sun.tools.javac.main.Main.processArgs: 0,02% (1 inclusive)
      3: com.sun.tools.javac.main.Main.compile: 0,02% (1 inclusive)
        4: com.sun.tools.javac.api.JavacTaskImpl.call: 0,02% (1 inclusive)
  1: com.sun.tools.javac.jvm.Items.makeLocalItem: 0,02% (1 inclusive)
  1: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.<init>: 0,02% (1 inclusive)
    2: com.sun.tools.javac.file.ZipFileIndex.checkIndex: 0,02% (1 inclusive)
      3: com.sun.tools.javac.file.ZipFileIndex.<init>: 0,02% (1 inclusive)
  1: compiler.MacroCompiler.<init>: 0,02% (1 inclusive)
    2: grammar.java.CallbacksMacroDefinition.<clinit>: 0,02% (1 inclusive)
      3: grammar.java._E_MacroDefinitions.initialize: 0,02% (1 inclusive)
        4: sun.reflect.NativeMethodAccessorImpl.invoke0: 0,02% (1 inclusive)
  1: com.sun.tools.javac.comp.Resolve$InapplicableMethodException.setMessage: 0,02% (1 inclusive)
    2: com.sun.tools.javac.comp.Resolve.checkRawArgumentsAcceptable: 0,02% (1 inclusive)
      3: com.sun.tools.javac.comp.Resolve.rawInstantiate: 0,02% (1 inclusive)
        4: com.sun.tools.javac.comp.Resolve.selectBest: 0,02% (1 inclusive)
  1: sun.nio.ch.Util.newMappedByteBufferR: 0,02% (1 inclusive)
    2: sun.nio.ch.FileChannelImpl.map: 0,02% (1 inclusive)
      3: source.SourceFileText.<init>: 0,02% (1 inclusive)
  1: driver.DependencyResolver.resolve: 0,02% (1 inclusive)
  1: com.sun.tools.javac.jvm.Code.emitStackMapFrame: 0,02% (1 inclusive)
    2: com.sun.tools.javac.jvm.Code.emitStackMap: 0,02% (1 inclusive)
      3: com.sun.tools.javac.jvm.Code.emitop: 0,02% (1 inclusive)
        4: com.sun.tools.javac.jvm.Code.emitop1w: 0,02% (1 inclusive)
  1: sun.launcher.LauncherHelper.getMainMethod: 0,02% (1 inclusive)
    2: sun.launcher.LauncherHelper.checkAndLoadMain: 0,02% (1 inclusive)
  1: grammar.Expression.<init>: 0,02% (1 inclusive)
    2: grammar.Expression$CharClass.<init>: 0,02% (1 inclusive)
      3: grammar.GrammarDSL.chars: 0,02% (1 inclusive)
  1: java.nio.file.FileTreeWalker.<init>: 0,02% (1 inclusive)
    2: java.nio.file.Files.walkFileTree: 0,02% (1 inclusive)
      3: java.nio.file.Files.walkFileTree: 0,02% (1 inclusive)
        4: util.FileUtils.glob: 0,02% (1 inclusive)
  1: com.sun.tools.javac.comp.Attr.checkId: 0,02% (1 inclusive)
    2: com.sun.tools.javac.comp.Attr.visitIdent: 0,02% (1 inclusive)
      3: com.sun.tools.javac.tree.JCTree$JCIdent.accept: 0,02% (1 inclusive)
  1: java.lang.ref.Reference.<init>: 0,02% (1 inclusive)
    2: java.lang.ref.WeakReference.<init>: 0,02% (1 inclusive)
      3: java.util.WeakHashMap$Entry.<init>: 0,02% (1 inclusive)
  1: grammar.java._E_MacroDefinitions.initialize: 0,02% (1 inclusive)
    2: sun.reflect.NativeMethodAccessorImpl.invoke0: 0,02% (1 inclusive)
  1: com.sun.tools.javac.jvm.Code.emitop1w: 0,02% (1 inclusive)
  1: grammar.Grammar.<init>: 0,02% (1 inclusive)
    2: driver.Context.<clinit>: 0,02% (1 inclusive)
      3: driver.DependencyResolver.<init>: 0,02% (1 inclusive)
        4: driver.DependencyResolver.resolve: 0,02% (1 inclusive)
  1: java.util.ServiceLoader$LazyIterator.hasNext: 0,02% (1 inclusive)
  1: java.nio.channels.spi.AbstractInterruptibleChannel.begin: 0,02% (1 inclusive)
    2: sun.nio.ch.FileChannelImpl.size: 0,02% (1 inclusive)
      3: source.SourceFileText.<init>: 0,02% (1 inclusive)
        4: source.SourceFileText.<init>: 0,02% (1 inclusive)
  1: java.util.regex.Pattern$BmpCharProperty.match: 0,02% (1 inclusive)
    2: java.util.regex.Pattern$Curly.match: 0,02% (1 inclusive)
      3: java.util.regex.Pattern$GroupHead.match: 0,02% (1 inclusive)
  1: java.nio.DirectByteBuffer.asLongBuffer: 0,02% (1 inclusive)
    2: sun.misc.PerfCounter.<init>: 0,02% (1 inclusive)
      3: sun.misc.PerfCounter.newPerfCounter: 0,02% (1 inclusive)
        4: sun.misc.PerfCounter$CoreCounters.<clinit>: 0,02% (1 inclusive)
  1: com.sun.tools.javac.parser.ParserFactory.instance: 0,02% (1 inclusive)
  1: com.sun.tools.javac.code.Symtab.instance: 0,02% (1 inclusive)
    2: com.sun.tools.javac.jvm.ClassReader.<init>: 0,02% (1 inclusive)
  1: java.util.zip.ZipFile.access$1100: 0,02% (1 inclusive)
    2: java.util.zip.ZipFile$ZipFileInputStream.<init>: 0,02% (1 inclusive)
      3: java.util.zip.ZipFile.getInputStream: 0,02% (1 inclusive)
  1: com.sun.tools.javac.jvm.Gen.genClass: 0,02% (1 inclusive)
    2: com.sun.tools.javac.main.JavaCompiler.genCode: 0,02% (1 inclusive)
  1: com.sun.tools.javac.file.ZipFileIndex.closeFile: 0,02% (1 inclusive)
    2: com.sun.tools.javac.file.ZipFileIndex.read: 0,02% (1 inclusive)
  1: files.Package.<init>: 0,02% (1 inclusive)
  1: sun.nio.fs.NativeBuffer.<init>: 0,02% (1 inclusive)
    2: sun.nio.fs.NativeBuffers.allocNativeBuffer: 0,02% (1 inclusive)
      3: sun.nio.fs.NativeBuffers.getNativeBuffer: 0,02% (1 inclusive)
        4: sun.nio.fs.WindowsFileAttributes.get: 0,02% (1 inclusive)
  1: java.lang.ref.Finalizer.invokeFinalizeMethod: 0,02% (1 inclusive)
    2: java.lang.ref.Finalizer.runFinalizer: 0,02% (1 inclusive)
      3: java.lang.ref.Finalizer.access$100: 0,02% (1 inclusive)
        4: java.lang.ref.Finalizer$FinalizerThread.run: 0,02% (1 inclusive)
  1: java.util.regex.Pattern$CharPropertyNames$2.make: 0,02% (1 inclusive)
    2: java.util.regex.Pattern$CharPropertyNames.charPropertyFor: 0,02% (1 inclusive)
  1: java.util.regex.Pattern.rangeFor: 0,02% (1 inclusive)
    2: java.util.regex.Pattern.access$600: 0,02% (1 inclusive)
      3: java.util.regex.Pattern$CharPropertyNames$2.make: 0,02% (1 inclusive)
        4: java.util.regex.Pattern$CharPropertyNames.charPropertyFor: 0,02% (1 inclusive)
  1: java.util.regex.Pattern$Curly.match: 0,02% (1 inclusive)
    2: java.util.regex.Pattern$GroupHead.match: 0,02% (1 inclusive)
  1: com.sun.tools.javac.jvm.ClassWriter.writePool: 0,02% (1 inclusive)
  1: java.lang.Object.hashCode: 0,02% (1 inclusive)
    2: java.util.HashMap.put: 0,02% (1 inclusive)
      3: com.sun.tools.javac.util.Context.put: 0,02% (1 inclusive)
        4: com.sun.tools.javac.util.Context.put: 0,02% (1 inclusive)
  1: java.lang.Shutdown.<clinit>: 0,02% (1 inclusive)
  1: com.sun.tools.javac.parser.JavacParser.term2Rest: 0,02% (1 inclusive)
    2: com.sun.tools.javac.parser.JavacParser.term2: 0,02% (1 inclusive)
      3: com.sun.tools.javac.parser.JavacParser.term1: 0,02% (1 inclusive)
  1: java.util.Collections.unmodifiableSet: 0,02% (1 inclusive)
    2: sun.nio.fs.WindowsFileSystem.<clinit>: 0,02% (1 inclusive)
      3: sun.nio.fs.WindowsFileSystemProvider.<init>: 0,02% (1 inclusive)
        4: sun.nio.fs.DefaultFileSystemProvider.create: 0,02% (1 inclusive)
  1: java.io.RandomAccessFile.close: 0,02% (1 inclusive)
    2: com.sun.tools.javac.file.ZipFileIndex.closeFile: 0,02% (1 inclusive)
      3: com.sun.tools.javac.file.ZipFileIndex.read: 0,02% (1 inclusive)
  1: sun.reflect.DelegatingMethodAccessorImpl.invoke: 0,02% (1 inclusive)
  1: com.sun.tools.javac.jvm.ClassFile.internalize: 0,02% (1 inclusive)
    2: com.sun.tools.javac.jvm.ClassReader.readClassOrType: 0,02% (1 inclusive)
      3: com.sun.tools.javac.jvm.ClassReader.readPool: 0,02% (1 inclusive)
        4: com.sun.tools.javac.jvm.ClassReader.readClassSymbol: 0,02% (1 inclusive)
  1: com.sun.tools.javac.code.Types$TypeRelation.<init>: 0,02% (1 inclusive)
  1: com.sun.tools.javac.comp.Resolve.<init>: 0,02% (1 inclusive)
  1: sun.reflect.NativeMethodAccessorImpl.invoke: 0,02% (1 inclusive)
    2: sun.reflect.DelegatingMethodAccessorImpl.invoke: 0,02% (1 inclusive)
  1: com.sun.tools.javac.jvm.Code.emitop: 0,02% (1 inclusive)
    2: com.sun.tools.javac.jvm.Code.emitop1w: 0,02% (1 inclusive)
  1: sun.misc.URLClassPath$FileLoader.findResource: 0,02% (1 inclusive)
  1: com.sun.tools.javac.comp.Resolve.findFun: 0,02% (1 inclusive)
  1: com.sun.tools.javac.code.Symtab.enterClass: 0,02% (1 inclusive)
  1: com.sun.tools.javac.jvm.Items.<init>: 0,02% (1 inclusive)
    2: com.sun.tools.javac.jvm.Gen.initCode: 0,02% (1 inclusive)
      3: com.sun.tools.javac.jvm.Gen.genMethod: 0,02% (1 inclusive)
  1: com.sun.tools.javac.main.Main.processArgs: 0,02% (1 inclusive)
    2: com.sun.tools.javac.main.Main.compile: 0,02% (1 inclusive)
      3: com.sun.tools.javac.api.JavacTaskImpl.call: 0,02% (1 inclusive)
  1: sun.misc.URLClassPath.getResources: 0,02% (1 inclusive)
    2: java.lang.ClassLoader.getBootstrapResources: 0,02% (1 inclusive)
      3: java.lang.ClassLoader.getResources: 0,02% (1 inclusive)
  1: com.sun.tools.javac.util.Name.toString: 0,02% (1 inclusive)
  1: java.util.zip.ZipFile.getEntryFlag: 0,02% (1 inclusive)
    2: java.util.zip.ZipFile.getZipEntry: 0,02% (1 inclusive)
      3: java.util.zip.ZipFile.getEntry: 0,02% (1 inclusive)
        4: java.util.jar.JarFile.getEntry: 0,02% (1 inclusive)
  1: com.sun.tools.javac.tree.TreeScanner.scan: 0,02% (1 inclusive)
  1: sun.nio.fs.NativeBuffers.getNativeBuffer: 0,02% (1 inclusive)
    2: sun.nio.fs.WindowsFileAttributes.get: 0,02% (1 inclusive)
  1: compiler.java.CollectingJavaFileManager.list: 0,02% (1 inclusive)
  1: sun.nio.fs.NativeBuffers.releaseNativeBuffer: 0,02% (1 inclusive)
    2: sun.nio.fs.NativeBuffer.release: 0,02% (1 inclusive)
  1: com.sun.tools.javac.jvm.ClassReader.initAttributeReaders: 0,02% (1 inclusive)
  1: compiler.macros.ArraySliceMacro.expand: 0,02% (1 inclusive)
  1: java.lang.String.split: 0,02% (1 inclusive)
    2: files.Package.<init>: 0,02% (1 inclusive)
  1: sun.nio.cs.UTF_8$Decoder.decodeLoop: 0,02% (1 inclusive)
  1: com.sun.tools.javac.util.ByteBuffer.appendBytes: 0,02% (1 inclusive)
    2: com.sun.tools.javac.jvm.ClassWriter.assembleClassSig: 0,02% (1 inclusive)
  1: com.sun.tools.javac.code.Symtab.<init>: 0,02% (1 inclusive)
    2: com.sun.tools.javac.code.Symtab.instance: 0,02% (1 inclusive)
      3: com.sun.tools.javac.jvm.ClassReader.<init>: 0,02% (1 inclusive)
  1: com.sun.tools.javac.parser.Scanner.hexFloatsWork: 0,02% (1 inclusive)
  1: com.sun.tools.javac.code.Source.allowVarargs: 0,02% (1 inclusive)
    2: com.sun.tools.javac.comp.Resolve.<init>: 0,02% (1 inclusive)
  1: java.lang.Thread.currentThread: 0,02% (1 inclusive)
    2: java.lang.ThreadLocal.get: 0,02% (1 inclusive)
      3: sun.nio.fs.NativeBuffers.releaseNativeBuffer: 0,02% (1 inclusive)
        4: sun.nio.fs.NativeBuffer.release: 0,02% (1 inclusive)
  1: com.sun.tools.javac.util.ListBuffer.clear: 0,02% (1 inclusive)

Method Times by Line Number (times exclusive): 5200 ticks
  1: java.lang.Object.<init>: 43,75% (2275 exclusive)
    2: (Object.java:37): 43,75% (2275 exclusive)
  1: java.util.zip.ZipFile.read: 8,85% (460 exclusive)
    2: (ZipFile.java:Unknown line): 8,85% (460 exclusive)
  1: java.util.ArrayList.<init>: 8,31% (432 exclusive)
    2: (ArrayList.java:132): 8,29% (431 exclusive)
    2: (ArrayList.java:154): 0,02% (1 exclusive)
    2: (ArrayList.java:128): 0% (0 exclusive)
    2: (ArrayList.java:139): 0% (0 exclusive)
    2: (ArrayList.java:150): 0% (0 exclusive)
  1: java.io.WinNTFileSystem.getBooleanAttributes: 6,25% (325 exclusive)
    2: (WinNTFileSystem.java:Unknown line): 6,25% (325 exclusive)
  1: java.io.FileInputStream.open: 5,42% (282 exclusive)
    2: (FileInputStream.java:Unknown line): 5,42% (282 exclusive)
  1: java.lang.ClassLoader.findBootstrapClass: 4,04% (210 exclusive)
    2: (ClassLoader.java:Unknown line): 4,04% (210 exclusive)
  1: java.lang.Character.toChars: 4% (208 exclusive)
    2: (Character.java:4976): 4% (208 exclusive)
  1: java.util.zip.ZipFile.getEntry: 1,67% (87 exclusive)
    2: (ZipFile.java:Unknown line): 1,67% (87 exclusive)
    2: (ZipFile.java:304): 0% (0 exclusive)
    2: (ZipFile.java:306): 0% (0 exclusive)
  1: java.io.RandomAccessFile.readBytes: 1,56% (81 exclusive)
    2: (RandomAccessFile.java:Unknown line): 1,56% (81 exclusive)
  1: java.util.zip.ZipFile.open: 1,17% (61 exclusive)
    2: (ZipFile.java:Unknown line): 1,17% (61 exclusive)
  1: java.util.Arrays.copyOf: 0,87% (45 exclusive)
    2: (Arrays.java:2367): 0,54% (28 exclusive)
    2: (Arrays.java:2245): 0,25% (13 exclusive)
    2: (Arrays.java:2271): 0,08% (4 exclusive)
    2: (Arrays.java:2219): 0% (0 exclusive)
  1: java.io.WinNTFileSystem.getLength: 0,81% (42 exclusive)
    2: (WinNTFileSystem.java:Unknown line): 0,81% (42 exclusive)
  1: java.util.Arrays.copyOfRange: 0,62% (32 exclusive)
    2: (Arrays.java:2694): 0,62% (32 exclusive)
  1: java.io.RandomAccessFile.open: 0,5% (26 exclusive)
    2: (RandomAccessFile.java:Unknown line): 0,5% (26 exclusive)
  1: java.io.WinNTFileSystem.list: 0,48% (25 exclusive)
    2: (WinNTFileSystem.java:Unknown line): 0,48% (25 exclusive)
  1: java.lang.String.replace: 0,42% (22 exclusive)
    2: (String.java:2069): 0,42% (22 exclusive)
    2: (String.java:2078): 0% (0 exclusive)
  1: java.util.zip.ZipFile.<init>: 0,38% (20 exclusive)
    2: (ZipFile.java:464): 0,19% (10 exclusive)
    2: (ZipFile.java:212): 0,12% (6 exclusive)
    2: (ZipFile.java:144): 0,08% (4 exclusive)
    2: (ZipFile.java:214): 0% (0 exclusive)
  1: java.lang.AbstractStringBuilder.<init>: 0,38% (20 exclusive)
    2: (AbstractStringBuilder.java:64): 0,38% (20 exclusive)
    2: (AbstractStringBuilder.java:63): 0% (0 exclusive)
  1: java.io.FileOutputStream.open: 0,31% (16 exclusive)
    2: (FileOutputStream.java:Unknown line): 0,31% (16 exclusive)
  1: java.lang.Class.forName0: 0,27% (14 exclusive)
    2: (Class.java:Unknown line): 0,27% (14 exclusive)
  1: java.lang.ClassLoader.defineClass1: 0,27% (14 exclusive)
    2: (ClassLoader.java:Unknown line): 0,27% (14 exclusive)
  1: java.io.FileInputStream.getChannel: 0,27% (14 exclusive)
    2: (FileInputStream.java:364): 0,27% (14 exclusive)
  1: java.io.WinNTFileSystem.canonicalize0: 0,25% (13 exclusive)
    2: (WinNTFileSystem.java:Unknown line): 0,25% (13 exclusive)
  1: java.lang.StringCoding$StringDecoder.decode: 0,25% (13 exclusive)
    2: (StringCoding.java:149): 0,25% (13 exclusive)
  1: java.util.jar.JarVerifier.<init>: 0,23% (12 exclusive)
    2: (JarVerifier.java:538): 0,1% (5 exclusive)
    2: (JarVerifier.java:767): 0,1% (5 exclusive)
    2: (JarVerifier.java:101): 0,04% (2 exclusive)
  1: java.util.regex.Pattern.sequence: 0,23% (12 exclusive)
    2: (Pattern.java:2075): 0,19% (10 exclusive)
    2: (Pattern.java:2057): 0,04% (2 exclusive)
    2: (Pattern.java:2018): 0% (0 exclusive)
    2: (Pattern.java:2043): 0% (0 exclusive)
    2: (Pattern.java:2046): 0% (0 exclusive)
  1: sun.misc.URLClassPath$JarLoader.getJarFile: 0,17% (9 exclusive)
    2: (URLClassPath.java:706): 0,17% (9 exclusive)
    2: (URLClassPath.java:703): 0% (0 exclusive)
  1: java.lang.String.toCharArray: 0,17% (9 exclusive)
    2: (String.java:2801): 0,17% (9 exclusive)
  1: com.sun.tools.javac.util.Name.append: 0,17% (9 exclusive)
    2: (Name.java:88): 0,17% (9 exclusive)
  1: java.io.WinNTFileSystem.createFileExclusively: 0,17% (9 exclusive)
    2: (WinNTFileSystem.java:Unknown line): 0,17% (9 exclusive)
  1: sun.nio.fs.WindowsNativeDispatcher.FindFirstFile0: 0,15% (8 exclusive)
    2: (WindowsNativeDispatcher.java:Unknown line): 0,15% (8 exclusive)
  1: java.util.jar.JarFile.hasClassPathAttribute: 0,15% (8 exclusive)
    2: (JarFile.java:483): 0,15% (8 exclusive)
  1: java.util.HashMap.<init>: 0,15% (8 exclusive)
    2: (HashMap.java:226): 0,15% (8 exclusive)
    2: (HashMap.java:187): 0% (0 exclusive)
    2: (HashMap.java:216): 0% (0 exclusive)
    2: (HashMap.java:223): 0% (0 exclusive)
  1: sun.nio.ch.FileChannelImpl.<init>: 0,15% (8 exclusive)
    2: (FileChannelImpl.java:73): 0,1% (5 exclusive)
    2: (FileChannelImpl.java:60): 0,06% (3 exclusive)
  1: java.util.regex.Pattern$CharPropertyNames.<clinit>: 0,13% (7 exclusive)
    2: (Pattern.java:5640): 0,08% (4 exclusive)
    2: (Pattern.java:5592): 0,02% (1 exclusive)
    2: (Pattern.java:5601): 0,02% (1 exclusive)
    2: (Pattern.java:5631): 0,02% (1 exclusive)
  1: sun.security.util.ManifestEntryVerifier.<init>: 0,13% (7 exclusive)
    2: (ManifestEntryVerifier.java:84): 0,13% (7 exclusive)
  1: sun.net.www.protocol.file.Handler.createFileURLConnection: 0,13% (7 exclusive)
    2: (Handler.java:130): 0,13% (7 exclusive)
  1: sun.misc.Launcher.getBootstrapClassPath: 0,13% (7 exclusive)
    2: (Launcher.java:393): 0,13% (7 exclusive)
  1: java.lang.ClassLoader$NativeLibrary.load: 0,13% (7 exclusive)
    2: (ClassLoader.java:Unknown line): 0,13% (7 exclusive)
  1: sun.nio.cs.FastCharsetProvider.lookup: 0,12% (6 exclusive)
    2: (FastCharsetProvider.java:112): 0,12% (6 exclusive)
    2: (FastCharsetProvider.java:119): 0% (0 exclusive)
  1: java.util.zip.ZipFile.getInputStream: 0,12% (6 exclusive)
    2: (ZipFile.java:354): 0,06% (3 exclusive)
    2: (ZipFile.java:368): 0,06% (3 exclusive)
    2: (ZipFile.java:367): 0% (0 exclusive)
  1: sun.nio.fs.WindowsFileSystem.getPathMatcher: 0,12% (6 exclusive)
    2: (WindowsFileSystem.java:305): 0,1% (5 exclusive)
    2: (WindowsFileSystem.java:294): 0,02% (1 exclusive)
  1: java.io.FileOutputStream.writeBytes: 0,12% (6 exclusive)
    2: (FileOutputStream.java:Unknown line): 0,12% (6 exclusive)
  1: java.util.regex.Pattern.compile: 0,12% (6 exclusive)
    2: (Pattern.java:1678): 0,08% (4 exclusive)
    2: (Pattern.java:1636): 0,02% (1 exclusive)
    2: (Pattern.java:1682): 0,02% (1 exclusive)
    2: (Pattern.java:1022): 0% (0 exclusive)
    2: (Pattern.java:1665): 0% (0 exclusive)
  1: sun.misc.URLClassPath$JarLoader.ensureOpen: 0,12% (6 exclusive)
    2: (URLClassPath.java:659): 0,12% (6 exclusive)
  1: sun.reflect.ReflectionFactory.newFieldAccessor: 0,12% (6 exclusive)
    2: (ReflectionFactory.java:140): 0,12% (6 exclusive)
  1: sun.misc.URLClassPath$JarLoader.parseExtensionsDependencies: 0,1% (5 exclusive)
    2: (URLClassPath.java:980): 0,1% (5 exclusive)
  1: javax.tools.ToolProvider.findSystemToolClass: 0,1% (5 exclusive)
    2: (ToolProvider.java:177): 0,1% (5 exclusive)
    2: (ToolProvider.java:190): 0% (0 exclusive)
    2: (ToolProvider.java:196): 0% (0 exclusive)
  1: java.util.Collections.synchronizedMap: 0,1% (5 exclusive)
    2: (Collections.java:1993): 0,1% (5 exclusive)
  1: java.net.URLClassLoader$6.run: 0,1% (5 exclusive)
    2: (URLClassLoader.java:744): 0,1% (5 exclusive)
    2: (URLClassLoader.java:742): 0% (0 exclusive)
  1: sun.nio.fs.WindowsFileAttributes.get: 0,1% (5 exclusive)
    2: (WindowsFileAttributes.java:309): 0,06% (3 exclusive)
    2: (WindowsFileAttributes.java:305): 0,04% (2 exclusive)
  1: java.util.Vector.<init>: 0,1% (5 exclusive)
    2: (Vector.java:131): 0,1% (5 exclusive)
    2: (Vector.java:144): 0% (0 exclusive)
    2: (Vector.java:153): 0% (0 exclusive)
  1: java.util.zip.ZipFile.getInflater: 0,1% (5 exclusive)
    2: (ZipFile.java:448): 0,1% (5 exclusive)
  1: java.util.ResourceBundle$Control$CandidateListCache.getDefaultList: 0,1% (5 exclusive)
    2: (ResourceBundle.java:2384): 0,1% (5 exclusive)
    2: (ResourceBundle.java:2392): 0% (0 exclusive)
  1: java.io.FileOutputStream.close0: 0,08% (4 exclusive)
    2: (FileOutputStream.java:Unknown line): 0,08% (4 exclusive)
  1: java.net.URLClassLoader.newInstance: 0,08% (4 exclusive)
    2: (URLClassLoader.java:741): 0,08% (4 exclusive)
  1: java.nio.file.Files.walkFileTree: 0,08% (4 exclusive)
    2: (Files.java:2618): 0,08% (4 exclusive)
    2: (Files.java:2585): 0% (0 exclusive)
  1: java.util.EnumSet.noneOf: 0,08% (4 exclusive)
    2: (EnumSet.java:113): 0,08% (4 exclusive)
  1: java.util.Collections.unmodifiableMap: 0,08% (4 exclusive)
    2: (Collections.java:1318): 0,08% (4 exclusive)
  1: java.io.Win32FileSystem.resolve: 0,08% (4 exclusive)
    2: (Win32FileSystem.java:254): 0,08% (4 exclusive)
    2: (Win32FileSystem.java:259): 0% (0 exclusive)
  1: java.util.jar.JarFile.initializeVerifier: 0,08% (4 exclusive)
    2: (JarFile.java:334): 0,08% (4 exclusive)
    2: (JarFile.java:339): 0% (0 exclusive)
  1: sun.nio.ch.Util.<clinit>: 0,08% (4 exclusive)
    2: (Util.java:51): 0,08% (4 exclusive)
  1: java.util.ResourceBundle$Control.newBundle: 0,08% (4 exclusive)
    2: (ResourceBundle.java:2584): 0,08% (4 exclusive)
  1: sun.misc.Perf.createLong: 0,08% (4 exclusive)
    2: (Perf.java:Unknown line): 0,08% (4 exclusive)
  1: java.util.ResourceBundle$Control.<clinit>: 0,08% (4 exclusive)
    2: (ResourceBundle.java:2306): 0,08% (4 exclusive)
  1: sun.misc.URLClassPath$JarLoader.checkResource: 0,08% (4 exclusive)
    2: (URLClassPath.java:747): 0,08% (4 exclusive)
    2: (URLClassPath.java:734): 0% (0 exclusive)
  1: java.util.LinkedList.linkLast: 0,08% (4 exclusive)
    2: (LinkedList.java:140): 0,08% (4 exclusive)
  1: java.util.HashMap.newKeyIterator: 0,08% (4 exclusive)
    2: (HashMap.java:853): 0,08% (4 exclusive)
  1: sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor: 0,08% (4 exclusive)
    2: (UnsafeFieldAccessorFactory.java:125): 0,08% (4 exclusive)
  1: java.lang.Class.initAnnotationsIfNecessary: 0,08% (4 exclusive)
    2: (Class.java:3089): 0,08% (4 exclusive)
  1: java.util.Vector.iterator: 0,06% (3 exclusive)
    2: (Vector.java:1114): 0,06% (3 exclusive)
  1: java.util.HashMap.keySet: 0,06% (3 exclusive)
    2: (HashMap.java:882): 0,06% (3 exclusive)
  1: java.util.Collections.emptyIterator: 0,06% (3 exclusive)
    2: (Collections.java:2990): 0,06% (3 exclusive)
  1: java.io.FileInputStream.close0: 0,06% (3 exclusive)
    2: (FileInputStream.java:Unknown line): 0,06% (3 exclusive)
  1: sun.nio.fs.WindowsPath.resolve: 0,06% (3 exclusive)
    2: (WindowsPath.java:531): 0,06% (3 exclusive)
    2: (WindowsPath.java:44): 0% (0 exclusive)
  1: sun.nio.fs.WindowsNativeDispatcher.GetFileAttributesEx0: 0,06% (3 exclusive)
    2: (WindowsNativeDispatcher.java:Unknown line): 0,06% (3 exclusive)
  1: java.util.zip.ZipFile.getZipEntry: 0,06% (3 exclusive)
    2: (ZipFile.java:520): 0,06% (3 exclusive)
    2: (ZipFile.java:521): 0% (0 exclusive)
  1: java.util.jar.JarFile.getManifestFromReference: 0,06% (3 exclusive)
    2: (JarFile.java:179): 0,04% (2 exclusive)
    2: (JarFile.java:181): 0,02% (1 exclusive)
  1: java.lang.String.<init>: 0,06% (3 exclusive)
    2: (String.java:452): 0,04% (2 exclusive)
    2: (String.java:348): 0,02% (1 exclusive)
    2: (String.java:197): 0% (0 exclusive)
    2: (String.java:221): 0% (0 exclusive)
    2: (String.java:234): 0% (0 exclusive)
    2: (String.java:448): 0% (0 exclusive)
    2: (String.java:524): 0% (0 exclusive)
    2: (String.java:645): 0% (0 exclusive)
  1: java.util.Collections$UnmodifiableCollection.iterator: 0,06% (3 exclusive)
    2: (Collections.java:1063): 0,06% (3 exclusive)
  1: java.util.HashMap.resize: 0,06% (3 exclusive)
    2: (HashMap.java:477): 0,06% (3 exclusive)
  1: sun.nio.ch.FileChannelImpl.<clinit>: 0,06% (3 exclusive)
    2: (FileChannelImpl.java:1132): 0,06% (3 exclusive)
  1: java.util.LinkedHashMap.newKeyIterator: 0,06% (3 exclusive)
    2: (LinkedHashMap.java:413): 0,06% (3 exclusive)
  1: sun.net.www.protocol.file.FileURLConnection.getPermission: 0,04% (2 exclusive)
    2: (FileURLConnection.java:227): 0,04% (2 exclusive)
  1: sun.nio.fs.WindowsPath.createFromNormalizedPath: 0,04% (2 exclusive)
    2: (WindowsPath.java:114): 0,04% (2 exclusive)
  1: sun.nio.fs.WindowsFileSystem.getPath: 0,04% (2 exclusive)
    2: (WindowsFileSystem.java:255): 0,04% (2 exclusive)
  1: sun.reflect.ReflectionFactory.newMethodAccessor: 0,04% (2 exclusive)
    2: (ReflectionFactory.java:155): 0,04% (2 exclusive)
  1: java.util.ArrayList.iterator: 0,04% (2 exclusive)
    2: (ArrayList.java:774): 0,04% (2 exclusive)
  1: sun.misc.URLClassPath$JarLoader$1.run: 0,04% (2 exclusive)
    2: (URLClassPath.java:668): 0,04% (2 exclusive)
    2: (URLClassPath.java:660): 0% (0 exclusive)
    2: (URLClassPath.java:667): 0% (0 exclusive)
  1: java.util.jar.Manifest.read: 0,04% (2 exclusive)
    2: (Manifest.java:195): 0,04% (2 exclusive)
    2: (Manifest.java:199): 0% (0 exclusive)
    2: (Manifest.java:251): 0% (0 exclusive)
  1: java.nio.file.FileTreeWalker.walk: 0,04% (2 exclusive)
    2: (FileTreeWalker.java:105): 0,04% (2 exclusive)
    2: (FileTreeWalker.java:179): 0% (0 exclusive)
    2: (FileTreeWalker.java:69): 0% (0 exclusive)
  1: java.lang.ClassLoader.findLoadedClass0: 0,04% (2 exclusive)
    2: (ClassLoader.java:Unknown line): 0,04% (2 exclusive)
  1: java.lang.Throwable.fillInStackTrace: 0,04% (2 exclusive)
    2: (Throwable.java:Unknown line): 0,04% (2 exclusive)
    2: (Throwable.java:782): 0% (0 exclusive)
  1: java.lang.String.toLowerCase: 0,04% (2 exclusive)
    2: (String.java:2486): 0,04% (2 exclusive)
    2: (String.java:2549): 0% (0 exclusive)
  1: sun.net.www.URLConnection.<init>: 0,04% (2 exclusive)
    2: (URLConnection.java:58): 0,04% (2 exclusive)
  1: java.util.ResourceBundle.getBundleImpl: 0,04% (2 exclusive)
    2: (ResourceBundle.java:1259): 0,04% (2 exclusive)
  1: java.lang.ThreadLocal.createMap: 0,04% (2 exclusive)
    2: (ThreadLocal.java:225): 0,04% (2 exclusive)
  1: java.security.AccessController.doPrivileged: 0,04% (2 exclusive)
    2: (AccessController.java:Unknown line): 0,04% (2 exclusive)
  1: java.io.FileInputStream.readBytes: 0,04% (2 exclusive)
    2: (FileInputStream.java:Unknown line): 0,04% (2 exclusive)
  1: sun.nio.fs.WindowsFileAttributeViews.createBasicView: 0,04% (2 exclusive)
    2: (WindowsFileAttributeViews.java:289): 0,04% (2 exclusive)
  1: java.nio.file.FileSystems$DefaultFileSystemHolder.defaultFileSystem: 0,04% (2 exclusive)
    2: (FileSystems.java:103): 0,04% (2 exclusive)
  1: java.util.regex.Pattern.newSlice: 0,04% (2 exclusive)
    2: (Pattern.java:3319): 0,04% (2 exclusive)
  1: java.util.regex.Pattern.<clinit>: 0,04% (2 exclusive)
    2: (Pattern.java:5005): 0,02% (1 exclusive)
    2: (Pattern.java:5448): 0,02% (1 exclusive)
  1: java.util.jar.Attributes.putValue: 0,04% (2 exclusive)
    2: (Attributes.java:168): 0,04% (2 exclusive)
  1: sun.nio.ch.Util.load: 0,04% (2 exclusive)
    2: (Util.java:485): 0,02% (1 exclusive)
    2: (Util.java:491): 0,02% (1 exclusive)
  1: java.util.regex.Pattern.family: 0,04% (2 exclusive)
    2: (Pattern.java:2689): 0,04% (2 exclusive)
    2: (Pattern.java:2685): 0% (0 exclusive)
  1: java.util.ResourceBundle.putBundleInCache: 0,04% (2 exclusive)
    2: (ResourceBundle.java:1629): 0,04% (2 exclusive)
  1: sun.nio.fs.WindowsFileSystemProvider.newDirectoryStream: 0,04% (2 exclusive)
    2: (WindowsFileSystemProvider.java:526): 0,04% (2 exclusive)
  1: java.net.URLClassLoader.findResource: 0,04% (2 exclusive)
    2: (URLClassLoader.java:548): 0,04% (2 exclusive)
  1: sun.nio.fs.WindowsNativeDispatcher.initIDs: 0,04% (2 exclusive)
    2: (WindowsNativeDispatcher.java:Unknown line): 0,04% (2 exclusive)
  1: java.util.regex.Pattern.matcher: 0,04% (2 exclusive)
    2: (Pattern.java:1088): 0,04% (2 exclusive)
  1: sun.nio.fs.DefaultFileSystemProvider.create: 0,04% (2 exclusive)
    2: (DefaultFileSystemProvider.java:36): 0,04% (2 exclusive)
  1: sun.net.www.ParseUtil.encodePath: 0,04% (2 exclusive)
    2: (ParseUtil.java:105): 0,04% (2 exclusive)
    2: (ParseUtil.java:107): 0% (0 exclusive)
    2: (ParseUtil.java:146): 0% (0 exclusive)
  1: java.util.zip.ZipCoder.getBytes: 0,04% (2 exclusive)
    2: (ZipCoder.java:80): 0,04% (2 exclusive)
    2: (ZipCoder.java:78): 0% (0 exclusive)
    2: (ZipCoder.java:89): 0% (0 exclusive)
  1: com.sun.tools.javac.comp.Resolve.checkRawArgumentsAcceptable: 0,04% (2 exclusive)
    2: (Resolve.java:450): 0,04% (2 exclusive)
    2: (Resolve.java:442): 0% (0 exclusive)
  1: java.util.jar.JarVerifier.beginEntry: 0,04% (2 exclusive)
    2: (JarVerifier.java:142): 0,04% (2 exclusive)
  1: java.util.Collections$UnmodifiableCollection.size: 0,04% (2 exclusive)
    2: (Collections.java:1055): 0,04% (2 exclusive)
  1: sun.nio.fs.WindowsFileSystem.<init>: 0,04% (2 exclusive)
    2: (WindowsFileSystem.java:57): 0,04% (2 exclusive)
  1: java.io.FilePermission.newPermissionCollection: 0,04% (2 exclusive)
    2: (FilePermission.java:657): 0,04% (2 exclusive)
  1: java.nio.channels.FileChannel.<clinit>: 0,04% (2 exclusive)
    2: (FileChannel.java:290): 0,04% (2 exclusive)
  1: java.lang.ClassLoader.getPackage: 0,04% (2 exclusive)
    2: (ClassLoader.java:1632): 0,04% (2 exclusive)
    2: (ClassLoader.java:1630): 0% (0 exclusive)
  1: java.net.URI.<init>: 0,04% (2 exclusive)
    2: (URI.java:595): 0,04% (2 exclusive)
  1: sun.nio.cs.MS1252.newDecoder: 0,02% (1 exclusive)
    2: (MS1252.java:51): 0,02% (1 exclusive)
  1: com.sun.tools.javac.util.SharedNameTable.fromChars: 0,02% (1 exclusive)
    2: (SharedNameTable.java:106): 0,02% (1 exclusive)
    2: (SharedNameTable.java:112): 0% (0 exclusive)
  1: com.sun.tools.javac.parser.Keywords.<init>: 0,02% (1 exclusive)
    2: (Keywords.java:64): 0,02% (1 exclusive)
    2: (Keywords.java:56): 0% (0 exclusive)
  1: sun.nio.ch.FileChannelImpl.map: 0,02% (1 exclusive)
    2: (FileChannelImpl.java:866): 0,02% (1 exclusive)
    2: (FileChannelImpl.java:868): 0% (0 exclusive)
  1: java.util.AbstractList.iterator: 0,02% (1 exclusive)
    2: (AbstractList.java:288): 0,02% (1 exclusive)
  1: java.net.URLClassLoader.defineClass: 0,02% (1 exclusive)
    2: (URLClassLoader.java:448): 0,02% (1 exclusive)
    2: (URLClassLoader.java:414): 0% (0 exclusive)
    2: (URLClassLoader.java:416): 0% (0 exclusive)
    2: (URLClassLoader.java:417): 0% (0 exclusive)
    2: (URLClassLoader.java:444): 0% (0 exclusive)
    2: (URLClassLoader.java:449): 0% (0 exclusive)
  1: com.sun.tools.javac.parser.JavacParser.newPosStack: 0,02% (1 exclusive)
    2: (JavacParser.java:840): 0,02% (1 exclusive)
  1: java.lang.Object.getClass: 0,02% (1 exclusive)
    2: (Object.java:Unknown line): 0,02% (1 exclusive)
  1: com.sun.tools.javac.code.Types.memberType: 0,02% (1 exclusive)
    2: (Types.java:1513): 0,02% (1 exclusive)
  1: sun.misc.PerfCounter.<clinit>: 0,02% (1 exclusive)
    2: (PerfCounter.java:51): 0,02% (1 exclusive)
  1: com.sun.tools.javac.jvm.Code$State.<init>: 0,02% (1 exclusive)
    2: (Code.java:1606): 0,02% (1 exclusive)
  1: java.util.jar.Manifest.<init>: 0,02% (1 exclusive)
    2: (Manifest.java:51): 0,02% (1 exclusive)
    2: (Manifest.java:69): 0% (0 exclusive)
  1: com.sun.tools.javac.tree.TreeMaker.Unary: 0,02% (1 exclusive)
    2: (TreeMaker.java:373): 0,02% (1 exclusive)
  1: java.util.Arrays$LegacyMergeSort.<clinit>: 0,02% (1 exclusive)
    2: (Arrays.java:387): 0,02% (1 exclusive)
  1: com.sun.tools.javac.comp.Check.checkConflicts: 0,02% (1 exclusive)
    2: (Check.java:2078): 0,02% (1 exclusive)
  1: com.sun.tools.javac.file.JavacFileManager.listDirectory: 0,02% (1 exclusive)
    2: (JavacFileManager.java:305): 0,02% (1 exclusive)
    2: (JavacFileManager.java:286): 0% (0 exclusive)
    2: (JavacFileManager.java:295): 0% (0 exclusive)
  1: java.util.regex.Pattern$Ctype.isSatisfiedBy: 0,02% (1 exclusive)
    2: (Pattern.java:3832): 0,02% (1 exclusive)
  1: com.sun.tools.javac.util.RichDiagnosticFormatter.<init>: 0,02% (1 exclusive)
    2: (RichDiagnosticFormatter.java:94): 0,02% (1 exclusive)
  1: trees.MatchFinder.trace: 0,02% (1 exclusive)
    2: (MatchFinder.java:75): 0,02% (1 exclusive)
    2: (MatchFinder.java:89): 0% (0 exclusive)
  1: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.buildIndex: 0,02% (1 exclusive)
    2: (ZipFileIndex.java:592): 0,02% (1 exclusive)
    2: (ZipFileIndex.java:579): 0% (0 exclusive)
    2: (ZipFileIndex.java:593): 0% (0 exclusive)
  1: java.util.zip.ZipFile.getEntryCSize: 0,02% (1 exclusive)
    2: (ZipFile.java:Unknown line): 0,02% (1 exclusive)
  1: sun.nio.fs.WindowsFileAttributeViews$Basic.readAttributes: 0,02% (1 exclusive)
    2: (WindowsFileAttributeViews.java:51): 0,02% (1 exclusive)
    2: (WindowsFileAttributeViews.java:38): 0% (0 exclusive)
  1: java.lang.Class.getComponentType: 0,02% (1 exclusive)
    2: (Class.java:Unknown line): 0,02% (1 exclusive)
  1: sun.misc.Unsafe.getLong: 0,02% (1 exclusive)
    2: (Unsafe.java:Unknown line): 0,02% (1 exclusive)
  1: grammar.java._A_Lexical.keyword: 0,02% (1 exclusive)
    2: (_A_Lexical.java:61): 0,02% (1 exclusive)
    2: (_A_Lexical.java:68): 0% (0 exclusive)
  1: java.util.Collections.emptyEnumeration: 0,02% (1 exclusive)
    2: (Collections.java:3075): 0,02% (1 exclusive)
  1: sun.nio.ch.Util.initDBBRConstructor: 0,02% (1 exclusive)
    2: (Util.java:411): 0,02% (1 exclusive)
  1: java.util.regex.Pattern.charPropertyNodeFor: 0,02% (1 exclusive)
    2: (Pattern.java:2728): 0,02% (1 exclusive)
  1: sun.misc.Unsafe.getByte: 0,02% (1 exclusive)
    2: (Unsafe.java:Unknown line): 0,02% (1 exclusive)
  1: com.sun.tools.javac.parser.Scanner.token: 0,02% (1 exclusive)
    2: (Scanner.java:981): 0,02% (1 exclusive)
  1: java.util.regex.Pattern$CharPropertyNames$5.make: 0,02% (1 exclusive)
    2: (Pattern.java:5573): 0,02% (1 exclusive)
  1: sun.nio.fs.WindowsNativeDispatcher.<clinit>: 0,02% (1 exclusive)
    2: (WindowsNativeDispatcher.java:1129): 0,02% (1 exclusive)
    2: (WindowsNativeDispatcher.java:1136): 0% (0 exclusive)
  1: java.lang.CharacterDataLatin1.toLowerCase: 0,02% (1 exclusive)
    2: (CharacterDataLatin1.java:138): 0,02% (1 exclusive)
  1: java.util.ServiceLoader.iterator: 0,02% (1 exclusive)
    2: (ServiceLoader.java:424): 0,02% (1 exclusive)
  1: com.sun.tools.javac.jvm.ClassReader.<init>: 0,02% (1 exclusive)
    2: (ClassReader.java:264): 0,02% (1 exclusive)
    2: (ClassReader.java:263): 0% (0 exclusive)
  1: java.util.ArrayList.subList: 0,02% (1 exclusive)
    2: (ArrayList.java:915): 0,02% (1 exclusive)
  1: sun.nio.cs.MS1252.<clinit>: 0,02% (1 exclusive)
    2: (MS1252.java:112): 0,02% (1 exclusive)
  1: compiler.java.CompiledClass.dump: 0,02% (1 exclusive)
    2: (CompiledClass.java:73): 0,02% (1 exclusive)
    2: (CompiledClass.java:72): 0% (0 exclusive)
    2: (CompiledClass.java:74): 0% (0 exclusive)
    2: (CompiledClass.java:76): 0% (0 exclusive)
  1: java.security.Permissions.add: 0,02% (1 exclusive)
    2: (Permissions.java:141): 0,02% (1 exclusive)
    2: (Permissions.java:133): 0% (0 exclusive)
  1: java.nio.CharBuffer.wrap: 0,02% (1 exclusive)
    2: (CharBuffer.java:462): 0,02% (1 exclusive)
    2: (CharBuffer.java:483): 0% (0 exclusive)
  1: java.io.RandomAccessFile.close0: 0,02% (1 exclusive)
    2: (RandomAccessFile.java:Unknown line): 0,02% (1 exclusive)
  1: com.sun.tools.javac.util.ByteBuffer.copy: 0,02% (1 exclusive)
    2: (ByteBuffer.java:64): 0,02% (1 exclusive)
  1: com.sun.tools.javac.comp.Check.checkDeprecated: 0,02% (1 exclusive)
    2: (Check.java:2458): 0,02% (1 exclusive)
  1: java.security.SecureClassLoader.getPermissions: 0,02% (1 exclusive)
    2: (SecureClassLoader.java:192): 0,02% (1 exclusive)
  1: java.util.HashMap.values: 0,02% (1 exclusive)
    2: (HashMap.java:918): 0,02% (1 exclusive)
  1: sun.misc.FloatingDecimal.parseHexString: 0,02% (1 exclusive)
    2: (FloatingDecimal.java:2300): 0,02% (1 exclusive)
  1: com.sun.tools.javac.util.SharedNameTable.<init>: 0,02% (1 exclusive)
    2: (SharedNameTable.java:84): 0,02% (1 exclusive)
    2: (SharedNameTable.java:90): 0% (0 exclusive)
  1: parser.Matcher.parse: 0,02% (1 exclusive)
    2: (Matcher.java:133): 0,02% (1 exclusive)
  1: com.sun.tools.javac.code.Source.<clinit>: 0,02% (1 exclusive)
    2: (Source.java:93): 0,02% (1 exclusive)
  1: compiler.MacroCompiler.<init>: 0,02% (1 exclusive)
    2: (MacroCompiler.java:32): 0,02% (1 exclusive)
  1: com.sun.tools.javac.comp.Resolve$InapplicableMethodException.setMessage: 0,02% (1 exclusive)
    2: (Resolve.java:496): 0,02% (1 exclusive)
  1: com.sun.tools.javac.jvm.Code.emitStackMapFrame: 0,02% (1 exclusive)
    2: (Code.java:1295): 0,02% (1 exclusive)
  1: sun.launcher.LauncherHelper.getMainMethod: 0,02% (1 exclusive)
    2: (LauncherHelper.java:501): 0,02% (1 exclusive)
  1: java.nio.file.FileTreeWalker.<init>: 0,02% (1 exclusive)
    2: (FileTreeWalker.java:59): 0,02% (1 exclusive)
  1: grammar.Grammar.<init>: 0,02% (1 exclusive)
    2: (Grammar.java:54): 0,02% (1 exclusive)
  1: java.util.ResourceBundle.getBundle: 0,02% (1 exclusive)
    2: (ResourceBundle.java:796): 0,02% (1 exclusive)
  1: java.nio.channels.spi.AbstractInterruptibleChannel.begin: 0,02% (1 exclusive)
    2: (AbstractInterruptibleChannel.java:157): 0,02% (1 exclusive)
  1: java.nio.DirectByteBuffer.asLongBuffer: 0,02% (1 exclusive)
    2: (DirectByteBuffer.java:825): 0,02% (1 exclusive)
  1: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.findCENRecord: 0,02% (1 exclusive)
    2: (ZipFileIndex.java:551): 0,02% (1 exclusive)
    2: (ZipFileIndex.java:538): 0% (0 exclusive)
    2: (ZipFileIndex.java:561): 0% (0 exclusive)
  1: sun.nio.fs.NativeBuffer.<init>: 0,02% (1 exclusive)
    2: (NativeBuffer.java:59): 0,02% (1 exclusive)
  1: java.lang.ref.Finalizer.invokeFinalizeMethod: 0,02% (1 exclusive)
    2: (Finalizer.java:Unknown line): 0,02% (1 exclusive)
  1: java.util.regex.Pattern.rangeFor: 0,02% (1 exclusive)
    2: (Pattern.java:4007): 0,02% (1 exclusive)
  1: sun.nio.fs.WindowsFileSystemProvider.getFileAttributeView: 0,02% (1 exclusive)
    2: (WindowsFileSystemProvider.java:163): 0,02% (1 exclusive)
  1: java.lang.Object.hashCode: 0,02% (1 exclusive)
    2: (Object.java:Unknown line): 0,02% (1 exclusive)
  1: java.lang.Shutdown.<clinit>: 0,02% (1 exclusive)
    2: (Shutdown.java:61): 0,02% (1 exclusive)
  1: java.util.Collections.unmodifiableSet: 0,02% (1 exclusive)
    2: (Collections.java:1112): 0,02% (1 exclusive)
  1: com.sun.tools.javac.jvm.ClassFile.internalize: 0,02% (1 exclusive)
    2: (ClassFile.java:114): 0,02% (1 exclusive)
  1: com.sun.tools.javac.code.Scope.<init>: 0,02% (1 exclusive)
    2: (Scope.java:113): 0,02% (1 exclusive)
    2: (Scope.java:105): 0% (0 exclusive)
    2: (Scope.java:95): 0% (0 exclusive)
  1: sun.misc.URLClassPath.getResources: 0,02% (1 exclusive)
    2: (URLClassPath.java:259): 0,02% (1 exclusive)
    2: (URLClassPath.java:294): 0% (0 exclusive)
  1: java.util.zip.ZipFile.getEntryFlag: 0,02% (1 exclusive)
    2: (ZipFile.java:Unknown line): 0,02% (1 exclusive)
  1: java.util.regex.Pattern.group0: 0,02% (1 exclusive)
    2: (Pattern.java:2896): 0,02% (1 exclusive)
    2: (Pattern.java:2854): 0% (0 exclusive)
  1: sun.misc.URLClassPath.getLoader: 0,02% (1 exclusive)
    2: (URLClassPath.java:321): 0,02% (1 exclusive)
    2: (URLClassPath.java:331): 0% (0 exclusive)
  1: java.lang.Thread.currentThread: 0,02% (1 exclusive)
    2: (Thread.java:Unknown line): 0,02% (1 exclusive)
  1: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.access$000: 0% (0 exclusive)
    2: (ZipFileIndex.java:483): 0% (0 exclusive)
  1: com.sun.tools.javac.main.JavaCompiler.parseFiles: 0% (0 exclusive)
    2: (JavaCompiler.java:905): 0% (0 exclusive)
  1: util.FileUtils.create: 0% (0 exclusive)
    2: (FileUtils.java:54): 0% (0 exclusive)
    2: (FileUtils.java:58): 0% (0 exclusive)
  1: com.sun.tools.javac.jvm.ClassReader.sigToType: 0% (0 exclusive)
    2: (ClassReader.java:612): 0% (0 exclusive)
    2: (ClassReader.java:673): 0% (0 exclusive)
  1: com.sun.tools.javac.file.ZipFileIndex$Entry.getName: 0% (0 exclusive)
    2: (ZipFileIndex.java:1089): 0% (0 exclusive)
  1: sun.misc.MetaIndex.registerDirectory: 0% (0 exclusive)
    2: (MetaIndex.java:166): 0% (0 exclusive)
  1: java.lang.ClassLoader.getBootstrapResources: 0% (0 exclusive)
    2: (ClassLoader.java:1308): 0% (0 exclusive)
  1: sun.nio.fs.WindowsDirectoryStream.<init>: 0% (0 exclusive)
    2: (WindowsDirectoryStream.java:78): 0% (0 exclusive)
  1: java.util.Collections$UnmodifiableRandomAccessList.<init>: 0% (0 exclusive)
    2: (Collections.java:1282): 0% (0 exclusive)
  1: com.sun.tools.javac.tree.JCTree$JCFieldAccess.<init>: 0% (0 exclusive)
    2: (JCTree.java:1671): 0% (0 exclusive)
  1: java.io.StringWriter.<init>: 0% (0 exclusive)
    2: (StringWriter.java:65): 0% (0 exclusive)
    2: (StringWriter.java:69): 0% (0 exclusive)
  1: parser.Matcher.<init>: 0% (0 exclusive)
    2: (Matcher.java:29): 0% (0 exclusive)
    2: (Matcher.java:32): 0% (0 exclusive)
  1: java.net.URLClassLoader.access$100: 0% (0 exclusive)
    2: (URLClassLoader.java:71): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Scope.dup: 0% (0 exclusive)
    2: (Scope.java:131): 0% (0 exclusive)
  1: com.sun.tools.javac.util.Options.isSet: 0% (0 exclusive)
    2: (Options.java:112): 0% (0 exclusive)
  1: java.net.URL.openConnection: 0% (0 exclusive)
    2: (URL.java:969): 0% (0 exclusive)
  1: util.ArrayIterator.<init>: 0% (0 exclusive)
    2: (ArrayIterator.java:23): 0% (0 exclusive)
    2: (ArrayIterator.java:37): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Type$PackageType.<init>: 0% (0 exclusive)
    2: (Type.java:974): 0% (0 exclusive)
  1: java.io.FilterOutputStream.close: 0% (0 exclusive)
    2: (FilterOutputStream.java:160): 0% (0 exclusive)
  1: parser.ParseData.succeed: 0% (0 exclusive)
    2: (ParseData.java:83): 0% (0 exclusive)
  1: java.io.FileInputStream.close: 0% (0 exclusive)
    2: (FileInputStream.java:326): 0% (0 exclusive)
  1: com.sun.tools.javac.util.ListBuffer.<init>: 0% (0 exclusive)
    2: (ListBuffer.java:71): 0% (0 exclusive)
  1: java.lang.ClassLoader.loadLibrary: 0% (0 exclusive)
    2: (ClassLoader.java:1846): 0% (0 exclusive)
  1: sun.misc.URLClassPath$JarLoader.access$600: 0% (0 exclusive)
    2: (URLClassPath.java:587): 0% (0 exclusive)
  1: java.lang.Class.forName: 0% (0 exclusive)
    2: (Class.java:186): 0% (0 exclusive)
    2: (Class.java:264): 0% (0 exclusive)
  1: java.io.FileOutputStream.<init>: 0% (0 exclusive)
    2: (FileOutputStream.java:165): 0% (0 exclusive)
    2: (FileOutputStream.java:212): 0% (0 exclusive)
  1: java.util.WeakHashMap$Entry.<init>: 0% (0 exclusive)
    2: (WeakHashMap.java:691): 0% (0 exclusive)
  1: driver.Context.<clinit>: 0% (0 exclusive)
    2: (Context.java:20): 0% (0 exclusive)
  1: compiler.java.DynamicJavaCompiler.compile: 0% (0 exclusive)
    2: (DynamicJavaCompiler.java:46): 0% (0 exclusive)
  1: sun.misc.URLClassPath$JarLoader$2.getInputStream: 0% (0 exclusive)
    2: (URLClassPath.java:752): 0% (0 exclusive)
  1: java.util.concurrent.ConcurrentHashMap$HashEntry.<init>: 0% (0 exclusive)
    2: (ConcurrentHashMap.java:210): 0% (0 exclusive)
  1: java.lang.StringBuffer.<init>: 0% (0 exclusive)
    2: (StringBuffer.java:108): 0% (0 exclusive)
  1: java.util.concurrent.ConcurrentHashMap.putIfAbsent: 0% (0 exclusive)
    2: (ConcurrentHashMap.java:1084): 0% (0 exclusive)
  1: java.util.ResourceBundle$Control$CandidateListCache.createObject: 0% (0 exclusive)
    2: (ResourceBundle.java:2308): 0% (0 exclusive)
    2: (ResourceBundle.java:2369): 0% (0 exclusive)
  1: com.sun.tools.javac.processing.JavacProcessingEnvironment.initProcessorOptions: 0% (0 exclusive)
    2: (JavacProcessingEnvironment.java:472): 0% (0 exclusive)
    2: (JavacProcessingEnvironment.java:489): 0% (0 exclusive)
  1: java.io.FileReader.<init>: 0% (0 exclusive)
    2: (FileReader.java:72): 0% (0 exclusive)
  1: parser.Match.first: 0% (0 exclusive)
    2: (Match.java:253): 0% (0 exclusive)
  1: java.lang.ref.Finalizer.access$100: 0% (0 exclusive)
    2: (Finalizer.java:32): 0% (0 exclusive)
  1: parser.Matcher.visitChoice: 0% (0 exclusive)
    2: (Matcher.java:171): 0% (0 exclusive)
  1: java.lang.ref.Finalizer$FinalizerThread.run: 0% (0 exclusive)
    2: (Finalizer.java:178): 0% (0 exclusive)
  1: util.apache.CharSequenceTranslator.translate: 0% (0 exclusive)
    2: (CharSequenceTranslator.java:58): 0% (0 exclusive)
    2: (CharSequenceTranslator.java:59): 0% (0 exclusive)
    2: (CharSequenceTranslator.java:87): 0% (0 exclusive)
  1: java.net.URLClassLoader.findClass: 0% (0 exclusive)
    2: (URLClassLoader.java:354): 0% (0 exclusive)
  1: java.net.URLClassLoader.isSealed: 0% (0 exclusive)
    2: (URLClassLoader.java:523): 0% (0 exclusive)
  1: sun.nio.fs.WindowsFileSystemProvider.readAttributes: 0% (0 exclusive)
    2: (WindowsFileSystemProvider.java:192): 0% (0 exclusive)
  1: javax.tools.ToolProvider.getSystemJavaCompiler: 0% (0 exclusive)
    2: (ToolProvider.java:102): 0% (0 exclusive)
  1: com.sun.tools.javac.util.Names.createTable: 0% (0 exclusive)
    2: (Names.java:276): 0% (0 exclusive)
  1: java.io.InputStream.<init>: 0% (0 exclusive)
    2: (InputStream.java:45): 0% (0 exclusive)
  1: com.sun.tools.javac.file.FSInfo.isDirectory: 0% (0 exclusive)
    2: (FSInfo.java:58): 0% (0 exclusive)
  1: java.nio.file.Files.newDirectoryStream: 0% (0 exclusive)
    2: (Files.java:400): 0% (0 exclusive)
  1: com.sun.tools.javac.jvm.ClassReader.fillIn: 0% (0 exclusive)
    2: (ClassReader.java:2207): 0% (0 exclusive)
  1: source.SourceComposed.strFromMatches: 0% (0 exclusive)
    2: (SourceComposed.java:23): 0% (0 exclusive)
    2: (SourceComposed.java:29): 0% (0 exclusive)
  1: com.sun.tools.javac.file.JavacFileManager.list: 0% (0 exclusive)
    2: (JavacFileManager.java:644): 0% (0 exclusive)
  1: com.sun.tools.javac.util.Names.<init>: 0% (0 exclusive)
    2: (Names.java:157): 0% (0 exclusive)
  1: com.sun.tools.javac.jvm.ClassReader.readClassOrType: 0% (0 exclusive)
    2: (ClassReader.java:546): 0% (0 exclusive)
  1: com.sun.tools.javac.util.Names.fromChars: 0% (0 exclusive)
    2: (Names.java:284): 0% (0 exclusive)
  1: sun.misc.URLClassPath$JarLoader$2.getManifest: 0% (0 exclusive)
    2: (URLClassPath.java:756): 0% (0 exclusive)
  1: com.sun.tools.javac.file.RelativePath$RelativeDirectory.dirname: 0% (0 exclusive)
    2: (RelativePath.java:120): 0% (0 exclusive)
  1: java.lang.ThreadLocal.setInitialValue: 0% (0 exclusive)
    2: (ThreadLocal.java:166): 0% (0 exclusive)
  1: com.sun.tools.javac.parser.Scanner.scanOperator: 0% (0 exclusive)
    2: (Scanner.java:620): 0% (0 exclusive)
  1: com.sun.tools.javac.file.ZipFileIndex.readBytes: 0% (0 exclusive)
    2: (ZipFileIndex.java:382): 0% (0 exclusive)
  1: com.sun.tools.javac.jvm.Code.emitStackMap: 0% (0 exclusive)
    2: (Code.java:1215): 0% (0 exclusive)
  1: java.io.File.hashCode: 0% (0 exclusive)
    2: (File.java:1985): 0% (0 exclusive)
  1: sun.nio.fs.WindowsDirectoryStream$WindowsDirectoryIterator.acceptEntry: 0% (0 exclusive)
    2: (WindowsDirectoryStream.java:145): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Scope$CompoundScope$2$1.nextIterator: 0% (0 exclusive)
    2: (Scope.java:665): 0% (0 exclusive)
  1: com.sun.tools.javac.file.ZipFileIndex$Entry.<init>: 0% (0 exclusive)
    2: (ZipFileIndex.java:1083): 0% (0 exclusive)
  1: java.lang.Integer.valueOf: 0% (0 exclusive)
    2: (Integer.java:642): 0% (0 exclusive)
  1: java.util.jar.JarFile.getJarEntry: 0% (0 exclusive)
    2: (JarFile.java:208): 0% (0 exclusive)
  1: util.PeekIterator.<init>: 0% (0 exclusive)
    2: (PeekIterator.java:18): 0% (0 exclusive)
    2: (PeekIterator.java:20): 0% (0 exclusive)
  1: com.sun.tools.javac.jvm.ClassReader$2.<init>: 0% (0 exclusive)
    2: (ClassReader.java:938): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Scope$Entry.<init>: 0% (0 exclusive)
    2: (Scope.java:477): 0% (0 exclusive)
  1: grammar.GrammarDSL.chars: 0% (0 exclusive)
    2: (GrammarDSL.java:116): 0% (0 exclusive)
  1: java.util.Arrays.sort: 0% (0 exclusive)
    2: (Arrays.java:469): 0% (0 exclusive)
  1: com.sun.tools.javac.util.JavacMessages.<init>: 0% (0 exclusive)
    2: (JavacMessages.java:98): 0% (0 exclusive)
  1: java.lang.reflect.Field.acquireFieldAccessor: 0% (0 exclusive)
    2: (Field.java:949): 0% (0 exclusive)
  1: java.util.AbstractList.<init>: 0% (0 exclusive)
    2: (AbstractList.java:76): 0% (0 exclusive)
  1: com.sun.tools.javac.jvm.ClassReader.readMethod: 0% (0 exclusive)
    2: (ClassReader.java:1742): 0% (0 exclusive)
  1: com.sun.tools.javac.util.JCDiagnostic$Factory.create: 0% (0 exclusive)
    2: (JCDiagnostic.java:230): 0% (0 exclusive)
  1: grammar.java.CallbacksMacroDefinition.<clinit>: 0% (0 exclusive)
    2: (CallbacksMacroDefinition.java:24): 0% (0 exclusive)
  1: com.sun.tools.javac.util.Name$Table.fromString: 0% (0 exclusive)
    2: (Name.java:203): 0% (0 exclusive)
  1: sun.nio.fs.WindowsFileSystemProvider.<init>: 0% (0 exclusive)
    2: (WindowsFileSystemProvider.java:52): 0% (0 exclusive)
  1: trees.MatchIterator$NodeState.<init>: 0% (0 exclusive)
    2: (MatchIterator.java:31): 0% (0 exclusive)
  1: java.util.HashMap.get: 0% (0 exclusive)
    2: (HashMap.java:317): 0% (0 exclusive)
  1: com.sun.tools.javac.file.ZipFileIndexArchive$ZipFileIndexFileObject.inferBinaryName: 0% (0 exclusive)
    2: (ZipFileIndexArchive.java:212): 0% (0 exclusive)
  1: files.RelativeSourcePath.fileName: 0% (0 exclusive)
    2: (RelativeSourcePath.java:111): 0% (0 exclusive)
  1: sun.misc.Launcher$BootClassPathHolder$1.run: 0% (0 exclusive)
    2: (Launcher.java:375): 0% (0 exclusive)
  1: com.sun.tools.javac.util.RichDiagnosticFormatter.instance: 0% (0 exclusive)
    2: (RichDiagnosticFormatter.java:88): 0% (0 exclusive)
  1: com.sun.tools.javac.comp.Lower.translateTopLevelClass: 0% (0 exclusive)
    2: (Lower.java:3643): 0% (0 exclusive)
    2: (Lower.java:3654): 0% (0 exclusive)
  1: java.io.StringWriter.toString: 0% (0 exclusive)
    2: (StringWriter.java:210): 0% (0 exclusive)
  1: sun.net.www.protocol.file.FileURLConnection.<init>: 0% (0 exclusive)
    2: (FileURLConnection.java:68): 0% (0 exclusive)
  1: java.io.FileOutputStream.close: 0% (0 exclusive)
    2: (FileOutputStream.java:362): 0% (0 exclusive)
  1: com.sun.tools.javac.util.JavacMessages.getBundles: 0% (0 exclusive)
    2: (JavacMessages.java:121): 0% (0 exclusive)
  1: com.sun.tools.javac.tree.TreeInfo.<init>: 0% (0 exclusive)
    2: (TreeInfo.java:68): 0% (0 exclusive)
  1: java.util.regex.Pattern.<init>: 0% (0 exclusive)
    2: (Pattern.java:1337): 0% (0 exclusive)
  1: java.security.Permissions.getPermissionCollection: 0% (0 exclusive)
    2: (Permissions.java:255): 0% (0 exclusive)
  1: sun.misc.PerfCounter.<init>: 0% (0 exclusive)
    2: (PerfCounter.java:65): 0% (0 exclusive)
    2: (PerfCounter.java:67): 0% (0 exclusive)
  1: java.lang.ThreadLocal.get: 0% (0 exclusive)
    2: (ThreadLocal.java:143): 0% (0 exclusive)
    2: (ThreadLocal.java:150): 0% (0 exclusive)
  1: trees.MatchSpec$ExprSpec.<init>: 0% (0 exclusive)
    2: (MatchSpec.java:133): 0% (0 exclusive)
  1: com.sun.tools.javac.tree.JCTree.<init>: 0% (0 exclusive)
    2: (JCTree.java:79): 0% (0 exclusive)
  1: java.io.File.getParentFile: 0% (0 exclusive)
    2: (File.java:475): 0% (0 exclusive)
  1: java.io.Writer.<init>: 0% (0 exclusive)
    2: (Writer.java:75): 0% (0 exclusive)
  1: java.util.Arrays$ArrayList.<init>: 0% (0 exclusive)
    2: (Arrays.java:2840): 0% (0 exclusive)
  1: java.util.regex.Pattern.access$600: 0% (0 exclusive)
    2: (Pattern.java:763): 0% (0 exclusive)
  1: java.lang.ClassLoader.defineClass: 0% (0 exclusive)
    2: (ClassLoader.java:791): 0% (0 exclusive)
  1: com.sun.tools.javac.file.RelativePath$RelativeDirectory.<init>: 0% (0 exclusive)
    2: (RelativePath.java:104): 0% (0 exclusive)
  1: com.sun.tools.javac.comp.AttrContext.<init>: 0% (0 exclusive)
    2: (AttrContext.java:39): 0% (0 exclusive)
  1: java.util.zip.ZipEntry.<init>: 0% (0 exclusive)
    2: (ZipEntry.java:80): 0% (0 exclusive)
  1: java.lang.AbstractStringBuilder.append: 0% (0 exclusive)
    2: (AbstractStringBuilder.java:415): 0% (0 exclusive)
  1: java.util.Vector.ensureCapacityHelper: 0% (0 exclusive)
    2: (Vector.java:242): 0% (0 exclusive)
  1: com.sun.tools.javac.file.ZipFileIndex.<init>: 0% (0 exclusive)
    2: (ZipFileIndex.java:136): 0% (0 exclusive)
  1: sun.nio.fs.NativeBuffer.release: 0% (0 exclusive)
    2: (NativeBuffer.java:63): 0% (0 exclusive)
  1: trees.MatchIterator.trace: 0% (0 exclusive)
    2: (MatchIterator.java:133): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Type$WildcardType.<init>: 0% (0 exclusive)
    2: (Type.java:446): 0% (0 exclusive)
  1: com.sun.tools.javac.tree.JCTree$JCExpression.<init>: 0% (0 exclusive)
    2: (JCTree.java:543): 0% (0 exclusive)
  1: sun.nio.cs.StreamEncoder.writeBytes: 0% (0 exclusive)
    2: (StreamEncoder.java:221): 0% (0 exclusive)
  1: com.sun.tools.javac.api.JavacTool.getTask: 0% (0 exclusive)
    2: (JavacTool.java:181): 0% (0 exclusive)
    2: (JavacTool.java:68): 0% (0 exclusive)
  1: java.lang.Throwable.<init>: 0% (0 exclusive)
    2: (Throwable.java:286): 0% (0 exclusive)
    2: (Throwable.java:287): 0% (0 exclusive)
    2: (Throwable.java:309): 0% (0 exclusive)
    2: (Throwable.java:310): 0% (0 exclusive)
  1: java.util.jar.JarEntry.<init>: 0% (0 exclusive)
    2: (JarEntry.java:62): 0% (0 exclusive)
  1: sun.misc.URLClassPath$JarLoader.getResource: 0% (0 exclusive)
    2: (URLClassPath.java:819): 0% (0 exclusive)
  1: util.FileUtils.glob: 0% (0 exclusive)
    2: (FileUtils.java:27): 0% (0 exclusive)
    2: (FileUtils.java:29): 0% (0 exclusive)
  1: java.util.ArrayList.grow: 0% (0 exclusive)
    2: (ArrayList.java:213): 0% (0 exclusive)
  1: com.sun.tools.javac.util.SharedNameTable.fromUtf: 0% (0 exclusive)
    2: (SharedNameTable.java:143): 0% (0 exclusive)
  1: trees.MatchSpec$RuleSpec.<init>: 0% (0 exclusive)
    2: (MatchSpec.java:59): 0% (0 exclusive)
  1: com.sun.tools.javac.jvm.ClassWriter.instance: 0% (0 exclusive)
    2: (ClassWriter.java:161): 0% (0 exclusive)
  1: trees.MatchIterator.next: 0% (0 exclusive)
    2: (MatchIterator.java:80): 0% (0 exclusive)
  1: com.sun.tools.javac.file.ZipFileIndex.openFile: 0% (0 exclusive)
    2: (ZipFileIndex.java:203): 0% (0 exclusive)
  1: com.sun.tools.javac.comp.Env.<init>: 0% (0 exclusive)
    2: (Env.java:81): 0% (0 exclusive)
  1: java.lang.Float.valueOf: 0% (0 exclusive)
    2: (Float.java:417): 0% (0 exclusive)
  1: java.io.File.createNewFile: 0% (0 exclusive)
    2: (File.java:947): 0% (0 exclusive)
  1: sun.misc.URLClassPath.getResource: 0% (0 exclusive)
    2: (URLClassPath.java:194): 0% (0 exclusive)
    2: (URLClassPath.java:195): 0% (0 exclusive)
  1: java.util.ResourceBundle.findBundle: 0% (0 exclusive)
    2: (ResourceBundle.java:1354): 0% (0 exclusive)
    2: (ResourceBundle.java:1400): 0% (0 exclusive)
    2: (ResourceBundle.java:1406): 0% (0 exclusive)
  1: com.sun.tools.javac.processing.JavacProcessingEnvironment.<init>: 0% (0 exclusive)
    2: (JavacProcessingEnvironment.java:181): 0% (0 exclusive)
    2: (JavacProcessingEnvironment.java:185): 0% (0 exclusive)
  1: sun.nio.ch.FileChannelImpl.size: 0% (0 exclusive)
    2: (FileChannelImpl.java:289): 0% (0 exclusive)
  1: java.net.URLClassLoader.getAndVerifyPackage: 0% (0 exclusive)
    2: (URLClassLoader.java:382): 0% (0 exclusive)
    2: (URLClassLoader.java:394): 0% (0 exclusive)
  1: com.sun.tools.javac.util.Names.fromString: 0% (0 exclusive)
    2: (Names.java:288): 0% (0 exclusive)
  1: compiler.java.CollectingJavaFileManager.inferBinaryName: 0% (0 exclusive)
    2: (CollectingJavaFileManager.java:174): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Scope$3$1.<init>: 0% (0 exclusive)
    2: (Scope.java:420): 0% (0 exclusive)
  1: com.sun.tools.javac.comp.Resolve.selectBest: 0% (0 exclusive)
    2: (Resolve.java:687): 0% (0 exclusive)
  1: java.util.regex.Pattern$SliceU.match: 0% (0 exclusive)
    2: (Pattern.java:3916): 0% (0 exclusive)
  1: java.util.ArrayList.toArray: 0% (0 exclusive)
    2: (ArrayList.java:360): 0% (0 exclusive)
  1: sun.nio.fs.WindowsFileAttributes.<init>: 0% (0 exclusive)
    2: (WindowsFileAttributes.java:174): 0% (0 exclusive)
  1: grammar.Expression$CharClass.<init>: 0% (0 exclusive)
    2: (Expression.java:344): 0% (0 exclusive)
  1: com.sun.tools.javac.main.JavaCompiler.initProcessAnnotations: 0% (0 exclusive)
    2: (JavaCompiler.java:992): 0% (0 exclusive)
  1: java.util.Collections$EmptyList.iterator: 0% (0 exclusive)
    2: (Collections.java:3183): 0% (0 exclusive)
  1: com.sun.tools.javac.processing.JavacProcessingEnvironment.<clinit>: 0% (0 exclusive)
    2: (JavacProcessingEnvironment.java:1446): 0% (0 exclusive)
  1: trees.MatchSpec.expr: 0% (0 exclusive)
    2: (MatchSpec.java:156): 0% (0 exclusive)
  1: com.sun.tools.javac.jvm.ClassReader.enterClass: 0% (0 exclusive)
    2: (ClassReader.java:2065): 0% (0 exclusive)
  1: java.net.URI.create: 0% (0 exclusive)
    2: (URI.java:857): 0% (0 exclusive)
  1: com.sun.tools.javac.parser.Scanner.nextToken: 0% (0 exclusive)
    2: (Scanner.java:934): 0% (0 exclusive)
  1: java.lang.Exception.<init>: 0% (0 exclusive)
    2: (Exception.java:102): 0% (0 exclusive)
    2: (Exception.java:84): 0% (0 exclusive)
  1: com.sun.tools.javac.jvm.Pool$Method.<init>: 0% (0 exclusive)
    2: (Pool.java:130): 0% (0 exclusive)
  1: java.security.PrivilegedActionException.<init>: 0% (0 exclusive)
    2: (PrivilegedActionException.java:66): 0% (0 exclusive)
  1: util.FileUtils.write: 0% (0 exclusive)
    2: (FileUtils.java:97): 0% (0 exclusive)
    2: (FileUtils.java:99): 0% (0 exclusive)
  1: source.SourceString.<init>: 0% (0 exclusive)
    2: (SourceString.java:56): 0% (0 exclusive)
    2: (SourceString.java:57): 0% (0 exclusive)
  1: java.util.Collections$UnmodifiableCollection.toArray: 0% (0 exclusive)
    2: (Collections.java:1059): 0% (0 exclusive)
  1: java.io.ObjectStreamField.getClassSignature: 0% (0 exclusive)
    2: (ObjectStreamField.java:310): 0% (0 exclusive)
  1: sun.misc.PerfCounter.get: 0% (0 exclusive)
    2: (PerfCounter.java:83): 0% (0 exclusive)
  1: parser.NestedMemo.get: 0% (0 exclusive)
    2: (NestedMemo.java:33): 0% (0 exclusive)
    2: (NestedMemo.java:41): 0% (0 exclusive)
    2: (NestedMemo.java:42): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Type.<init>: 0% (0 exclusive)
    2: (Type.java:118): 0% (0 exclusive)
  1: com.sun.tools.javac.tree.JCTree$JCIdent.accept: 0% (0 exclusive)
    2: (JCTree.java:1705): 0% (0 exclusive)
  1: java.lang.ClassLoader.getResource: 0% (0 exclusive)
    2: (ClassLoader.java:1133): 0% (0 exclusive)
    2: (ClassLoader.java:1135): 0% (0 exclusive)
    2: (ClassLoader.java:1138): 0% (0 exclusive)
  1: java.io.Win32FileSystem.hashCode: 0% (0 exclusive)
    2: (Win32FileSystem.java:598): 0% (0 exclusive)
  1: com.sun.tools.javac.comp.Attr.visitIdent: 0% (0 exclusive)
    2: (Attr.java:2221): 0% (0 exclusive)
  1: compiler.util.MatchCreator.new_match: 0% (0 exclusive)
    2: (MatchCreator.java:54): 0% (0 exclusive)
  1: com.sun.tools.javac.file.ZipFileIndex.getRelativeDirectory: 0% (0 exclusive)
    2: (ZipFileIndex.java:1057): 0% (0 exclusive)
  1: com.sun.tools.javac.file.RelativePath$RelativeFile.<init>: 0% (0 exclusive)
    2: (RelativePath.java:157): 0% (0 exclusive)
    2: (RelativePath.java:166): 0% (0 exclusive)
  1: java.lang.ReflectiveOperationException.<init>: 0% (0 exclusive)
    2: (ReflectiveOperationException.java:75): 0% (0 exclusive)
  1: com.sun.tools.javac.parser.Keywords.instance: 0% (0 exclusive)
    2: (Keywords.java:50): 0% (0 exclusive)
  1: sun.misc.URLClassPath$3.run: 0% (0 exclusive)
    2: (URLClassPath.java:352): 0% (0 exclusive)
    2: (URLClassPath.java:362): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Types$DefaultTypeVisitor.<init>: 0% (0 exclusive)
    2: (Types.java:3711): 0% (0 exclusive)
  1: com.sun.tools.javac.comp.Enter.classEnv: 0% (0 exclusive)
    2: (Enter.java:192): 0% (0 exclusive)
  1: sun.nio.fs.WindowsNativeDispatcher.FindFirstFile: 0% (0 exclusive)
    2: (WindowsNativeDispatcher.java:174): 0% (0 exclusive)
  1: sun.misc.Launcher$AppClassLoader.loadClass: 0% (0 exclusive)
    2: (Launcher.java:308): 0% (0 exclusive)
  1: com.sun.tools.javac.util.ListBuffer.iterator: 0% (0 exclusive)
    2: (ListBuffer.java:205): 0% (0 exclusive)
  1: java.util.zip.ZipFile.access$1400: 0% (0 exclusive)
    2: (ZipFile.java:56): 0% (0 exclusive)
  1: com.sun.tools.javac.util.List.prepend: 0% (0 exclusive)
    2: (List.java:174): 0% (0 exclusive)
  1: java.util.regex.Pattern.expr: 0% (0 exclusive)
    2: (Pattern.java:1964): 0% (0 exclusive)
  1: com.sun.tools.javac.main.JavaCompiler.desugar: 0% (0 exclusive)
    2: (JavaCompiler.java:1271): 0% (0 exclusive)
    2: (JavaCompiler.java:1393): 0% (0 exclusive)
  1: java.io.RandomAccessFile.read: 0% (0 exclusive)
    2: (RandomAccessFile.java:355): 0% (0 exclusive)
  1: sun.misc.URLClassPath$FileLoader$1.getContentLength: 0% (0 exclusive)
    2: (URLClassPath.java:1065): 0% (0 exclusive)
  1: compiler.java.StringJavaFileObject.getCharContent: 0% (0 exclusive)
    2: (StringJavaFileObject.java:1): 0% (0 exclusive)
    2: (StringJavaFileObject.java:37): 0% (0 exclusive)
  1: java.lang.Class.getEnumConstantsShared: 0% (0 exclusive)
    2: (Class.java:2957): 0% (0 exclusive)
  1: com.sun.tools.javac.jvm.Gen.initCode: 0% (0 exclusive)
    2: (Gen.java:969): 0% (0 exclusive)
    2: (Gen.java:980): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Types.implementation: 0% (0 exclusive)
    2: (Types.java:2096): 0% (0 exclusive)
  1: java.lang.StringBuffer.toString: 0% (0 exclusive)
    2: (StringBuffer.java:561): 0% (0 exclusive)
  1: sun.launcher.LauncherHelper.checkAndLoadMain: 0% (0 exclusive)
    2: (LauncherHelper.java:480): 0% (0 exclusive)
  1: com.sun.tools.javac.file.ZipFileIndex$DirectoryEntry.getEntry: 0% (0 exclusive)
    2: (ZipFileIndex.java:769): 0% (0 exclusive)
  1: sun.nio.fs.WindowsFileSystem.<clinit>: 0% (0 exclusive)
    2: (WindowsFileSystem.java:230): 0% (0 exclusive)
  1: java.util.jar.JarFile.getInputStream: 0% (0 exclusive)
    2: (JarFile.java:406): 0% (0 exclusive)
  1: java.lang.reflect.Method.invoke: 0% (0 exclusive)
    2: (Method.java:599): 0% (0 exclusive)
  1: java.io.FileDescriptor.<init>: 0% (0 exclusive)
    2: (FileDescriptor.java:60): 0% (0 exclusive)
  1: sun.nio.ch.Util$4.run: 0% (0 exclusive)
    2: (Util.java:411): 0% (0 exclusive)
    2: (Util.java:414): 0% (0 exclusive)
  1: com.sun.tools.javac.file.RelativePath$RelativeFile.dirname: 0% (0 exclusive)
    2: (RelativePath.java:176): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Symbol$ClassSymbol.<init>: 0% (0 exclusive)
    2: (Symbol.java:733): 0% (0 exclusive)
    2: (Symbol.java:735): 0% (0 exclusive)
    2: (Symbol.java:736): 0% (0 exclusive)
    2: (Symbol.java:743): 0% (0 exclusive)
  1: java.lang.reflect.Field.<init>: 0% (0 exclusive)
    2: (Field.java:117): 0% (0 exclusive)
  1: com.sun.tools.javac.file.JavacFileManager.listContainer: 0% (0 exclusive)
    2: (JavacFileManager.java:357): 0% (0 exclusive)
    2: (JavacFileManager.java:358): 0% (0 exclusive)
  1: java.util.HashSet.iterator: 0% (0 exclusive)
    2: (HashSet.java:170): 0% (0 exclusive)
  1: java.util.AbstractCollection.addAll: 0% (0 exclusive)
    2: (AbstractCollection.java:333): 0% (0 exclusive)
  1: com.sun.tools.javac.main.JavacOption$Option.<init>: 0% (0 exclusive)
    2: (JavacOption.java:114): 0% (0 exclusive)
    2: (JavacOption.java:123): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Symbol$MethodSymbol.overrides: 0% (0 exclusive)
    2: (Symbol.java:1165): 0% (0 exclusive)
  1: sun.net.www.protocol.jar.Handler.parseContextSpec: 0% (0 exclusive)
    2: (Handler.java:206): 0% (0 exclusive)
  1: com.sun.tools.javac.main.RecognizedOptions$11.<init>: 0% (0 exclusive)
    2: (RecognizedOptions.java:365): 0% (0 exclusive)
  1: java.lang.Enum.compareTo: 0% (0 exclusive)
    2: (Enum.java:178): 0% (0 exclusive)
  1: grammar.Expression$StringLiteral.accept: 0% (0 exclusive)
    2: (Expression.java:308): 0% (0 exclusive)
  1: sun.misc.PerfCounter.add: 0% (0 exclusive)
    2: (PerfCounter.java:97): 0% (0 exclusive)
  1: java.nio.DirectLongBufferU.get: 0% (0 exclusive)
    2: (DirectLongBufferU.java:253): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Types$ImplementationCache.implementationInternal: 0% (0 exclusive)
    2: (Types.java:2084): 0% (0 exclusive)
  1: java.lang.AbstractStringBuilder.expandCapacity: 0% (0 exclusive)
    2: (AbstractStringBuilder.java:130): 0% (0 exclusive)
  1: java.lang.StringCoding$StringDecoder.<init>: 0% (0 exclusive)
    2: (StringCoding.java:122): 0% (0 exclusive)
    2: (StringCoding.java:131): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Symtab.initType: 0% (0 exclusive)
    2: (Symtab.java:208): 0% (0 exclusive)
  1: com.sun.tools.javac.util.Convert.utf2string: 0% (0 exclusive)
    2: (Convert.java:145): 0% (0 exclusive)
  1: java.util.concurrent.ConcurrentHashMap$Segment.put: 0% (0 exclusive)
    2: (ConcurrentHashMap.java:391): 0% (0 exclusive)
  1: java.io.RandomAccessFile.readFully: 0% (0 exclusive)
    2: (RandomAccessFile.java:394): 0% (0 exclusive)
    2: (RandomAccessFile.java:414): 0% (0 exclusive)
  1: util.AbstractBiIterator.<init>: 0% (0 exclusive)
    2: (AbstractBiIterator.java:7): 0% (0 exclusive)
  1: com.sun.tools.javac.api.JavacTaskImpl.call: 0% (0 exclusive)
    2: (JavacTaskImpl.java:132): 0% (0 exclusive)
  1: java.net.URL.toExternalForm: 0% (0 exclusive)
    2: (URL.java:919): 0% (0 exclusive)
  1: driver.EntryPoint.run: 0% (0 exclusive)
    2: (EntryPoint.java:45): 0% (0 exclusive)
  1: java.lang.Integer.<init>: 0% (0 exclusive)
    2: (Integer.java:659): 0% (0 exclusive)
  1: parser.Match.<init>: 0% (0 exclusive)
    2: (Match.java:87): 0% (0 exclusive)
  1: java.io.File.getCanonicalPath: 0% (0 exclusive)
    2: (File.java:589): 0% (0 exclusive)
  1: java.util.AbstractQueue.<init>: 0% (0 exclusive)
    2: (AbstractQueue.java:71): 0% (0 exclusive)
  1: sun.net.www.protocol.file.Handler.parseURL: 0% (0 exclusive)
    2: (Handler.java:67): 0% (0 exclusive)
  1: source.SourceFileText.at: 0% (0 exclusive)
    2: (SourceFileText.java:143): 0% (0 exclusive)
  1: java.io.FilePermission$1.run: 0% (0 exclusive)
    2: (FilePermission.java:221): 0% (0 exclusive)
  1: com.sun.tools.javac.jvm.ClassWriter.nameType: 0% (0 exclusive)
    2: (ClassWriter.java:557): 0% (0 exclusive)
  1: java.util.zip.ZipFile$ZipFileInputStream.<init>: 0% (0 exclusive)
    2: (ZipFile.java:657): 0% (0 exclusive)
    2: (ZipFile.java:659): 0% (0 exclusive)
  1: java.lang.ClassLoader.getBootstrapResource: 0% (0 exclusive)
    2: (ClassLoader.java:1297): 0% (0 exclusive)
  1: java.lang.ClassLoader.getBootstrapClassPath: 0% (0 exclusive)
    2: (ClassLoader.java:1322): 0% (0 exclusive)
  1: java.util.AbstractSet.<init>: 0% (0 exclusive)
    2: (AbstractSet.java:63): 0% (0 exclusive)
  1: com.sun.tools.javac.jvm.ClassReader.includeClassFile: 0% (0 exclusive)
    2: (ClassReader.java:2383): 0% (0 exclusive)
  1: com.sun.tools.javac.jvm.Code.<init>: 0% (0 exclusive)
    2: (Code.java:213): 0% (0 exclusive)
  1: com.sun.tools.javac.jvm.ClassReader.readClassSymbol: 0% (0 exclusive)
    2: (ClassReader.java:562): 0% (0 exclusive)
  1: java.util.ArrayList$Itr.<init>: 0% (0 exclusive)
    2: (ArrayList.java:780): 0% (0 exclusive)
  1: util.CollectingFileVisitor.visitFile: 0% (0 exclusive)
    2: (CollectingFileVisitor.java:1): 0% (0 exclusive)
    2: (CollectingFileVisitor.java:35): 0% (0 exclusive)
  1: files.RelativeSourcePath.<init>: 0% (0 exclusive)
    2: (RelativeSourcePath.java:70): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Scope.makeEntry: 0% (0 exclusive)
    2: (Scope.java:230): 0% (0 exclusive)
  1: driver.CompilationDriver.dumpAndOrLoadClass: 0% (0 exclusive)
    2: (CompilationDriver.java:125): 0% (0 exclusive)
  1: java.util.HashMap$Entry.<init>: 0% (0 exclusive)
    2: (HashMap.java:696): 0% (0 exclusive)
  1: java.nio.file.Paths.get: 0% (0 exclusive)
    2: (Paths.java:84): 0% (0 exclusive)
  1: com.sun.tools.javac.util.Name.<init>: 0% (0 exclusive)
    2: (Name.java:41): 0% (0 exclusive)
  1: com.sun.tools.javac.jvm.ClassWriter.assembleClassSig: 0% (0 exclusive)
    2: (ClassWriter.java:387): 0% (0 exclusive)
  1: java.lang.StringCoding.decode: 0% (0 exclusive)
    2: (StringCoding.java:187): 0% (0 exclusive)
    2: (StringCoding.java:193): 0% (0 exclusive)
  1: sun.misc.FileURLMapper.exists: 0% (0 exclusive)
    2: (FileURLMapper.java:73): 0% (0 exclusive)
  1: com.sun.tools.javac.file.FSInfo.isFile: 0% (0 exclusive)
    2: (FSInfo.java:62): 0% (0 exclusive)
  1: com.sun.tools.javac.main.JavaCompiler.compile: 0% (0 exclusive)
    2: (JavaCompiler.java:824): 0% (0 exclusive)
  1: sun.nio.fs.WindowsDirectoryStream$WindowsDirectoryIterator.readNextEntry: 0% (0 exclusive)
    2: (WindowsDirectoryStream.java:190): 0% (0 exclusive)
    2: (WindowsDirectoryStream.java:195): 0% (0 exclusive)
  1: java.net.URLClassLoader$1.run: 0% (0 exclusive)
    2: (URLClassLoader.java:355): 0% (0 exclusive)
    2: (URLClassLoader.java:357): 0% (0 exclusive)
    2: (URLClassLoader.java:358): 0% (0 exclusive)
    2: (URLClassLoader.java:361): 0% (0 exclusive)
  1: source.SourceString.at: 0% (0 exclusive)
    2: (SourceString.java:86): 0% (0 exclusive)
  1: java.nio.file.FileSystems$DefaultFileSystemHolder.<clinit>: 0% (0 exclusive)
    2: (FileSystems.java:90): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Symbol$MethodSymbol.<init>: 0% (0 exclusive)
    2: (Symbol.java:1043): 0% (0 exclusive)
  1: compiler.util.Quoter.primitiveQuote: 0% (0 exclusive)
    2: (Quoter.java:214): 0% (0 exclusive)
  1: java.lang.Character.toLowerCase: 0% (0 exclusive)
    2: (Character.java:6148): 0% (0 exclusive)
  1: sun.launcher.LauncherHelper.makePlatformString: 0% (0 exclusive)
    2: (LauncherHelper.java:522): 0% (0 exclusive)
  1: java.security.SecureClassLoader.getProtectionDomain: 0% (0 exclusive)
    2: (SecureClassLoader.java:206): 0% (0 exclusive)
  1: com.sun.tools.javac.file.ZipFileIndexArchive.getFileObject: 0% (0 exclusive)
    2: (ZipFileIndexArchive.java:74): 0% (0 exclusive)
    2: (ZipFileIndexArchive.java:76): 0% (0 exclusive)
  1: trees.MatchSpec.rule: 0% (0 exclusive)
    2: (MatchSpec.java:84): 0% (0 exclusive)
  1: com.sun.tools.javac.processing.JavacFiler.<init>: 0% (0 exclusive)
    2: (JavacFiler.java:366): 0% (0 exclusive)
  1: sun.misc.PerfCounter.newPerfCounter: 0% (0 exclusive)
    2: (PerfCounter.java:71): 0% (0 exclusive)
  1: java.util.AbstractCollection.<init>: 0% (0 exclusive)
    2: (AbstractCollection.java:66): 0% (0 exclusive)
  1: java.io.File.<init>: 0% (0 exclusive)
    2: (File.java:223): 0% (0 exclusive)
    2: (File.java:236): 0% (0 exclusive)
    2: (File.java:332): 0% (0 exclusive)
    2: (File.java:341): 0% (0 exclusive)
  1: java.lang.Number.<init>: 0% (0 exclusive)
    2: (Number.java:49): 0% (0 exclusive)
  1: com.sun.tools.javac.file.JavacFileManager.inferBinaryName: 0% (0 exclusive)
    2: (JavacFileManager.java:658): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Types$Subst.visitMethodType: 0% (0 exclusive)
    2: (Types.java:2288): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Scope$3.iterator: 0% (0 exclusive)
    2: (Scope.java:420): 0% (0 exclusive)
  1: java.util.Stack.<init>: 0% (0 exclusive)
    2: (Stack.java:53): 0% (0 exclusive)
  1: grammar.java._B_Expressions.<init>: 0% (0 exclusive)
    2: (_B_Expressions.java:12): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Scope$ImportScope.makeEntry: 0% (0 exclusive)
    2: (Scope.java:515): 0% (0 exclusive)
  1: java.io.File.length: 0% (0 exclusive)
    2: (File.java:912): 0% (0 exclusive)
  1: driver.DependencyResolver.run: 0% (0 exclusive)
    2: (DependencyResolver.java:71): 0% (0 exclusive)
    2: (DependencyResolver.java:72): 0% (0 exclusive)
  1: parser.Match.getCaptures: 0% (0 exclusive)
    2: (Match.java:208): 0% (0 exclusive)
  1: java.util.regex.Pattern$GroupHead.match: 0% (0 exclusive)
    2: (Pattern.java:4556): 0% (0 exclusive)
  1: com.sun.tools.javac.util.Context.put: 0% (0 exclusive)
    2: (Context.java:124): 0% (0 exclusive)
    2: (Context.java:197): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Scope$ImportScope$ImportEntry.<init>: 0% (0 exclusive)
    2: (Scope.java:522): 0% (0 exclusive)
  1: trees.MatchIterator.forward: 0% (0 exclusive)
    2: (MatchIterator.java:105): 0% (0 exclusive)
  1: java.lang.ref.Finalizer.runFinalizer: 0% (0 exclusive)
    2: (Finalizer.java:101): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Symbol$TypeSymbol.formFlatName: 0% (0 exclusive)
    2: (Symbol.java:547): 0% (0 exclusive)
  1: com.sun.tools.javac.jvm.ClassReader$AttributeReader.<init>: 0% (0 exclusive)
    2: (ClassReader.java:893): 0% (0 exclusive)
  1: com.sun.tools.javac.comp.AttrContext.dup: 0% (0 exclusive)
    2: (AttrContext.java:77): 0% (0 exclusive)
  1: java.lang.String.substring: 0% (0 exclusive)
    2: (String.java:1925): 0% (0 exclusive)
    2: (String.java:1960): 0% (0 exclusive)
  1: com.sun.tools.javac.comp.Resolve.findMethod: 0% (0 exclusive)
    2: (Resolve.java:949): 0% (0 exclusive)
  1: java.lang.Integer$IntegerCache.<clinit>: 0% (0 exclusive)
    2: (Integer.java:617): 0% (0 exclusive)
  1: com.sun.tools.javac.util.List.of: 0% (0 exclusive)
    2: (List.java:89): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Symtab.enterBinop: 0% (0 exclusive)
    2: (Symtab.java:240): 0% (0 exclusive)
  1: java.net.URLStreamHandler.toExternalForm: 0% (0 exclusive)
    2: (URLStreamHandler.java:490): 0% (0 exclusive)
    2: (URLStreamHandler.java:508): 0% (0 exclusive)
  1: java.nio.DirectByteBuffer.get: 0% (0 exclusive)
    2: (DirectByteBuffer.java:249): 0% (0 exclusive)
  1: java.lang.reflect.Field.getFieldAccessor: 0% (0 exclusive)
    2: (Field.java:930): 0% (0 exclusive)
  1: java.nio.file.FileSystems$DefaultFileSystemHolder$1.run: 0% (0 exclusive)
    2: (FileSystems.java:98): 0% (0 exclusive)
  1: com.sun.tools.javac.file.BaseFileObject.<init>: 0% (0 exclusive)
    2: (BaseFileObject.java:51): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Type$ClassType.<init>: 0% (0 exclusive)
    2: (Type.java:564): 0% (0 exclusive)
  1: parser.ParseErrors.<init>: 0% (0 exclusive)
    2: (ParseErrors.java:81): 0% (0 exclusive)
    2: (ParseErrors.java:89): 0% (0 exclusive)
  1: java.util.ResourceBundle.loadBundle: 0% (0 exclusive)
    2: (ResourceBundle.java:1436): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Symbol$TypeSymbol.formFullName: 0% (0 exclusive)
    2: (Symbol.java:532): 0% (0 exclusive)
  1: com.sun.tools.javac.comp.Attr.visitTypeArray: 0% (0 exclusive)
    2: (Attr.java:2864): 0% (0 exclusive)
  1: parser.ParseData.<init>: 0% (0 exclusive)
    2: (ParseData.java:38): 0% (0 exclusive)
    2: (ParseData.java:44): 0% (0 exclusive)
    2: (ParseData.java:47): 0% (0 exclusive)
  1: java.lang.ClassLoader.findResources: 0% (0 exclusive)
    2: (ClassLoader.java:1215): 0% (0 exclusive)
  1: sun.misc.PerfCounter$CoreCounters.<clinit>: 0% (0 exclusive)
    2: (PerfCounter.java:128): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Types$ImplementationCache$Entry.<init>: 0% (0 exclusive)
    2: (Types.java:2042): 0% (0 exclusive)
  1: driver.SourceFile.<init>: 0% (0 exclusive)
    2: (SourceFile.java:61): 0% (0 exclusive)
    2: (SourceFile.java:79): 0% (0 exclusive)
  1: java.lang.ClassLoader.getClassLoadingLock: 0% (0 exclusive)
    2: (ClassLoader.java:461): 0% (0 exclusive)
  1: com.sun.tools.javac.util.List.reverse: 0% (0 exclusive)
    2: (List.java:210): 0% (0 exclusive)
  1: java.util.regex.Pattern.atom: 0% (0 exclusive)
    2: (Pattern.java:2199): 0% (0 exclusive)
  1: source.SourceFileText.<init>: 0% (0 exclusive)
    2: (SourceFileText.java:107): 0% (0 exclusive)
    2: (SourceFileText.java:108): 0% (0 exclusive)
    2: (SourceFileText.java:112): 0% (0 exclusive)
    2: (SourceFileText.java:118): 0% (0 exclusive)
    2: (SourceFileText.java:87): 0% (0 exclusive)
  1: sun.nio.cs.UTF_8$Decoder.decodeBufferLoop: 0% (0 exclusive)
    2: (UTF_8.java:285): 0% (0 exclusive)
  1: java.lang.ref.WeakReference.<init>: 0% (0 exclusive)
    2: (WeakReference.java:69): 0% (0 exclusive)
  1: sun.nio.fs.WindowsDirectoryStream$WindowsDirectoryIterator.hasNext: 0% (0 exclusive)
    2: (WindowsDirectoryStream.java:204): 0% (0 exclusive)
  1: sun.misc.URLClassPath$FileLoader$1.getInputStream: 0% (0 exclusive)
    2: (URLClassPath.java:1063): 0% (0 exclusive)
  1: driver.DependencyResolver.<init>: 0% (0 exclusive)
    2: (DependencyResolver.java:65): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Type$ArrayType.<init>: 0% (0 exclusive)
    2: (Type.java:784): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Symbol$PackageSymbol.<init>: 0% (0 exclusive)
    2: (Symbol.java:640): 0% (0 exclusive)
  1: com.sun.tools.javac.main.JavaCompiler.<init>: 0% (0 exclusive)
    2: (JavaCompiler.java:331): 0% (0 exclusive)
    2: (JavaCompiler.java:407): 0% (0 exclusive)
  1: java.util.zip.ZipFile$ZipFileInflaterInputStream.fill: 0% (0 exclusive)
    2: (ZipFile.java:413): 0% (0 exclusive)
  1: sun.misc.URLClassPath$FileLoader.getResource: 0% (0 exclusive)
    2: (URLClassPath.java:1035): 0% (0 exclusive)
    2: (URLClassPath.java:1054): 0% (0 exclusive)
    2: (URLClassPath.java:1057): 0% (0 exclusive)
  1: java.lang.Class.getAnnotation: 0% (0 exclusive)
    2: (Class.java:3048): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Symbol$DelegatedSymbol.<init>: 0% (0 exclusive)
    2: (Symbol.java:474): 0% (0 exclusive)
  1: com.sun.tools.javac.jvm.Items$LocalItem.<init>: 0% (0 exclusive)
    2: (Items.java:382): 0% (0 exclusive)
  1: com.sun.tools.javac.file.JavacFileManager.caseMapCheck: 0% (0 exclusive)
    2: (JavacFileManager.java:400): 0% (0 exclusive)
  1: com.sun.tools.javac.comp.Lower$1.visitMethodDef: 0% (0 exclusive)
    2: (Lower.java:645): 0% (0 exclusive)
  1: java.security.SecureClassLoader.defineClass: 0% (0 exclusive)
    2: (SecureClassLoader.java:142): 0% (0 exclusive)
  1: java.util.jar.JarFile.getEntry: 0% (0 exclusive)
    2: (JarFile.java:225): 0% (0 exclusive)
  1: java.util.Collections$UnmodifiableList.<init>: 0% (0 exclusive)
    2: (Collections.java:1204): 0% (0 exclusive)
  1: com.sun.tools.javac.util.ListBuffer$1.<init>: 0% (0 exclusive)
    2: (ListBuffer.java:205): 0% (0 exclusive)
  1: com.sun.tools.javac.main.JavaCompiler.genCode: 0% (0 exclusive)
    2: (JavaCompiler.java:712): 0% (0 exclusive)
  1: com.sun.tools.javac.jvm.ClassReader.instance: 0% (0 exclusive)
    2: (ClassReader.java:226): 0% (0 exclusive)
  1: sun.misc.URLClassPath$JarLoader.<init>: 0% (0 exclusive)
    2: (URLClassPath.java:632): 0% (0 exclusive)
  1: com.sun.tools.javac.jvm.ClassFile.<init>: 0% (0 exclusive)
    2: (ClassFile.java:66): 0% (0 exclusive)
  1: sun.nio.fs.WindowsFileAttributes.fromFindData: 0% (0 exclusive)
    2: (WindowsFileAttributes.java:251): 0% (0 exclusive)
  1: parser.Matcher.succeed: 0% (0 exclusive)
    2: (Matcher.java:160): 0% (0 exclusive)
  1: java.io.RandomAccessFile.<init>: 0% (0 exclusive)
    2: (RandomAccessFile.java:233): 0% (0 exclusive)
  1: java.lang.String.concat: 0% (0 exclusive)
    2: (String.java:2024): 0% (0 exclusive)
  1: java.lang.AbstractStringBuilder.ensureCapacityInternal: 0% (0 exclusive)
    2: (AbstractStringBuilder.java:114): 0% (0 exclusive)
  1: source.SourceStream.<init>: 0% (0 exclusive)
    2: (SourceStream.java:39): 0% (0 exclusive)
  1: driver.EntryPoint.getPaths: 0% (0 exclusive)
    2: (EntryPoint.java:57): 0% (0 exclusive)
    2: (EntryPoint.java:59): 0% (0 exclusive)
  1: com.sun.tools.javac.util.SharedNameTable$NameImpl.<init>: 0% (0 exclusive)
    2: (SharedNameTable.java:176): 0% (0 exclusive)
  1: com.sun.tools.javac.jvm.ClassWriter.<init>: 0% (0 exclusive)
    2: (ClassWriter.java:167): 0% (0 exclusive)
  1: java.lang.StringBuilder.toString: 0% (0 exclusive)
    2: (StringBuilder.java:405): 0% (0 exclusive)
  1: java.util.Collections$UnmodifiableCollection.<init>: 0% (0 exclusive)
    2: (Collections.java:1049): 0% (0 exclusive)
  1: com.sun.tools.javac.jvm.ClassReader.readPool: 0% (0 exclusive)
    2: (ClassReader.java:478): 0% (0 exclusive)
  1: java.util.jar.JarFile.getManifest: 0% (0 exclusive)
    2: (JarFile.java:165): 0% (0 exclusive)
  1: java.net.URLClassLoader$1.<init>: 0% (0 exclusive)
    2: (URLClassLoader.java:355): 0% (0 exclusive)
  1: java.util.jar.JarFile$JarFileEntry.<init>: 0% (0 exclusive)
    2: (JarFile.java:250): 0% (0 exclusive)
  1: driver.RequiresParser.parseRequires: 0% (0 exclusive)
    2: (RequiresParser.java:45): 0% (0 exclusive)
  1: com.sun.tools.javac.util.JCDiagnostic$Factory.qualify: 0% (0 exclusive)
    2: (JCDiagnostic.java:234): 0% (0 exclusive)
  1: grammar.java._A_Lexical.<init>: 0% (0 exclusive)
    2: (_A_Lexical.java:520): 0% (0 exclusive)
  1: javax.tools.ToolProvider.getSystemToolClass: 0% (0 exclusive)
    2: (ToolProvider.java:159): 0% (0 exclusive)
  1: java.net.URLClassLoader.getPermissions: 0% (0 exclusive)
    2: (URLClassLoader.java:635): 0% (0 exclusive)
    2: (URLClassLoader.java:644): 0% (0 exclusive)
    2: (URLClassLoader.java:695): 0% (0 exclusive)
  1: com.sun.tools.javac.file.Paths$Path.addFile: 0% (0 exclusive)
    2: (Paths.java:318): 0% (0 exclusive)
  1: java.util.HashMap$KeySet.iterator: 0% (0 exclusive)
    2: (HashMap.java:887): 0% (0 exclusive)
  1: java.io.DataInputStream.readFully: 0% (0 exclusive)
    2: (DataInputStream.java:195): 0% (0 exclusive)
  1: com.sun.tools.javac.parser.ParserFactory.<init>: 0% (0 exclusive)
    2: (ParserFactory.java:70): 0% (0 exclusive)
  1: java.net.URL.<init>: 0% (0 exclusive)
    2: (URL.java:480): 0% (0 exclusive)
    2: (URL.java:505): 0% (0 exclusive)
  1: com.sun.tools.javac.util.List.<init>: 0% (0 exclusive)
    2: (List.java:65): 0% (0 exclusive)
  1: java.lang.ClassLoader.findBootstrapClassOrNull: 0% (0 exclusive)
    2: (ClassLoader.java:1061): 0% (0 exclusive)
  1: sun.net.www.protocol.file.Handler.openConnection: 0% (0 exclusive)
    2: (Handler.java:72): 0% (0 exclusive)
    2: (Handler.java:89): 0% (0 exclusive)
  1: java.nio.charset.Charset.lookup: 0% (0 exclusive)
    2: (Charset.java:475): 0% (0 exclusive)
  1: java.lang.reflect.AccessibleObject.<init>: 0% (0 exclusive)
    2: (AccessibleObject.java:158): 0% (0 exclusive)
  1: com.sun.tools.javac.tree.JCTree$JCMethodDecl.accept: 0% (0 exclusive)
    2: (JCTree.java:669): 0% (0 exclusive)
  1: com.sun.tools.javac.jvm.ClassFile$NameAndType.<init>: 0% (0 exclusive)
    2: (ClassFile.java:160): 0% (0 exclusive)
  1: driver.RequiresParser.parseRequire: 0% (0 exclusive)
    2: (RequiresParser.java:114): 0% (0 exclusive)
  1: com.sun.tools.javac.jvm.Items$Item.<init>: 0% (0 exclusive)
    2: (Items.java:192): 0% (0 exclusive)
  1: java.lang.reflect.Method.acquireMethodAccessor: 0% (0 exclusive)
    2: (Method.java:654): 0% (0 exclusive)
  1: sun.util.locale.LocaleObjectCache.get: 0% (0 exclusive)
    2: (LocaleObjectCache.java:61): 0% (0 exclusive)
  1: com.sun.tools.javac.main.Main.compile: 0% (0 exclusive)
    2: (Main.java:363): 0% (0 exclusive)
  1: sun.nio.fs.NativeBuffers.allocNativeBuffer: 0% (0 exclusive)
    2: (NativeBuffers.java:49): 0% (0 exclusive)
  1: java.util.Vector.grow: 0% (0 exclusive)
    2: (Vector.java:262): 0% (0 exclusive)
  1: com.sun.tools.javac.parser.JavacParser.arguments: 0% (0 exclusive)
    2: (JavacParser.java:1206): 0% (0 exclusive)
    2: (JavacParser.java:1224): 0% (0 exclusive)
  1: compiler.PostExpansionTransformer.transform: 0% (0 exclusive)
    2: (CallbackTransformers.java:39): 0% (0 exclusive)
  1: driver.CompilationDriver.dumpAndOrLoadClasses: 0% (0 exclusive)
    2: (CompilationDriver.java:109): 0% (0 exclusive)
    2: (CompilationDriver.java:98): 0% (0 exclusive)
  1: java.util.regex.Pattern$Curly.match0: 0% (0 exclusive)
    2: (Pattern.java:4170): 0% (0 exclusive)
  1: java.io.Win32FileSystem.canonicalize: 0% (0 exclusive)
    2: (Win32FileSystem.java:414): 0% (0 exclusive)
  1: java.lang.ClassLoader.loadClass: 0% (0 exclusive)
    2: (ClassLoader.java:403): 0% (0 exclusive)
    2: (ClassLoader.java:405): 0% (0 exclusive)
    2: (ClassLoader.java:410): 0% (0 exclusive)
    2: (ClassLoader.java:412): 0% (0 exclusive)
    2: (ClassLoader.java:423): 0% (0 exclusive)
  1: sun.misc.FloatingDecimal.readJavaFormatString: 0% (0 exclusive)
    2: (FloatingDecimal.java:1063): 0% (0 exclusive)
  1: java.lang.ClassLoader.getResources: 0% (0 exclusive)
    2: (ClassLoader.java:1174): 0% (0 exclusive)
    2: (ClassLoader.java:1176): 0% (0 exclusive)
  1: java.net.URLStreamHandler.parseURL: 0% (0 exclusive)
    2: (URLStreamHandler.java:249): 0% (0 exclusive)
    2: (URLStreamHandler.java:302): 0% (0 exclusive)
  1: com.sun.tools.javac.jvm.Items.makeLocalItem: 0% (0 exclusive)
    2: (Items.java:124): 0% (0 exclusive)
  1: sun.misc.Resource.cachedInputStream: 0% (0 exclusive)
    2: (Resource.java:77): 0% (0 exclusive)
  1: sun.nio.fs.WindowsFileSystem$2.matches: 0% (0 exclusive)
    2: (WindowsFileSystem.java:312): 0% (0 exclusive)
  1: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.<init>: 0% (0 exclusive)
    2: (ZipFileIndex.java:496): 0% (0 exclusive)
  1: java.lang.reflect.Field.get: 0% (0 exclusive)
    2: (Field.java:372): 0% (0 exclusive)
  1: util.StringUtils.escape: 0% (0 exclusive)
    2: (StringUtils.java:17): 0% (0 exclusive)
    2: (StringUtils.java:49): 0% (0 exclusive)
  1: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.readEntry: 0% (0 exclusive)
    2: (ZipFileIndex.java:644): 0% (0 exclusive)
    2: (ZipFileIndex.java:651): 0% (0 exclusive)
    2: (ZipFileIndex.java:668): 0% (0 exclusive)
  1: sun.nio.ch.Util.newMappedByteBufferR: 0% (0 exclusive)
    2: (Util.java:441): 0% (0 exclusive)
  1: com.sun.tools.javac.file.RegularFileObject.inferBinaryName: 0% (0 exclusive)
    2: (RegularFileObject.java:162): 0% (0 exclusive)
    2: (RegularFileObject.java:166): 0% (0 exclusive)
  1: com.sun.tools.javac.api.ClientCodeWrapper.isTrusted: 0% (0 exclusive)
    2: (ClientCodeWrapper.java:177): 0% (0 exclusive)
  1: driver.DependencyResolver.resolve: 0% (0 exclusive)
    2: (DependencyResolver.java:61): 0% (0 exclusive)
  1: grammar.Expression.<init>: 0% (0 exclusive)
    2: (Expression.java:77): 0% (0 exclusive)
  1: java.util.jar.Attributes.read: 0% (0 exclusive)
    2: (Attributes.java:412): 0% (0 exclusive)
    2: (Attributes.java:421): 0% (0 exclusive)
  1: java.lang.Class.isAnnotationPresent: 0% (0 exclusive)
    2: (Class.java:3061): 0% (0 exclusive)
  1: com.sun.tools.javac.comp.Attr.checkId: 0% (0 exclusive)
    2: (Attr.java:2588): 0% (0 exclusive)
  1: java.lang.ref.Reference.<init>: 0% (0 exclusive)
    2: (Reference.java:233): 0% (0 exclusive)
  1: grammar.java._E_MacroDefinitions.initialize: 0% (0 exclusive)
    2: (_E_MacroDefinitions.java:289): 0% (0 exclusive)
  1: java.io.File.isDirectory: 0% (0 exclusive)
    2: (File.java:799): 0% (0 exclusive)
  1: driver.Requires.imports: 0% (0 exclusive)
    2: (Requires.java:89): 0% (0 exclusive)
  1: com.sun.tools.javac.jvm.Code.emitop1w: 0% (0 exclusive)
    2: (Code.java:966): 0% (0 exclusive)
  1: sun.nio.ch.FileChannelImpl.open: 0% (0 exclusive)
    2: (FileChannelImpl.java:81): 0% (0 exclusive)
  1: sun.nio.cs.FastCharsetProvider.charsetForName: 0% (0 exclusive)
    2: (FastCharsetProvider.java:136): 0% (0 exclusive)
  1: java.lang.Runtime.loadLibrary0: 0% (0 exclusive)
    2: (Runtime.java:845): 0% (0 exclusive)
  1: java.util.ArrayList.ensureCapacityInternal: 0% (0 exclusive)
    2: (ArrayList.java:187): 0% (0 exclusive)
  1: java.util.ServiceLoader$LazyIterator.hasNext: 0% (0 exclusive)
    2: (ServiceLoader.java:340): 0% (0 exclusive)
  1: java.lang.ClassLoader.loadLibrary0: 0% (0 exclusive)
    2: (ClassLoader.java:1928): 0% (0 exclusive)
  1: com.sun.tools.javac.file.ZipFileIndexArchive$ZipFileIndexFileObject.<init>: 0% (0 exclusive)
    2: (ZipFileIndexArchive.java:120): 0% (0 exclusive)
  1: java.util.regex.Pattern.matches: 0% (0 exclusive)
    2: (Pattern.java:1128): 0% (0 exclusive)
  1: java.lang.StringBuilder.<init>: 0% (0 exclusive)
    2: (StringBuilder.java:85): 0% (0 exclusive)
  1: java.nio.file.FileSystems$DefaultFileSystemHolder.access$000: 0% (0 exclusive)
    2: (FileSystems.java:89): 0% (0 exclusive)
  1: java.util.regex.Pattern$BmpCharProperty.match: 0% (0 exclusive)
    2: (Pattern.java:3715): 0% (0 exclusive)
  1: javax.tools.ToolProvider.getSystemTool: 0% (0 exclusive)
    2: (ToolProvider.java:145): 0% (0 exclusive)
  1: com.sun.tools.javac.parser.ParserFactory.instance: 0% (0 exclusive)
    2: (ParserFactory.java:51): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Symtab.instance: 0% (0 exclusive)
    2: (Symtab.java:61): 0% (0 exclusive)
  1: com.sun.tools.javac.util.ListBuffer.append: 0% (0 exclusive)
    2: (ListBuffer.java:132): 0% (0 exclusive)
  1: java.util.zip.ZipFile.access$1100: 0% (0 exclusive)
    2: (ZipFile.java:56): 0% (0 exclusive)
  1: com.sun.tools.javac.jvm.Gen.genMethod: 0% (0 exclusive)
    2: (Gen.java:909): 0% (0 exclusive)
  1: java.nio.file.FileSystems$DefaultFileSystemHolder.getDefaultProvider: 0% (0 exclusive)
    2: (FileSystems.java:108): 0% (0 exclusive)
  1: com.sun.tools.javac.jvm.Gen.genClass: 0% (0 exclusive)
    2: (Gen.java:2227): 0% (0 exclusive)
  1: java.util.jar.JarFile.<init>: 0% (0 exclusive)
    2: (JarFile.java:152): 0% (0 exclusive)
    2: (JarFile.java:89): 0% (0 exclusive)
  1: com.sun.tools.javac.file.BaseFileObject.removeExtension: 0% (0 exclusive)
    2: (BaseFileObject.java:84): 0% (0 exclusive)
  1: java.lang.ClassLoader.findLoadedClass: 0% (0 exclusive)
    2: (ClassLoader.java:1084): 0% (0 exclusive)
  1: parser.NestedMemo.set: 0% (0 exclusive)
    2: (NestedMemo.java:56): 0% (0 exclusive)
    2: (NestedMemo.java:60): 0% (0 exclusive)
  1: java.util.jar.JavaUtilJarAccessImpl.jarFileHasClassPathAttribute: 0% (0 exclusive)
    2: (JavaUtilJarAccessImpl.java:37): 0% (0 exclusive)
  1: com.sun.tools.javac.parser.JavacParser.term3: 0% (0 exclusive)
    2: (JavacParser.java:1031): 0% (0 exclusive)
    2: (JavacParser.java:896): 0% (0 exclusive)
  1: com.sun.tools.javac.parser.JavacParser.term2: 0% (0 exclusive)
    2: (JavacParser.java:701): 0% (0 exclusive)
    2: (JavacParser.java:704): 0% (0 exclusive)
  1: com.sun.tools.javac.file.ZipFileIndex.closeFile: 0% (0 exclusive)
    2: (ZipFileIndex.java:223): 0% (0 exclusive)
  1: java.util.LinkedList.add: 0% (0 exclusive)
    2: (LinkedList.java:336): 0% (0 exclusive)
  1: files.Package.<init>: 0% (0 exclusive)
    2: (Package.java:29): 0% (0 exclusive)
  1: java.io.File.listFiles: 0% (0 exclusive)
    2: (File.java:1133): 0% (0 exclusive)
    2: (File.java:1138): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Types$UnaryVisitor.<init>: 0% (0 exclusive)
    2: (Types.java:3790): 0% (0 exclusive)
  1: com.sun.tools.javac.parser.JavacParser.term1: 0% (0 exclusive)
    2: (JavacParser.java:672): 0% (0 exclusive)
  1: java.util.HashMap.put: 0% (0 exclusive)
    2: (HashMap.java:389): 0% (0 exclusive)
    2: (HashMap.java:402): 0% (0 exclusive)
  1: driver.Config.<init>: 0% (0 exclusive)
    2: (Config.java:28): 0% (0 exclusive)
  1: java.util.regex.Pattern$CharPropertyNames$2.make: 0% (0 exclusive)
    2: (Pattern.java:5470): 0% (0 exclusive)
  1: java.lang.reflect.Field.copy: 0% (0 exclusive)
    2: (Field.java:140): 0% (0 exclusive)
  1: java.util.regex.Pattern$Curly.match: 0% (0 exclusive)
    2: (Pattern.java:4125): 0% (0 exclusive)
  1: com.sun.tools.javac.jvm.ClassWriter.writePool: 0% (0 exclusive)
    2: (ClassWriter.java:484): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Symbol.<init>: 0% (0 exclusive)
    2: (Symbol.java:116): 0% (0 exclusive)
  1: com.sun.tools.javac.file.ZipFileIndex$DirectoryEntry.access$100: 0% (0 exclusive)
    2: (ZipFileIndex.java:700): 0% (0 exclusive)
  1: java.io.File.exists: 0% (0 exclusive)
    2: (File.java:772): 0% (0 exclusive)
  1: compiler.util.Quoter$DynamicQuoteMethod.dynamicQuote: 0% (0 exclusive)
    2: (Quoter.java:68): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Type$MethodType.<init>: 0% (0 exclusive)
    2: (Type.java:872): 0% (0 exclusive)
  1: com.sun.tools.javac.parser.JavacParser.term2Rest: 0% (0 exclusive)
    2: (JavacParser.java:729): 0% (0 exclusive)
  1: trees.MatchSpec.<init>: 0% (0 exclusive)
    2: (MatchSpec.java:18): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Types$ImplementationCache.get: 0% (0 exclusive)
    2: (Types.java:2067): 0% (0 exclusive)
    2: (Types.java:2068): 0% (0 exclusive)
  1: sun.misc.Launcher$AppClassLoader.getPermissions: 0% (0 exclusive)
    2: (Launcher.java:316): 0% (0 exclusive)
  1: sun.reflect.NativeMethodAccessorImpl.invoke0: 0% (0 exclusive)
    2: (NativeMethodAccessorImpl.java:Unknown line): 0% (0 exclusive)
  1: com.sun.tools.javac.file.RegularFileObject.openInputStream: 0% (0 exclusive)
    2: (RegularFileObject.java:96): 0% (0 exclusive)
  1: com.sun.tools.javac.main.JavaCompiler.instance: 0% (0 exclusive)
    2: (JavaCompiler.java:88): 0% (0 exclusive)
  1: java.nio.charset.Charset.lookup2: 0% (0 exclusive)
    2: (Charset.java:487): 0% (0 exclusive)
  1: java.io.RandomAccessFile.close: 0% (0 exclusive)
    2: (RandomAccessFile.java:594): 0% (0 exclusive)
  1: sun.reflect.DelegatingMethodAccessorImpl.invoke: 0% (0 exclusive)
    2: (DelegatingMethodAccessorImpl.java:43): 0% (0 exclusive)
  1: sun.misc.URLClassPath$JarLoader.getClassPath: 0% (0 exclusive)
    2: (URLClassPath.java:960): 0% (0 exclusive)
    2: (URLClassPath.java:961): 0% (0 exclusive)
  1: java.io.File.list: 0% (0 exclusive)
    2: (File.java:1048): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Types$TypeRelation.<init>: 0% (0 exclusive)
    2: (Types.java:3780): 0% (0 exclusive)
  1: com.sun.tools.javac.comp.Resolve.<init>: 0% (0 exclusive)
    2: (Resolve.java:111): 0% (0 exclusive)
  1: driver.Config.<clinit>: 0% (0 exclusive)
    2: (Config.java:16): 0% (0 exclusive)
  1: sun.reflect.NativeMethodAccessorImpl.invoke: 0% (0 exclusive)
    2: (NativeMethodAccessorImpl.java:57): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Types$SimpleVisitor.<init>: 0% (0 exclusive)
    2: (Types.java:3760): 0% (0 exclusive)
  1: java.io.FileOutputStream.write: 0% (0 exclusive)
    2: (FileOutputStream.java:318): 0% (0 exclusive)
  1: com.sun.tools.javac.jvm.Code.emitop: 0% (0 exclusive)
    2: (Code.java:364): 0% (0 exclusive)
  1: com.sun.tools.javac.file.RelativePath.<init>: 0% (0 exclusive)
    2: (RelativePath.java:47): 0% (0 exclusive)
  1: java.util.AbstractMap.<init>: 0% (0 exclusive)
    2: (AbstractMap.java:73): 0% (0 exclusive)
  1: source.SourceComposed.<init>: 0% (0 exclusive)
    2: (SourceComposed.java:17): 0% (0 exclusive)
  1: java.io.File.isFile: 0% (0 exclusive)
    2: (File.java:829): 0% (0 exclusive)
  1: sun.misc.URLClassPath$FileLoader.findResource: 0% (0 exclusive)
    2: (URLClassPath.java:1024): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Scope.enter: 0% (0 exclusive)
    2: (Scope.java:219): 0% (0 exclusive)
  1: driver.EntryPoint.main: 0% (0 exclusive)
    2: (EntryPoint.java:24): 0% (0 exclusive)
  1: compiler.MacroExpander.transform: 0% (0 exclusive)
    2: (MacroExpander.java:32): 0% (0 exclusive)
  1: trees.BoundedMatchIterator.<init>: 0% (0 exclusive)
    2: (BoundedMatchIterator.java:48): 0% (0 exclusive)
    2: (BoundedMatchIterator.java:49): 0% (0 exclusive)
  1: sun.net.www.protocol.jar.Handler.parseURL: 0% (0 exclusive)
    2: (Handler.java:152): 0% (0 exclusive)
    2: (Handler.java:156): 0% (0 exclusive)
  1: com.sun.tools.javac.comp.Resolve.findFun: 0% (0 exclusive)
    2: (Resolve.java:1027): 0% (0 exclusive)
  1: sun.nio.fs.WindowsNativeDispatcher.GetFileAttributesEx: 0% (0 exclusive)
    2: (WindowsNativeDispatcher.java:369): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Symtab.enterClass: 0% (0 exclusive)
    2: (Symtab.java:287): 0% (0 exclusive)
  1: trees.MatchFinder.find: 0% (0 exclusive)
    2: (MatchFinder.java:49): 0% (0 exclusive)
    2: (MatchFinder.java:55): 0% (0 exclusive)
  1: java.util.AbstractList$Itr.<init>: 0% (0 exclusive)
    2: (AbstractList.java:330): 0% (0 exclusive)
  1: com.sun.tools.javac.jvm.Items.<init>: 0% (0 exclusive)
    2: (Items.java:75): 0% (0 exclusive)
  1: parser.Matcher.visitChild: 0% (0 exclusive)
    2: (Matcher.java:149): 0% (0 exclusive)
  1: com.sun.tools.javac.file.ZipFileIndex.checkIndex: 0% (0 exclusive)
    2: (ZipFileIndex.java:188): 0% (0 exclusive)
    2: (ZipFileIndex.java:190): 0% (0 exclusive)
    2: (ZipFileIndex.java:191): 0% (0 exclusive)
  1: com.sun.tools.javac.main.Main.processArgs: 0% (0 exclusive)
    2: (Main.java:254): 0% (0 exclusive)
  1: com.sun.tools.javac.util.Name.toString: 0% (0 exclusive)
    2: (Name.java:146): 0% (0 exclusive)
  1: java.nio.file.Files.readAttributes: 0% (0 exclusive)
    2: (Files.java:1669): 0% (0 exclusive)
  1: com.sun.tools.javac.code.DeferredLintHandler.flush: 0% (0 exclusive)
    2: (DeferredLintHandler.java:76): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Symbol$TypeSymbol.<init>: 0% (0 exclusive)
    2: (Symbol.java:518): 0% (0 exclusive)
  1: com.sun.tools.javac.file.ZipFileIndex$DirectoryEntry.<init>: 0% (0 exclusive)
    2: (ZipFileIndex.java:720): 0% (0 exclusive)
  1: grammar.ExpressionTreeCleaner.visit: 0% (0 exclusive)
    2: (ExpressionTreeCleaner.java:206): 0% (0 exclusive)
    2: (ExpressionTreeCleaner.java:221): 0% (0 exclusive)
    2: (ExpressionTreeCleaner.java:227): 0% (0 exclusive)
    2: (ExpressionTreeCleaner.java:245): 0% (0 exclusive)
    2: (ExpressionTreeCleaner.java:270): 0% (0 exclusive)
  1: java.util.HashSet.<init>: 0% (0 exclusive)
    2: (HashSet.java:102): 0% (0 exclusive)
    2: (HashSet.java:103): 0% (0 exclusive)
    2: (HashSet.java:117): 0% (0 exclusive)
  1: java.util.HashMap.addEntry: 0% (0 exclusive)
    2: (HashMap.java:766): 0% (0 exclusive)
    2: (HashMap.java:768): 0% (0 exclusive)
  1: com.sun.tools.javac.tree.TreeScanner.scan: 0% (0 exclusive)
    2: (TreeScanner.java:49): 0% (0 exclusive)
  1: sun.nio.fs.NativeBuffers.getNativeBuffer: 0% (0 exclusive)
    2: (NativeBuffers.java:82): 0% (0 exclusive)
  1: java.io.FileInputStream.read: 0% (0 exclusive)
    2: (FileInputStream.java:242): 0% (0 exclusive)
  1: compiler.java.CollectingJavaFileManager.list: 0% (0 exclusive)
    2: (CollectingJavaFileManager.java:123): 0% (0 exclusive)
  1: java.util.zip.ZipFile$ZipFileInputStream.read: 0% (0 exclusive)
    2: (ZipFile.java:677): 0% (0 exclusive)
  1: java.util.regex.Pattern$CharPropertyNames.charPropertyFor: 0% (0 exclusive)
    2: (Pattern.java:5454): 0% (0 exclusive)
  1: sun.nio.fs.NativeBuffers.releaseNativeBuffer: 0% (0 exclusive)
    2: (NativeBuffers.java:92): 0% (0 exclusive)
  1: com.sun.tools.javac.jvm.ClassReader.initAttributeReaders: 0% (0 exclusive)
    2: (ClassReader.java:935): 0% (0 exclusive)
  1: sun.misc.Resource.getBytes: 0% (0 exclusive)
    2: (Resource.java:100): 0% (0 exclusive)
    2: (Resource.java:117): 0% (0 exclusive)
    2: (Resource.java:124): 0% (0 exclusive)
    2: (Resource.java:143): 0% (0 exclusive)
  1: com.sun.tools.javac.util.JavacMessages.setCurrentLocale: 0% (0 exclusive)
    2: (JavacMessages.java:73): 0% (0 exclusive)
  1: compiler.macros.ArraySliceMacro.expand: 0% (0 exclusive)
    2: (ArraySliceMacro.java:21): 0% (0 exclusive)
  1: com.sun.tools.javac.file.ZipFileIndex.read: 0% (0 exclusive)
    2: (ZipFileIndex.java:358): 0% (0 exclusive)
    2: (ZipFileIndex.java:360): 0% (0 exclusive)
  1: driver.SourceRepository.hint: 0% (0 exclusive)
    2: (SourceRepository.java:68): 0% (0 exclusive)
  1: java.lang.String.split: 0% (0 exclusive)
    2: (String.java:2359): 0% (0 exclusive)
    2: (String.java:2403): 0% (0 exclusive)
  1: sun.nio.cs.UTF_8$Decoder.decodeLoop: 0% (0 exclusive)
    2: (UTF_8.java:356): 0% (0 exclusive)
  1: com.sun.tools.javac.util.ByteBuffer.appendBytes: 0% (0 exclusive)
    2: (ByteBuffer.java:80): 0% (0 exclusive)
    2: (ByteBuffer.java:88): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Symtab.<init>: 0% (0 exclusive)
    2: (Symtab.java:342): 0% (0 exclusive)
  1: java.io.FileInputStream.<init>: 0% (0 exclusive)
    2: (FileInputStream.java:136): 0% (0 exclusive)
    2: (FileInputStream.java:138): 0% (0 exclusive)
    2: (FileInputStream.java:56): 0% (0 exclusive)
  1: java.io.Win32FileSystem.normalize: 0% (0 exclusive)
    2: (Win32FileSystem.java:122): 0% (0 exclusive)
    2: (Win32FileSystem.java:130): 0% (0 exclusive)
    2: (Win32FileSystem.java:174): 0% (0 exclusive)
    2: (Win32FileSystem.java:196): 0% (0 exclusive)
  1: compiler.util.Quoter.dynamicQuote: 0% (0 exclusive)
    2: (Quoter.java:39): 0% (0 exclusive)
  1: com.sun.tools.javac.comp.Resolve.rawInstantiate: 0% (0 exclusive)
    2: (Resolve.java:395): 0% (0 exclusive)
  1: com.sun.tools.javac.parser.Scanner.hexFloatsWork: 0% (0 exclusive)
    2: (Scanner.java:147): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Source.allowVarargs: 0% (0 exclusive)
    2: (Source.java:153): 0% (0 exclusive)
  1: compiler.MatchTreeTransformer.transformChilds: 0% (0 exclusive)
    2: (MatchTreeTransformer.java:29): 0% (0 exclusive)
    2: (MatchTreeTransformer.java:32): 0% (0 exclusive)
    2: (MatchTreeTransformer.java:35): 0% (0 exclusive)
  1: java.io.BufferedOutputStream.write: 0% (0 exclusive)
    2: (BufferedOutputStream.java:122): 0% (0 exclusive)
  1: java.lang.StringCoding.deref: 0% (0 exclusive)
    2: (StringCoding.java:63): 0% (0 exclusive)
  1: java.util.jar.Manifest$FastInputStream.fill: 0% (0 exclusive)
    2: (Manifest.java:439): 0% (0 exclusive)
  1: com.sun.tools.javac.util.ListBuffer.clear: 0% (0 exclusive)
    2: (ListBuffer.java:76): 0% (0 exclusive)
  1: java.nio.file.FileSystems.getDefault: 0% (0 exclusive)
    2: (FileSystems.java:176): 0% (0 exclusive)
