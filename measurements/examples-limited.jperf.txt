Method Times by Caller (times inclusive): 3076 ticks
  1: java.lang.Object.<init>: 71,26% (2192 inclusive / 2191 exclusive)
    2: com.sun.demo.jvmti.hprof.Tracker.ObjectInit: 0,03% (1 inclusive / 0 exclusive)
      3: java.lang.Thread.currentThread: 0,03% (1 inclusive / 1 exclusive)
  1: parser.ParseData.<init>: 34,33% (1056 inclusive / 0 exclusive)
    2: parser.ParseErrors.<init>: 13,98% (430 inclusive / 1 exclusive)
      3: java.lang.Object.<init>: 7,18% (221 inclusive / 221 exclusive)
      3: java.util.ArrayList.<init>: 6,76% (208 inclusive / 208 exclusive)
    2: java.lang.Object.<init>: 13,52% (416 inclusive / 416 exclusive)
    2: java.util.ArrayList.<init>: 6,83% (210 inclusive / 0 exclusive)
      3: java.util.ArrayList.<init>: 6,83% (210 inclusive / 210 exclusive)
  1: parser.Matcher.parse: 34,33% (1056 inclusive / 0 exclusive)
    2: parser.ParseData.<init>: 34,33% (1056 inclusive / 0 exclusive)
      3: parser.ParseErrors.<init>: 13,98% (430 inclusive / 1 exclusive)
        4: java.lang.Object.<init>: 7,18% (221 inclusive / 221 exclusive)
        4: java.util.ArrayList.<init>: 6,76% (208 inclusive / 208 exclusive)
      3: java.lang.Object.<init>: 13,52% (416 inclusive / 416 exclusive)
      3: java.util.ArrayList.<init>: 6,83% (210 inclusive / 0 exclusive)
        4: java.util.ArrayList.<init>: 6,83% (210 inclusive / 210 exclusive)
  1: java.util.ArrayList.<init>: 28,38% (873 inclusive / 419 exclusive)
    2: java.util.AbstractList.<init>: 14,76% (454 inclusive / 0 exclusive)
      3: java.util.AbstractCollection.<init>: 14,76% (454 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 14,76% (454 inclusive / 454 exclusive)
  1: java.util.AbstractCollection.<init>: 16,87% (519 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 16,87% (519 inclusive / 519 exclusive)
  1: java.util.AbstractList.<init>: 14,95% (460 inclusive / 0 exclusive)
    2: java.util.AbstractCollection.<init>: 14,95% (460 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 14,95% (460 inclusive / 460 exclusive)
  1: parser.LimitedMemo.get: 14,53% (447 inclusive / 0 exclusive)
    2: parser.Matcher.parse: 13,56% (417 inclusive / 0 exclusive)
      3: parser.ParseData.<init>: 13,56% (417 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 13,52% (416 inclusive / 416 exclusive)
        4: parser.ParseErrors.<init>: 0,03% (1 inclusive / 1 exclusive)
    2: parser.LimitedMemo$Memoed.<init>: 0,98% (30 inclusive / 0 exclusive)
      3: parser.LimitedMemo$Memoed.<init>: 0,98% (30 inclusive / 16 exclusive)
        4: java.lang.Object.<init>: 0,46% (14 inclusive / 14 exclusive)
  1: parser.ParseErrors.<init>: 13,98% (430 inclusive / 1 exclusive)
    2: java.lang.Object.<init>: 7,18% (221 inclusive / 221 exclusive)
    2: java.util.ArrayList.<init>: 6,76% (208 inclusive / 208 exclusive)
  1: java.lang.String.<init>: 7,48% (230 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 5,82% (179 inclusive / 179 exclusive)
    2: java.util.Arrays.copyOfRange: 1,17% (36 inclusive / 36 exclusive)
    2: java.lang.StringCoding.decode: 0,42% (13 inclusive / 0 exclusive)
      3: java.lang.StringCoding$StringDecoder.decode: 0,42% (13 inclusive / 13 exclusive)
    2: java.util.Arrays.copyOf: 0,07% (2 inclusive / 2 exclusive)
  1: util.apache.CharSequenceTranslator.translate: 6,31% (194 inclusive / 0 exclusive)
    2: java.lang.Character.toChars: 6,11% (188 inclusive / 188 exclusive)
    2: java.io.StringWriter.<init>: 0,2% (6 inclusive / 0 exclusive)
      3: java.io.Writer.<init>: 0,2% (6 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,2% (6 inclusive / 6 exclusive)
  1: java.lang.Character.toChars: 6,11% (188 inclusive / 188 exclusive)
  1: source.SourceString.<init>: 5,95% (183 inclusive / 0 exclusive)
    2: util.apache.CharSequenceTranslator.translate: 5,95% (183 inclusive / 0 exclusive)
      3: util.apache.CharSequenceTranslator.translate: 5,95% (183 inclusive / 0 exclusive)
        4: java.lang.Character.toChars: 5,95% (183 inclusive / 183 exclusive)
  1: java.lang.Integer.valueOf: 4,55% (140 inclusive / 0 exclusive)
    2: java.lang.Integer.<init>: 4,55% (140 inclusive / 0 exclusive)
      3: java.lang.Number.<init>: 4,55% (140 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 4,55% (140 inclusive / 140 exclusive)
  1: java.lang.Integer.<init>: 4,55% (140 inclusive / 0 exclusive)
    2: java.lang.Number.<init>: 4,55% (140 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 4,55% (140 inclusive / 140 exclusive)
  1: java.lang.Number.<init>: 4,55% (140 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 4,55% (140 inclusive / 140 exclusive)
  1: java.util.AbstractList.iterator: 4,42% (136 inclusive / 0 exclusive)
    2: java.util.AbstractList$Itr.<init>: 4,42% (136 inclusive / 0 exclusive)
      3: java.util.AbstractList$Itr.<init>: 4,42% (136 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 4,42% (136 inclusive / 136 exclusive)
  1: java.util.AbstractList$Itr.<init>: 4,42% (136 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 4,42% (136 inclusive / 136 exclusive)
  1: java.lang.String.substring: 4,23% (130 inclusive / 1 exclusive)
    2: java.lang.String.<init>: 4,19% (129 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 4,19% (129 inclusive / 129 exclusive)
  1: java.util.ArrayList.iterator: 3,64% (112 inclusive / 0 exclusive)
    2: java.util.ArrayList$Itr.<init>: 3,64% (112 inclusive / 0 exclusive)
      3: java.util.ArrayList$Itr.<init>: 3,64% (112 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 3,64% (112 inclusive / 112 exclusive)
  1: java.util.ArrayList$Itr.<init>: 3,64% (112 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 3,64% (112 inclusive / 112 exclusive)
  1: java.util.Collections$UnmodifiableRandomAccessList.<init>: 2,67% (82 inclusive / 0 exclusive)
    2: java.util.Collections$UnmodifiableList.<init>: 2,67% (82 inclusive / 0 exclusive)
      3: java.util.Collections$UnmodifiableCollection.<init>: 2,67% (82 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 2,67% (82 inclusive / 82 exclusive)
  1: java.util.Collections$UnmodifiableList.<init>: 2,67% (82 inclusive / 0 exclusive)
    2: java.util.Collections$UnmodifiableCollection.<init>: 2,67% (82 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 2,67% (82 inclusive / 82 exclusive)
  1: java.util.Collections$UnmodifiableCollection.<init>: 2,67% (82 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 2,67% (82 inclusive / 82 exclusive)
  1: parser.ParseData.succeed: 2,54% (78 inclusive / 0 exclusive)
    2: parser.Match.<init>: 2,54% (78 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 2,54% (78 inclusive / 78 exclusive)
  1: parser.Match.<init>: 2,54% (78 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 2,54% (78 inclusive / 78 exclusive)
  1: parser.Matcher.succeed: 2,54% (78 inclusive / 0 exclusive)
    2: parser.ParseData.succeed: 2,54% (78 inclusive / 0 exclusive)
      3: parser.Match.<init>: 2,54% (78 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 2,54% (78 inclusive / 78 exclusive)
  1: com.sun.tools.javac.file.RelativePath$RelativeFile.<init>: 1,92% (59 inclusive / 0 exclusive)
    2: java.lang.StringBuilder.<init>: 0,94% (29 inclusive / 0 exclusive)
      3: java.lang.AbstractStringBuilder.<init>: 0,94% (29 inclusive / 15 exclusive)
        4: java.lang.Object.<init>: 0,46% (14 inclusive / 14 exclusive)
    2: com.sun.tools.javac.file.RelativePath.<init>: 0,49% (15 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,49% (15 inclusive / 15 exclusive)
    2: java.lang.StringBuilder.toString: 0,49% (15 inclusive / 0 exclusive)
      3: java.lang.String.<init>: 0,49% (15 inclusive / 0 exclusive)
        4: java.util.Arrays.copyOfRange: 0,26% (8 inclusive / 8 exclusive)
        4: java.lang.Object.<init>: 0,23% (7 inclusive / 7 exclusive)
  1: java.lang.AbstractStringBuilder.<init>: 1,82% (56 inclusive / 23 exclusive)
    2: java.lang.Object.<init>: 1,07% (33 inclusive / 32 exclusive)
      3: com.sun.demo.jvmti.hprof.Tracker.ObjectInit: 0,03% (1 inclusive / 0 exclusive)
        4: java.lang.Thread.currentThread: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.util.List.<init>: 1,82% (56 inclusive / 0 exclusive)
    2: java.util.AbstractCollection.<init>: 1,82% (56 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 1,82% (56 inclusive / 56 exclusive)
  1: trees.MatchIterator$NodeState.<init>: 1,76% (54 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 1,76% (54 inclusive / 54 exclusive)
  1: trees.MatchIterator.next: 1,76% (54 inclusive / 0 exclusive)
    2: trees.MatchIterator.forward: 1,76% (54 inclusive / 0 exclusive)
      3: trees.MatchIterator$NodeState.<init>: 1,76% (54 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 1,76% (54 inclusive / 54 exclusive)
  1: trees.MatchIterator.forward: 1,76% (54 inclusive / 0 exclusive)
    2: trees.MatchIterator$NodeState.<init>: 1,76% (54 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 1,76% (54 inclusive / 54 exclusive)
  1: java.util.Arrays.copyOf: 1,69% (52 inclusive / 49 exclusive)
    2: java.lang.Class.getComponentType: 0,07% (2 inclusive / 2 exclusive)
    2: java.lang.reflect.Array.newInstance: 0,03% (1 inclusive / 0 exclusive)
      3: java.lang.reflect.Array.newArray: 0,03% (1 inclusive / 1 exclusive)
  1: source.SourceFileText.at: 1,69% (52 inclusive / 0 exclusive)
    2: java.lang.String.substring: 1,69% (52 inclusive / 1 exclusive)
      3: java.lang.String.<init>: 1,66% (51 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 1,66% (51 inclusive / 51 exclusive)
  1: java.lang.StringBuilder.<init>: 1,63% (50 inclusive / 0 exclusive)
    2: java.lang.AbstractStringBuilder.<init>: 1,63% (50 inclusive / 23 exclusive)
      3: java.lang.Object.<init>: 0,88% (27 inclusive / 27 exclusive)
  1: source.SourceString.at: 1,46% (45 inclusive / 0 exclusive)
    2: java.lang.String.substring: 1,46% (45 inclusive / 0 exclusive)
      3: java.lang.String.<init>: 1,46% (45 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 1,46% (45 inclusive / 45 exclusive)
  1: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.readEntry: 1,43% (44 inclusive / 0 exclusive)
    2: java.lang.String.<init>: 0,91% (28 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,49% (15 inclusive / 15 exclusive)
      3: java.lang.StringCoding.decode: 0,42% (13 inclusive / 0 exclusive)
        4: java.lang.StringCoding$StringDecoder.decode: 0,42% (13 inclusive / 13 exclusive)
    2: com.sun.tools.javac.file.ZipFileIndex$Entry.<init>: 0,52% (16 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,52% (16 inclusive / 16 exclusive)
  1: util.ArrayIterator.<init>: 1,4% (43 inclusive / 0 exclusive)
    2: util.AbstractBiIterator.<init>: 1,4% (43 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 1,4% (43 inclusive / 43 exclusive)
  1: util.AbstractBiIterator.<init>: 1,4% (43 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 1,4% (43 inclusive / 43 exclusive)
  1: java.lang.StringBuilder.toString: 1,37% (42 inclusive / 0 exclusive)
    2: java.lang.String.<init>: 1,37% (42 inclusive / 0 exclusive)
      3: java.util.Arrays.copyOfRange: 0,85% (26 inclusive / 26 exclusive)
      3: java.lang.Object.<init>: 0,52% (16 inclusive / 16 exclusive)
  1: com.sun.tools.javac.util.List.reverse: 1,2% (37 inclusive / 0 exclusive)
    2: com.sun.tools.javac.util.List.<init>: 1,2% (37 inclusive / 0 exclusive)
      3: java.util.AbstractCollection.<init>: 1,2% (37 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 1,2% (37 inclusive / 37 exclusive)
  1: java.util.Arrays.copyOfRange: 1,17% (36 inclusive / 36 exclusive)
  1: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.buildIndex: 1,01% (31 inclusive / 0 exclusive)
    2: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.readEntry: 1,01% (31 inclusive / 0 exclusive)
      3: com.sun.tools.javac.file.ZipFileIndex$Entry.<init>: 0,52% (16 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,52% (16 inclusive / 16 exclusive)
      3: java.lang.String.<init>: 0,49% (15 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,49% (15 inclusive / 15 exclusive)
  1: java.util.HashMap$Entry.<init>: 1,01% (31 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 1,01% (31 inclusive / 31 exclusive)
  1: java.util.HashMap.put: 1,01% (31 inclusive / 0 exclusive)
    2: java.util.HashMap.addEntry: 1,01% (31 inclusive / 0 exclusive)
      3: java.util.HashMap$Entry.<init>: 0,98% (30 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,98% (30 inclusive / 30 exclusive)
      3: java.util.HashMap.resize: 0,03% (1 inclusive / 0 exclusive)
        4: java.util.HashMap.transfer: 0,03% (1 inclusive / 1 exclusive)
  1: java.util.HashMap.addEntry: 1,01% (31 inclusive / 0 exclusive)
    2: java.util.HashMap$Entry.<init>: 0,98% (30 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,98% (30 inclusive / 30 exclusive)
    2: java.util.HashMap.resize: 0,03% (1 inclusive / 0 exclusive)
      3: java.util.HashMap.transfer: 0,03% (1 inclusive / 1 exclusive)
  1: parser.LimitedMemo$Memoed.<init>: 0,98% (30 inclusive / 16 exclusive)
    2: java.lang.Object.<init>: 0,46% (14 inclusive / 14 exclusive)
  1: java.net.URLClassLoader.defineClass: 0,72% (22 inclusive / 0 exclusive)
    2: java.security.SecureClassLoader.defineClass: 0,36% (11 inclusive / 0 exclusive)
      3: java.lang.ClassLoader.defineClass: 0,36% (11 inclusive / 0 exclusive)
        4: java.lang.ClassLoader.defineClass1: 0,36% (11 inclusive / 11 exclusive)
    2: sun.misc.Resource.getBytes: 0,23% (7 inclusive / 0 exclusive)
      3: java.util.Arrays.copyOf: 0,23% (7 inclusive / 7 exclusive)
    2: java.security.CodeSource.<init>: 0,07% (2 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,07% (2 inclusive / 2 exclusive)
    2: java.lang.System.nanoTime: 0,03% (1 inclusive / 1 exclusive)
    2: sun.misc.URLClassPath$JarLoader$2.getManifest: 0,03% (1 inclusive / 0 exclusive)
      3: java.util.jar.JarFile.getManifest: 0,03% (1 inclusive / 0 exclusive)
        4: java.util.jar.JarFile.getManifestFromReference: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.file.RelativePath.<init>: 0,72% (22 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,72% (22 inclusive / 22 exclusive)
  1: java.lang.AbstractStringBuilder.append: 0,62% (19 inclusive / 0 exclusive)
    2: java.lang.AbstractStringBuilder.ensureCapacityInternal: 0,62% (19 inclusive / 0 exclusive)
      3: java.lang.AbstractStringBuilder.expandCapacity: 0,62% (19 inclusive / 0 exclusive)
        4: java.util.Arrays.copyOf: 0,62% (19 inclusive / 19 exclusive)
  1: java.lang.AbstractStringBuilder.expandCapacity: 0,62% (19 inclusive / 0 exclusive)
    2: java.util.Arrays.copyOf: 0,62% (19 inclusive / 19 exclusive)
  1: java.lang.AbstractStringBuilder.ensureCapacityInternal: 0,62% (19 inclusive / 0 exclusive)
    2: java.lang.AbstractStringBuilder.expandCapacity: 0,62% (19 inclusive / 0 exclusive)
      3: java.util.Arrays.copyOf: 0,62% (19 inclusive / 19 exclusive)
  1: java.lang.String.replace: 0,62% (19 inclusive / 9 exclusive)
    2: java.lang.String.<init>: 0,33% (10 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,33% (10 inclusive / 10 exclusive)
  1: com.sun.tools.javac.file.ZipFileIndex$Entry.<init>: 0,59% (18 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,59% (18 inclusive / 18 exclusive)
  1: parser.Matcher.visitChild: 0,52% (16 inclusive / 0 exclusive)
    2: parser.LimitedMemo.get: 0,52% (16 inclusive / 0 exclusive)
      3: parser.LimitedMemo$Memoed.<init>: 0,52% (16 inclusive / 0 exclusive)
        4: parser.LimitedMemo$Memoed.<init>: 0,52% (16 inclusive / 16 exclusive)
  1: java.util.ArrayList.grow: 0,49% (15 inclusive / 0 exclusive)
    2: java.util.Arrays.copyOf: 0,49% (15 inclusive / 0 exclusive)
      3: java.util.Arrays.copyOf: 0,49% (15 inclusive / 15 exclusive)
  1: java.util.ArrayList.ensureCapacityInternal: 0,49% (15 inclusive / 0 exclusive)
    2: java.util.ArrayList.grow: 0,49% (15 inclusive / 0 exclusive)
      3: java.util.Arrays.copyOf: 0,49% (15 inclusive / 0 exclusive)
        4: java.util.Arrays.copyOf: 0,49% (15 inclusive / 15 exclusive)
  1: java.io.WinNTFileSystem.getBooleanAttributes: 0,46% (14 inclusive / 14 exclusive)
  1: java.io.File.<init>: 0,46% (14 inclusive / 0 exclusive)
    2: java.io.Win32FileSystem.resolve: 0,29% (9 inclusive / 3 exclusive)
      3: java.lang.String.<init>: 0,2% (6 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,13% (4 inclusive / 4 exclusive)
        4: java.util.Arrays.copyOf: 0,07% (2 inclusive / 2 exclusive)
    2: java.lang.Object.<init>: 0,16% (5 inclusive / 5 exclusive)
  1: java.lang.StringCoding.decode: 0,42% (13 inclusive / 0 exclusive)
    2: java.lang.StringCoding$StringDecoder.decode: 0,42% (13 inclusive / 13 exclusive)
  1: sun.misc.URLClassPath$FileLoader.getResource: 0,42% (13 inclusive / 0 exclusive)
    2: java.io.File.exists: 0,16% (5 inclusive / 0 exclusive)
      3: java.io.WinNTFileSystem.getBooleanAttributes: 0,16% (5 inclusive / 5 exclusive)
    2: java.lang.String.replace: 0,1% (3 inclusive / 0 exclusive)
      3: java.lang.String.<init>: 0,1% (3 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,1% (3 inclusive / 3 exclusive)
    2: java.net.URL.<init>: 0,1% (3 inclusive / 0 exclusive)
      3: java.net.URL.<init>: 0,1% (3 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,1% (3 inclusive / 3 exclusive)
    2: sun.net.www.ParseUtil.encodePath: 0,03% (1 inclusive / 1 exclusive)
    2: java.io.File.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: java.io.Win32FileSystem.resolve: 0,03% (1 inclusive / 1 exclusive)
  1: java.lang.StringCoding$StringDecoder.decode: 0,42% (13 inclusive / 13 exclusive)
  1: java.net.URLStreamHandler.parseURL: 0,42% (13 inclusive / 1 exclusive)
    2: java.lang.StringBuilder.<init>: 0,16% (5 inclusive / 0 exclusive)
      3: java.lang.AbstractStringBuilder.<init>: 0,16% (5 inclusive / 2 exclusive)
        4: java.lang.Object.<init>: 0,1% (3 inclusive / 3 exclusive)
    2: java.lang.StringBuilder.toString: 0,13% (4 inclusive / 0 exclusive)
      3: java.lang.String.<init>: 0,13% (4 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,07% (2 inclusive / 2 exclusive)
        4: java.util.Arrays.copyOfRange: 0,07% (2 inclusive / 2 exclusive)
    2: java.lang.String.substring: 0,1% (3 inclusive / 0 exclusive)
      3: java.lang.String.<init>: 0,1% (3 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,1% (3 inclusive / 3 exclusive)
  1: com.sun.tools.javac.file.ZipFileIndex$Entry.getName: 0,39% (12 inclusive / 0 exclusive)
    2: com.sun.tools.javac.file.RelativePath$RelativeFile.<init>: 0,39% (12 inclusive / 0 exclusive)
      3: java.lang.StringBuilder.<init>: 0,39% (12 inclusive / 0 exclusive)
        4: java.lang.AbstractStringBuilder.<init>: 0,39% (12 inclusive / 12 exclusive)
  1: com.sun.tools.javac.file.RegularFileObject.inferBinaryName: 0,39% (12 inclusive / 0 exclusive)
    2: java.lang.StringBuilder.toString: 0,16% (5 inclusive / 0 exclusive)
      3: java.lang.String.<init>: 0,16% (5 inclusive / 0 exclusive)
        4: java.util.Arrays.copyOfRange: 0,1% (3 inclusive / 3 exclusive)
        4: java.lang.Object.<init>: 0,07% (2 inclusive / 2 exclusive)
    2: java.io.File.<init>: 0,1% (3 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,1% (3 inclusive / 3 exclusive)
    2: java.lang.StringBuilder.<init>: 0,07% (2 inclusive / 0 exclusive)
      3: java.lang.AbstractStringBuilder.<init>: 0,07% (2 inclusive / 1 exclusive)
        4: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
    2: java.lang.String.replace: 0,03% (1 inclusive / 1 exclusive)
    2: java.lang.String.substring: 0,03% (1 inclusive / 0 exclusive)
      3: java.lang.String.<init>: 0,03% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.file.ZipFileIndexArchive$ZipFileIndexFileObject.inferBinaryName: 0,36% (11 inclusive / 0 exclusive)
    2: java.lang.String.replace: 0,36% (11 inclusive / 6 exclusive)
      3: java.lang.String.<init>: 0,16% (5 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,16% (5 inclusive / 5 exclusive)
  1: java.lang.ClassLoader.defineClass: 0,36% (11 inclusive / 0 exclusive)
    2: java.lang.ClassLoader.defineClass1: 0,36% (11 inclusive / 11 exclusive)
  1: java.lang.ClassLoader.defineClass1: 0,36% (11 inclusive / 11 exclusive)
  1: com.sun.tools.javac.file.JavacFileManager.inferBinaryName: 0,36% (11 inclusive / 0 exclusive)
    2: com.sun.tools.javac.file.ZipFileIndexArchive$ZipFileIndexFileObject.inferBinaryName: 0,2% (6 inclusive / 0 exclusive)
      3: java.lang.String.replace: 0,2% (6 inclusive / 6 exclusive)
    2: com.sun.tools.javac.file.RegularFileObject.inferBinaryName: 0,16% (5 inclusive / 0 exclusive)
      3: java.io.File.<init>: 0,1% (3 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,1% (3 inclusive / 3 exclusive)
      3: java.lang.StringBuilder.<init>: 0,03% (1 inclusive / 0 exclusive)
        4: java.lang.AbstractStringBuilder.<init>: 0,03% (1 inclusive / 1 exclusive)
      3: java.lang.String.replace: 0,03% (1 inclusive / 1 exclusive)
  1: java.security.SecureClassLoader.defineClass: 0,36% (11 inclusive / 0 exclusive)
    2: java.lang.ClassLoader.defineClass: 0,36% (11 inclusive / 0 exclusive)
      3: java.lang.ClassLoader.defineClass1: 0,36% (11 inclusive / 11 exclusive)
  1: java.net.URLClassLoader.access$100: 0,33% (10 inclusive / 0 exclusive)
    2: java.net.URLClassLoader.defineClass: 0,33% (10 inclusive / 0 exclusive)
      3: sun.misc.Resource.getBytes: 0,23% (7 inclusive / 0 exclusive)
        4: java.util.Arrays.copyOf: 0,23% (7 inclusive / 7 exclusive)
      3: java.security.CodeSource.<init>: 0,07% (2 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,07% (2 inclusive / 2 exclusive)
      3: java.lang.System.nanoTime: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.file.JavacFileManager.listDirectory: 0,33% (10 inclusive / 0 exclusive)
    2: java.io.File.isDirectory: 0,1% (3 inclusive / 0 exclusive)
      3: java.io.WinNTFileSystem.getBooleanAttributes: 0,1% (3 inclusive / 3 exclusive)
    2: java.io.File.<init>: 0,1% (3 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,07% (2 inclusive / 2 exclusive)
      3: java.io.Win32FileSystem.resolve: 0,03% (1 inclusive / 1 exclusive)
    2: com.sun.tools.javac.file.RegularFileObject.<init>: 0,07% (2 inclusive / 0 exclusive)
      3: java.io.File.isDirectory: 0,07% (2 inclusive / 0 exclusive)
        4: java.io.WinNTFileSystem.getBooleanAttributes: 0,07% (2 inclusive / 2 exclusive)
    2: java.io.File.listFiles: 0,07% (2 inclusive / 0 exclusive)
      3: java.io.File.<init>: 0,03% (1 inclusive / 0 exclusive)
        4: java.io.Win32FileSystem.resolve: 0,03% (1 inclusive / 1 exclusive)
      3: java.io.File.list: 0,03% (1 inclusive / 0 exclusive)
        4: java.io.WinNTFileSystem.list: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.code.Symbol$ClassSymbol.<init>: 0,33% (10 inclusive / 0 exclusive)
    2: com.sun.tools.javac.code.Type$ClassType.<init>: 0,1% (3 inclusive / 0 exclusive)
      3: com.sun.tools.javac.code.Type.<init>: 0,1% (3 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,1% (3 inclusive / 3 exclusive)
    2: com.sun.tools.javac.code.Symbol$TypeSymbol.formFlatName: 0,1% (3 inclusive / 0 exclusive)
      3: com.sun.tools.javac.util.Name.append: 0,1% (3 inclusive / 3 exclusive)
    2: com.sun.tools.javac.code.Symbol$TypeSymbol.<init>: 0,07% (2 inclusive / 0 exclusive)
      3: com.sun.tools.javac.code.Symbol.<init>: 0,07% (2 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,07% (2 inclusive / 2 exclusive)
    2: com.sun.tools.javac.code.Symbol$TypeSymbol.formFullName: 0,07% (2 inclusive / 0 exclusive)
      3: com.sun.tools.javac.util.Name.append: 0,07% (2 inclusive / 2 exclusive)
  1: com.sun.tools.javac.util.Name.<init>: 0,33% (10 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,33% (10 inclusive / 10 exclusive)
  1: java.net.URLClassLoader$1.run: 0,33% (10 inclusive / 1 exclusive)
    2: java.lang.String.replace: 0,13% (4 inclusive / 2 exclusive)
      3: java.lang.String.<init>: 0,07% (2 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,07% (2 inclusive / 2 exclusive)
    2: java.lang.String.concat: 0,1% (3 inclusive / 1 exclusive)
      3: java.lang.String.<init>: 0,07% (2 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,07% (2 inclusive / 2 exclusive)
    2: sun.misc.URLClassPath.getResource: 0,03% (1 inclusive / 0 exclusive)
      3: sun.misc.URLClassPath$FileLoader.getResource: 0,03% (1 inclusive / 0 exclusive)
        4: sun.net.www.ParseUtil.encodePath: 0,03% (1 inclusive / 1 exclusive)
    2: java.net.URLClassLoader.access$100: 0,03% (1 inclusive / 0 exclusive)
      3: java.net.URLClassLoader.defineClass: 0,03% (1 inclusive / 0 exclusive)
        4: java.lang.System.nanoTime: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.util.SharedNameTable$NameImpl.<init>: 0,33% (10 inclusive / 0 exclusive)
    2: com.sun.tools.javac.util.Name.<init>: 0,33% (10 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,33% (10 inclusive / 10 exclusive)
  1: com.sun.tools.javac.file.RelativePath$RelativeDirectory.<init>: 0,29% (9 inclusive / 0 exclusive)
    2: com.sun.tools.javac.file.RelativePath.<init>: 0,23% (7 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,23% (7 inclusive / 7 exclusive)
    2: java.lang.StringBuilder.toString: 0,03% (1 inclusive / 0 exclusive)
      3: java.lang.String.<init>: 0,03% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
    2: java.lang.StringBuilder.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: java.lang.AbstractStringBuilder.<init>: 0,03% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.code.Type.<init>: 0,29% (9 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,29% (9 inclusive / 9 exclusive)
  1: java.io.Win32FileSystem.resolve: 0,29% (9 inclusive / 3 exclusive)
    2: java.lang.String.<init>: 0,2% (6 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,13% (4 inclusive / 4 exclusive)
      3: java.util.Arrays.copyOf: 0,07% (2 inclusive / 2 exclusive)
  1: java.lang.StringBuffer.toString: 0,29% (9 inclusive / 0 exclusive)
    2: java.lang.String.<init>: 0,29% (9 inclusive / 0 exclusive)
      3: java.util.Arrays.copyOfRange: 0,29% (9 inclusive / 9 exclusive)
  1: com.sun.tools.javac.file.JavacFileManager.listContainer: 0,29% (9 inclusive / 0 exclusive)
    2: com.sun.tools.javac.file.JavacFileManager.listDirectory: 0,2% (6 inclusive / 0 exclusive)
      3: java.io.File.isDirectory: 0,1% (3 inclusive / 0 exclusive)
        4: java.io.WinNTFileSystem.getBooleanAttributes: 0,1% (3 inclusive / 3 exclusive)
      3: java.io.File.<init>: 0,1% (3 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,07% (2 inclusive / 2 exclusive)
        4: java.io.Win32FileSystem.resolve: 0,03% (1 inclusive / 1 exclusive)
    2: com.sun.tools.javac.file.FSInfo.isDirectory: 0,1% (3 inclusive / 0 exclusive)
      3: java.io.File.isDirectory: 0,1% (3 inclusive / 0 exclusive)
        4: java.io.WinNTFileSystem.getBooleanAttributes: 0,1% (3 inclusive / 3 exclusive)
  1: java.lang.ClassLoader.loadClass: 0,29% (9 inclusive / 1 exclusive)
    2: java.net.URLClassLoader.findClass: 0,16% (5 inclusive / 0 exclusive)
      3: java.net.URLClassLoader$1.<init>: 0,1% (3 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,1% (3 inclusive / 3 exclusive)
      3: java.security.AccessController.doPrivileged: 0,07% (2 inclusive / 1 exclusive)
        4: java.net.URLClassLoader$1.run: 0,03% (1 inclusive / 1 exclusive)
    2: java.lang.ClassLoader.findBootstrapClassOrNull: 0,07% (2 inclusive / 0 exclusive)
      3: java.lang.ClassLoader.findBootstrapClass: 0,07% (2 inclusive / 2 exclusive)
    2: java.lang.ClassLoader.getClassLoadingLock: 0,03% (1 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.file.BaseFileObject.removeExtension: 0,29% (9 inclusive / 0 exclusive)
    2: java.lang.String.substring: 0,29% (9 inclusive / 0 exclusive)
      3: java.lang.String.<init>: 0,29% (9 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,29% (9 inclusive / 9 exclusive)
  1: java.io.Win32FileSystem.normalize: 0,29% (9 inclusive / 0 exclusive)
    2: java.lang.StringBuffer.toString: 0,13% (4 inclusive / 0 exclusive)
      3: java.lang.String.<init>: 0,13% (4 inclusive / 0 exclusive)
        4: java.util.Arrays.copyOfRange: 0,13% (4 inclusive / 4 exclusive)
    2: java.lang.StringBuffer.<init>: 0,1% (3 inclusive / 0 exclusive)
      3: java.lang.AbstractStringBuilder.<init>: 0,1% (3 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,1% (3 inclusive / 3 exclusive)
    2: java.lang.String.substring: 0,07% (2 inclusive / 0 exclusive)
      3: java.lang.String.<init>: 0,07% (2 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,07% (2 inclusive / 2 exclusive)
  1: com.sun.tools.javac.util.SharedNameTable.fromUtf: 0,26% (8 inclusive / 0 exclusive)
    2: com.sun.tools.javac.util.SharedNameTable$NameImpl.<init>: 0,26% (8 inclusive / 0 exclusive)
      3: com.sun.tools.javac.util.Name.<init>: 0,26% (8 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,26% (8 inclusive / 8 exclusive)
  1: sun.misc.URLClassPath.getResource: 0,26% (8 inclusive / 0 exclusive)
    2: sun.misc.URLClassPath$FileLoader.getResource: 0,23% (7 inclusive / 0 exclusive)
      3: java.io.File.exists: 0,16% (5 inclusive / 0 exclusive)
        4: java.io.WinNTFileSystem.getBooleanAttributes: 0,16% (5 inclusive / 5 exclusive)
      3: sun.net.www.ParseUtil.encodePath: 0,03% (1 inclusive / 1 exclusive)
      3: java.io.File.<init>: 0,03% (1 inclusive / 0 exclusive)
        4: java.io.Win32FileSystem.resolve: 0,03% (1 inclusive / 1 exclusive)
    2: sun.misc.URLClassPath$JarLoader.getResource: 0,03% (1 inclusive / 0 exclusive)
      3: sun.misc.URLClassPath$JarLoader.checkResource: 0,03% (1 inclusive / 0 exclusive)
        4: sun.net.www.ParseUtil.encodePath: 0,03% (1 inclusive / 1 exclusive)
  1: java.lang.String.toCharArray: 0,26% (8 inclusive / 8 exclusive)
  1: com.sun.tools.javac.util.List.of: 0,26% (8 inclusive / 0 exclusive)
    2: com.sun.tools.javac.util.List.<init>: 0,26% (8 inclusive / 0 exclusive)
      3: java.util.AbstractCollection.<init>: 0,26% (8 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,26% (8 inclusive / 8 exclusive)
  1: com.sun.tools.javac.util.Name.append: 0,26% (8 inclusive / 7 exclusive)
    2: com.sun.tools.javac.util.Name.getBytes: 0,03% (1 inclusive / 0 exclusive)
      3: java.lang.System.arraycopy: 0,03% (1 inclusive / 1 exclusive)
  1: java.io.File.isDirectory: 0,26% (8 inclusive / 0 exclusive)
    2: java.io.WinNTFileSystem.getBooleanAttributes: 0,26% (8 inclusive / 8 exclusive)
  1: sun.misc.Resource.getBytes: 0,26% (8 inclusive / 0 exclusive)
    2: java.util.Arrays.copyOf: 0,23% (7 inclusive / 7 exclusive)
    2: java.util.zip.ZipFile$ZipFileInputStream.read: 0,03% (1 inclusive / 0 exclusive)
      3: java.util.zip.ZipFile.access$1400: 0,03% (1 inclusive / 0 exclusive)
        4: java.util.zip.ZipFile.read: 0,03% (1 inclusive / 1 exclusive)
  1: java.io.StringWriter.<init>: 0,23% (7 inclusive / 0 exclusive)
    2: java.io.Writer.<init>: 0,2% (6 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,2% (6 inclusive / 6 exclusive)
    2: java.lang.StringBuffer.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: java.lang.AbstractStringBuilder.<init>: 0,03% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.code.Scope$Entry.<init>: 0,23% (7 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,23% (7 inclusive / 7 exclusive)
  1: compiler.java.CollectingJavaFileManager.inferBinaryName: 0,23% (7 inclusive / 0 exclusive)
    2: com.sun.tools.javac.file.JavacFileManager.inferBinaryName: 0,23% (7 inclusive / 0 exclusive)
      3: com.sun.tools.javac.file.ZipFileIndexArchive$ZipFileIndexFileObject.inferBinaryName: 0,2% (6 inclusive / 0 exclusive)
        4: java.lang.String.replace: 0,2% (6 inclusive / 6 exclusive)
      3: com.sun.tools.javac.file.RegularFileObject.inferBinaryName: 0,03% (1 inclusive / 0 exclusive)
        4: java.lang.String.replace: 0,03% (1 inclusive / 1 exclusive)
  1: java.util.ArrayList.toArray: 0,23% (7 inclusive / 0 exclusive)
    2: java.util.Arrays.copyOf: 0,23% (7 inclusive / 0 exclusive)
      3: java.util.Arrays.copyOf: 0,13% (4 inclusive / 4 exclusive)
      3: java.lang.Class.getComponentType: 0,07% (2 inclusive / 2 exclusive)
      3: java.lang.reflect.Array.newInstance: 0,03% (1 inclusive / 0 exclusive)
        4: java.lang.reflect.Array.newArray: 0,03% (1 inclusive / 1 exclusive)
  1: java.util.zip.ZipCoder.getBytes: 0,23% (7 inclusive / 2 exclusive)
    2: java.lang.String.toCharArray: 0,1% (3 inclusive / 3 exclusive)
    2: java.util.Arrays.copyOf: 0,07% (2 inclusive / 2 exclusive)
  1: com.sun.tools.javac.code.Scope.enter: 0,23% (7 inclusive / 0 exclusive)
    2: com.sun.tools.javac.code.Scope.makeEntry: 0,2% (6 inclusive / 0 exclusive)
      3: com.sun.tools.javac.code.Scope$Entry.<init>: 0,2% (6 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,2% (6 inclusive / 6 exclusive)
    2: com.sun.tools.javac.code.Scope.dble: 0,03% (1 inclusive / 1 exclusive)
  1: sun.net.www.protocol.jar.Handler.parseURL: 0,23% (7 inclusive / 0 exclusive)
    2: java.lang.StringBuilder.toString: 0,1% (3 inclusive / 0 exclusive)
      3: java.lang.String.<init>: 0,1% (3 inclusive / 0 exclusive)
        4: java.util.Arrays.copyOfRange: 0,07% (2 inclusive / 2 exclusive)
        4: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
    2: java.lang.String.substring: 0,07% (2 inclusive / 0 exclusive)
      3: java.lang.String.<init>: 0,07% (2 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,07% (2 inclusive / 2 exclusive)
    2: java.lang.StringBuilder.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: java.lang.AbstractStringBuilder.<init>: 0,03% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
    2: sun.net.www.ParseUtil.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: grammar.ExpressionTreeCleaner.visit: 0,23% (7 inclusive / 0 exclusive)
    2: java.lang.StringBuilder.toString: 0,13% (4 inclusive / 0 exclusive)
      3: java.lang.String.<init>: 0,13% (4 inclusive / 0 exclusive)
        4: java.util.Arrays.copyOfRange: 0,1% (3 inclusive / 3 exclusive)
        4: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
    2: java.lang.StringBuilder.<init>: 0,1% (3 inclusive / 0 exclusive)
      3: java.lang.AbstractStringBuilder.<init>: 0,1% (3 inclusive / 2 exclusive)
        4: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.jvm.ClassReader.sigToType: 0,2% (6 inclusive / 1 exclusive)
    2: com.sun.tools.javac.code.Type$MethodType.<init>: 0,1% (3 inclusive / 0 exclusive)
      3: com.sun.tools.javac.code.Type.<init>: 0,1% (3 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,1% (3 inclusive / 3 exclusive)
    2: com.sun.tools.javac.code.Type$ArrayType.<init>: 0,07% (2 inclusive / 0 exclusive)
      3: com.sun.tools.javac.code.Type.<init>: 0,07% (2 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,07% (2 inclusive / 2 exclusive)
  1: source.SourceComposed.strFromMatches: 0,2% (6 inclusive / 0 exclusive)
    2: java.lang.StringBuilder.toString: 0,1% (3 inclusive / 0 exclusive)
      3: java.lang.String.<init>: 0,1% (3 inclusive / 0 exclusive)
        4: java.util.Arrays.copyOfRange: 0,1% (3 inclusive / 3 exclusive)
    2: java.lang.StringBuilder.<init>: 0,1% (3 inclusive / 0 exclusive)
      3: java.lang.AbstractStringBuilder.<init>: 0,1% (3 inclusive / 2 exclusive)
        4: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: java.io.Writer.<init>: 0,2% (6 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,2% (6 inclusive / 6 exclusive)
  1: java.util.zip.ZipFile.getEntry: 0,2% (6 inclusive / 0 exclusive)
    2: java.util.zip.ZipCoder.getBytes: 0,2% (6 inclusive / 1 exclusive)
      3: java.lang.String.toCharArray: 0,1% (3 inclusive / 3 exclusive)
      3: java.util.Arrays.copyOf: 0,07% (2 inclusive / 2 exclusive)
  1: com.sun.tools.javac.util.List.prepend: 0,2% (6 inclusive / 0 exclusive)
    2: com.sun.tools.javac.util.List.<init>: 0,2% (6 inclusive / 0 exclusive)
      3: java.util.AbstractCollection.<init>: 0,2% (6 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,2% (6 inclusive / 6 exclusive)
  1: com.sun.tools.javac.code.Scope.makeEntry: 0,2% (6 inclusive / 0 exclusive)
    2: com.sun.tools.javac.code.Scope$Entry.<init>: 0,2% (6 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,2% (6 inclusive / 6 exclusive)
  1: com.sun.tools.javac.file.ZipFileIndexArchive.getFileObject: 0,2% (6 inclusive / 0 exclusive)
    2: com.sun.tools.javac.file.RelativePath$RelativeFile.<init>: 0,1% (3 inclusive / 0 exclusive)
      3: java.lang.StringBuilder.<init>: 0,1% (3 inclusive / 0 exclusive)
        4: java.lang.AbstractStringBuilder.<init>: 0,1% (3 inclusive / 3 exclusive)
    2: com.sun.tools.javac.file.ZipFileIndexArchive$ZipFileIndexFileObject.<init>: 0,1% (3 inclusive / 0 exclusive)
      3: com.sun.tools.javac.file.BaseFileObject.<init>: 0,1% (3 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,1% (3 inclusive / 3 exclusive)
  1: java.util.jar.JarFile.getEntry: 0,2% (6 inclusive / 0 exclusive)
    2: java.util.zip.ZipFile.getEntry: 0,2% (6 inclusive / 0 exclusive)
      3: java.util.zip.ZipCoder.getBytes: 0,2% (6 inclusive / 1 exclusive)
        4: java.lang.String.toCharArray: 0,1% (3 inclusive / 3 exclusive)
        4: java.util.Arrays.copyOf: 0,07% (2 inclusive / 2 exclusive)
  1: java.io.File.exists: 0,2% (6 inclusive / 0 exclusive)
    2: java.io.WinNTFileSystem.getBooleanAttributes: 0,2% (6 inclusive / 6 exclusive)
  1: trees.MatchFinder.find: 0,2% (6 inclusive / 0 exclusive)
    2: trees.MatchFinder.trace: 0,1% (3 inclusive / 0 exclusive)
      3: trees.MatchIterator.<init>: 0,1% (3 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,1% (3 inclusive / 3 exclusive)
    2: trees.BoundedMatchIterator.<init>: 0,07% (2 inclusive / 0 exclusive)
      3: trees.MatchIterator.<init>: 0,07% (2 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,07% (2 inclusive / 2 exclusive)
    2: trees.MatchFinder$Finder.find: 0,03% (1 inclusive / 1 exclusive)
  1: java.io.FileInputStream.<init>: 0,2% (6 inclusive / 0 exclusive)
    2: java.io.FileInputStream.open: 0,1% (3 inclusive / 3 exclusive)
    2: java.io.FileDescriptor.<init>: 0,07% (2 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,07% (2 inclusive / 2 exclusive)
    2: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: java.io.FileOutputStream.<init>: 0,16% (5 inclusive / 0 exclusive)
    2: java.io.FileOutputStream.open: 0,16% (5 inclusive / 5 exclusive)
  1: java.lang.StringBuffer.<init>: 0,16% (5 inclusive / 0 exclusive)
    2: java.lang.AbstractStringBuilder.<init>: 0,16% (5 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,16% (5 inclusive / 5 exclusive)
  1: java.io.FileOutputStream.open: 0,16% (5 inclusive / 5 exclusive)
  1: java.net.URLClassLoader.findClass: 0,16% (5 inclusive / 0 exclusive)
    2: java.net.URLClassLoader$1.<init>: 0,1% (3 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,1% (3 inclusive / 3 exclusive)
    2: java.security.AccessController.doPrivileged: 0,07% (2 inclusive / 1 exclusive)
      3: java.net.URLClassLoader$1.run: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.util.Name$Table.fromString: 0,16% (5 inclusive / 0 exclusive)
    2: java.lang.String.toCharArray: 0,16% (5 inclusive / 5 exclusive)
  1: trees.MatchIterator.<init>: 0,16% (5 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,16% (5 inclusive / 5 exclusive)
  1: com.sun.tools.javac.util.Names.fromString: 0,16% (5 inclusive / 0 exclusive)
    2: com.sun.tools.javac.util.Name$Table.fromString: 0,16% (5 inclusive / 0 exclusive)
      3: java.lang.String.toCharArray: 0,16% (5 inclusive / 5 exclusive)
  1: java.security.AccessController.doPrivileged: 0,16% (5 inclusive / 1 exclusive)
    2: java.net.URLClassLoader$1.run: 0,13% (4 inclusive / 1 exclusive)
      3: java.net.URLClassLoader$1.run: 0,1% (3 inclusive / 0 exclusive)
        4: java.lang.String.replace: 0,07% (2 inclusive / 2 exclusive)
        4: java.lang.String.concat: 0,03% (1 inclusive / 1 exclusive)
  1: java.util.Collections$UnmodifiableCollection.toArray: 0,16% (5 inclusive / 0 exclusive)
    2: java.util.ArrayList.toArray: 0,16% (5 inclusive / 0 exclusive)
      3: java.util.Arrays.copyOf: 0,16% (5 inclusive / 0 exclusive)
        4: java.util.Arrays.copyOf: 0,13% (4 inclusive / 4 exclusive)
        4: java.lang.Class.getComponentType: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.file.RelativePath$RelativeFile.dirname: 0,16% (5 inclusive / 0 exclusive)
    2: com.sun.tools.javac.file.RelativePath$RelativeDirectory.<init>: 0,13% (4 inclusive / 0 exclusive)
      3: com.sun.tools.javac.file.RelativePath.<init>: 0,13% (4 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,13% (4 inclusive / 4 exclusive)
    2: java.lang.String.substring: 0,03% (1 inclusive / 0 exclusive)
      3: java.lang.String.<init>: 0,03% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.code.Symbol$TypeSymbol.formFlatName: 0,16% (5 inclusive / 0 exclusive)
    2: com.sun.tools.javac.util.Name.append: 0,16% (5 inclusive / 4 exclusive)
      3: com.sun.tools.javac.util.Name.getBytes: 0,03% (1 inclusive / 0 exclusive)
        4: java.lang.System.arraycopy: 0,03% (1 inclusive / 1 exclusive)
  1: compiler.java.CompiledClass.dump: 0,16% (5 inclusive / 0 exclusive)
    2: java.io.FileOutputStream.<init>: 0,1% (3 inclusive / 0 exclusive)
      3: java.io.FileOutputStream.<init>: 0,1% (3 inclusive / 0 exclusive)
        4: java.io.FileOutputStream.open: 0,1% (3 inclusive / 3 exclusive)
    2: java.io.BufferedOutputStream.<init>: 0,03% (1 inclusive / 1 exclusive)
    2: java.io.FilterOutputStream.close: 0,03% (1 inclusive / 0 exclusive)
      3: java.io.FileOutputStream.close: 0,03% (1 inclusive / 0 exclusive)
        4: java.io.FileOutputStream.close0: 0,03% (1 inclusive / 1 exclusive)
  1: sun.misc.URLClassPath$JarLoader.checkResource: 0,16% (5 inclusive / 0 exclusive)
    2: sun.net.www.ParseUtil.encodePath: 0,1% (3 inclusive / 1 exclusive)
      3: java.lang.String.<init>: 0,07% (2 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
        4: java.util.Arrays.copyOfRange: 0,03% (1 inclusive / 1 exclusive)
    2: sun.misc.URLClassPath$JarLoader$2.<init>: 0,07% (2 inclusive / 0 exclusive)
      3: sun.misc.Resource.<init>: 0,07% (2 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,07% (2 inclusive / 2 exclusive)
  1: java.util.Vector.<init>: 0,16% (5 inclusive / 0 exclusive)
    2: java.util.AbstractList.<init>: 0,16% (5 inclusive / 0 exclusive)
      3: java.util.AbstractCollection.<init>: 0,16% (5 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,16% (5 inclusive / 5 exclusive)
  1: source.SourceFileText.<init>: 0,16% (5 inclusive / 0 exclusive)
    2: util.apache.CharSequenceTranslator.translate: 0,16% (5 inclusive / 0 exclusive)
      3: util.apache.CharSequenceTranslator.translate: 0,16% (5 inclusive / 0 exclusive)
        4: java.lang.Character.toChars: 0,16% (5 inclusive / 5 exclusive)
  1: sun.misc.URLClassPath$FileLoader$1.getInputStream: 0,16% (5 inclusive / 0 exclusive)
    2: java.io.FileInputStream.<init>: 0,16% (5 inclusive / 0 exclusive)
      3: java.io.FileDescriptor.<init>: 0,07% (2 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,07% (2 inclusive / 2 exclusive)
      3: java.io.FileInputStream.open: 0,07% (2 inclusive / 2 exclusive)
      3: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.main.JavaCompiler.<init>: 0,16% (5 inclusive / 2 exclusive)
    2: com.sun.tools.javac.jvm.ClassReader.instance: 0,07% (2 inclusive / 0 exclusive)
      3: com.sun.tools.javac.jvm.ClassReader.<init>: 0,07% (2 inclusive / 1 exclusive)
        4: com.sun.tools.javac.code.Scope.<init>: 0,03% (1 inclusive / 1 exclusive)
    2: com.sun.tools.javac.parser.ParserFactory.instance: 0,03% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.parser.ParserFactory.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.util.JCDiagnostic$Factory.qualify: 0,16% (5 inclusive / 0 exclusive)
    2: java.lang.StringBuilder.<init>: 0,1% (3 inclusive / 0 exclusive)
      3: java.lang.AbstractStringBuilder.<init>: 0,1% (3 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,1% (3 inclusive / 3 exclusive)
    2: java.lang.StringBuilder.toString: 0,07% (2 inclusive / 0 exclusive)
      3: java.lang.String.<init>: 0,07% (2 inclusive / 0 exclusive)
        4: java.util.Arrays.copyOfRange: 0,03% (1 inclusive / 1 exclusive)
        4: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: java.net.URL.<init>: 0,16% (5 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,1% (3 inclusive / 3 exclusive)
    2: sun.net.www.protocol.jar.Handler.parseURL: 0,03% (1 inclusive / 0 exclusive)
      3: sun.net.www.ParseUtil.<init>: 0,03% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
    2: sun.net.www.protocol.file.Handler.parseURL: 0,03% (1 inclusive / 0 exclusive)
      3: java.net.URLStreamHandler.parseURL: 0,03% (1 inclusive / 1 exclusive)
  1: java.lang.ref.Reference.<init>: 0,16% (5 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,16% (5 inclusive / 5 exclusive)
  1: com.sun.tools.javac.code.Symbol.<init>: 0,16% (5 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,16% (5 inclusive / 5 exclusive)
  1: com.sun.tools.javac.util.Names.<init>: 0,13% (4 inclusive / 0 exclusive)
    2: com.sun.tools.javac.util.Names.fromString: 0,07% (2 inclusive / 0 exclusive)
      3: com.sun.tools.javac.util.Name$Table.fromString: 0,07% (2 inclusive / 0 exclusive)
        4: java.lang.String.toCharArray: 0,07% (2 inclusive / 2 exclusive)
    2: com.sun.tools.javac.util.Names.createTable: 0,07% (2 inclusive / 0 exclusive)
      3: com.sun.tools.javac.util.SharedNameTable.<init>: 0,07% (2 inclusive / 0 exclusive)
        4: com.sun.tools.javac.util.SharedNameTable.<init>: 0,07% (2 inclusive / 2 exclusive)
  1: com.sun.tools.javac.file.RelativePath$RelativeDirectory.dirname: 0,13% (4 inclusive / 0 exclusive)
    2: com.sun.tools.javac.file.RelativePath$RelativeDirectory.<init>: 0,1% (3 inclusive / 0 exclusive)
      3: com.sun.tools.javac.file.RelativePath.<init>: 0,1% (3 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,1% (3 inclusive / 3 exclusive)
    2: java.lang.String.substring: 0,03% (1 inclusive / 0 exclusive)
      3: java.lang.String.<init>: 0,03% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: java.io.StringWriter.toString: 0,13% (4 inclusive / 0 exclusive)
    2: java.lang.StringBuffer.toString: 0,13% (4 inclusive / 0 exclusive)
      3: java.lang.String.<init>: 0,13% (4 inclusive / 0 exclusive)
        4: java.util.Arrays.copyOfRange: 0,13% (4 inclusive / 4 exclusive)
  1: com.sun.tools.javac.jvm.ClassReader.<init>: 0,13% (4 inclusive / 1 exclusive)
    2: com.sun.tools.javac.code.Scope.<init>: 0,03% (1 inclusive / 1 exclusive)
    2: com.sun.tools.javac.code.Symtab.instance: 0,03% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.code.Symtab.<init>: 0,03% (1 inclusive / 1 exclusive)
    2: java.util.EnumSet.of: 0,03% (1 inclusive / 0 exclusive)
      3: java.lang.Enum.getDeclaringClass: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.code.Type$ClassType.<init>: 0,13% (4 inclusive / 0 exclusive)
    2: com.sun.tools.javac.code.Type.<init>: 0,13% (4 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,13% (4 inclusive / 4 exclusive)
  1: com.sun.tools.javac.jvm.ClassReader.instance: 0,13% (4 inclusive / 0 exclusive)
    2: com.sun.tools.javac.jvm.ClassReader.<init>: 0,13% (4 inclusive / 1 exclusive)
      3: com.sun.tools.javac.code.Scope.<init>: 0,03% (1 inclusive / 1 exclusive)
      3: com.sun.tools.javac.code.Symtab.instance: 0,03% (1 inclusive / 0 exclusive)
        4: com.sun.tools.javac.code.Symtab.<init>: 0,03% (1 inclusive / 1 exclusive)
      3: java.util.EnumSet.of: 0,03% (1 inclusive / 0 exclusive)
        4: java.lang.Enum.getDeclaringClass: 0,03% (1 inclusive / 1 exclusive)
  1: java.lang.String.concat: 0,13% (4 inclusive / 1 exclusive)
    2: java.lang.String.<init>: 0,1% (3 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,1% (3 inclusive / 3 exclusive)
  1: com.sun.tools.javac.main.JavaCompiler.instance: 0,13% (4 inclusive / 0 exclusive)
    2: com.sun.tools.javac.main.JavaCompiler.<init>: 0,13% (4 inclusive / 2 exclusive)
      3: com.sun.tools.javac.parser.ParserFactory.instance: 0,03% (1 inclusive / 0 exclusive)
        4: com.sun.tools.javac.parser.ParserFactory.<init>: 0,03% (1 inclusive / 1 exclusive)
      3: com.sun.tools.javac.jvm.ClassReader.instance: 0,03% (1 inclusive / 0 exclusive)
        4: com.sun.tools.javac.jvm.ClassReader.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: sun.net.www.ParseUtil.encodePath: 0,13% (4 inclusive / 2 exclusive)
    2: java.lang.String.<init>: 0,07% (2 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
      3: java.util.Arrays.copyOfRange: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.file.FSInfo.isDirectory: 0,1% (3 inclusive / 0 exclusive)
    2: java.io.File.isDirectory: 0,1% (3 inclusive / 0 exclusive)
      3: java.io.WinNTFileSystem.getBooleanAttributes: 0,1% (3 inclusive / 3 exclusive)
  1: java.io.File.hashCode: 0,1% (3 inclusive / 0 exclusive)
    2: java.io.Win32FileSystem.hashCode: 0,1% (3 inclusive / 0 exclusive)
      3: java.lang.String.toLowerCase: 0,1% (3 inclusive / 3 exclusive)
  1: java.util.HashMap.get: 0,1% (3 inclusive / 0 exclusive)
    2: java.io.File.hashCode: 0,1% (3 inclusive / 0 exclusive)
      3: java.io.Win32FileSystem.hashCode: 0,1% (3 inclusive / 0 exclusive)
        4: java.lang.String.toLowerCase: 0,1% (3 inclusive / 3 exclusive)
  1: java.lang.System.arraycopy: 0,1% (3 inclusive / 3 exclusive)
  1: com.sun.tools.javac.tree.JCTree.<init>: 0,1% (3 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,1% (3 inclusive / 3 exclusive)
  1: com.sun.tools.javac.tree.JCTree$JCExpression.<init>: 0,1% (3 inclusive / 0 exclusive)
    2: com.sun.tools.javac.tree.JCTree.<init>: 0,1% (3 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,1% (3 inclusive / 3 exclusive)
  1: com.sun.tools.javac.main.RecognizedOptions.getAll: 0,1% (3 inclusive / 1 exclusive)
    2: com.sun.tools.javac.main.RecognizedOptions$17.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.main.JavacOption$Option.<init>: 0,03% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
    2: com.sun.tools.javac.main.RecognizedOptions.getXLintChoices: 0,03% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.code.Lint$LintCategory.<clinit>: 0,03% (1 inclusive / 1 exclusive)
  1: trees.MatchFinder.trace: 0,1% (3 inclusive / 0 exclusive)
    2: trees.MatchIterator.<init>: 0,1% (3 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,1% (3 inclusive / 3 exclusive)
  1: java.lang.String.toLowerCase: 0,1% (3 inclusive / 3 exclusive)
  1: java.io.FileInputStream.open: 0,1% (3 inclusive / 3 exclusive)
  1: com.sun.tools.javac.jvm.ClassReader.enterClass: 0,1% (3 inclusive / 1 exclusive)
    2: com.sun.tools.javac.code.Symbol$TypeSymbol.formFullName: 0,03% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.util.Name.append: 0,03% (1 inclusive / 1 exclusive)
    2: com.sun.tools.javac.code.Symbol$TypeSymbol.formFlatName: 0,03% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.util.Name.append: 0,03% (1 inclusive / 1 exclusive)
  1: util.FileUtils.write: 0,1% (3 inclusive / 0 exclusive)
    2: java.io.FileOutputStream.<init>: 0,07% (2 inclusive / 0 exclusive)
      3: java.io.FileOutputStream.<init>: 0,07% (2 inclusive / 0 exclusive)
        4: java.io.FileOutputStream.open: 0,07% (2 inclusive / 2 exclusive)
    2: util.FileUtils.create: 0,03% (1 inclusive / 0 exclusive)
      3: java.io.File.createNewFile: 0,03% (1 inclusive / 0 exclusive)
        4: java.io.WinNTFileSystem.createFileExclusively: 0,03% (1 inclusive / 1 exclusive)
  1: java.io.Win32FileSystem.hashCode: 0,1% (3 inclusive / 0 exclusive)
    2: java.lang.String.toLowerCase: 0,1% (3 inclusive / 3 exclusive)
  1: compiler.util.MatchCreator.new_match: 0,1% (3 inclusive / 2 exclusive)
    2: java.util.ArrayList.toArray: 0,03% (1 inclusive / 0 exclusive)
      3: java.util.Arrays.copyOf: 0,03% (1 inclusive / 0 exclusive)
        4: java.lang.Class.getComponentType: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.code.Types$DefaultTypeVisitor.<init>: 0,1% (3 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,1% (3 inclusive / 3 exclusive)
  1: com.sun.tools.javac.file.ZipFileIndex$DirectoryEntry.getEntry: 0,1% (3 inclusive / 0 exclusive)
    2: com.sun.tools.javac.file.ZipFileIndex$Entry.<init>: 0,07% (2 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,07% (2 inclusive / 2 exclusive)
    2: java.util.Collections.binarySearch: 0,03% (1 inclusive / 0 exclusive)
      3: java.util.Collections.indexedBinarySearch: 0,03% (1 inclusive / 1 exclusive)
  1: sun.net.www.protocol.file.Handler.parseURL: 0,1% (3 inclusive / 0 exclusive)
    2: java.net.URLStreamHandler.parseURL: 0,1% (3 inclusive / 1 exclusive)
      3: java.lang.StringBuilder.<init>: 0,07% (2 inclusive / 0 exclusive)
        4: java.lang.AbstractStringBuilder.<init>: 0,07% (2 inclusive / 2 exclusive)
  1: com.sun.tools.javac.code.Symbol$MethodSymbol.<init>: 0,1% (3 inclusive / 0 exclusive)
    2: com.sun.tools.javac.code.Symbol.<init>: 0,1% (3 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,1% (3 inclusive / 3 exclusive)
  1: com.sun.tools.javac.file.BaseFileObject.<init>: 0,1% (3 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,1% (3 inclusive / 3 exclusive)
  1: com.sun.tools.javac.code.Symbol$TypeSymbol.formFullName: 0,1% (3 inclusive / 0 exclusive)
    2: com.sun.tools.javac.util.Name.append: 0,1% (3 inclusive / 3 exclusive)
  1: java.net.URLClassLoader$1.<init>: 0,1% (3 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,1% (3 inclusive / 3 exclusive)
  1: sun.misc.Resource.cachedInputStream: 0,1% (3 inclusive / 0 exclusive)
    2: sun.misc.URLClassPath$FileLoader$1.getInputStream: 0,1% (3 inclusive / 0 exclusive)
      3: java.io.FileInputStream.<init>: 0,1% (3 inclusive / 0 exclusive)
        4: java.io.FileInputStream.open: 0,07% (2 inclusive / 2 exclusive)
        4: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.file.ZipFileIndexArchive$ZipFileIndexFileObject.<init>: 0,1% (3 inclusive / 0 exclusive)
    2: com.sun.tools.javac.file.BaseFileObject.<init>: 0,1% (3 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,1% (3 inclusive / 3 exclusive)
  1: com.sun.tools.javac.util.ListBuffer.append: 0,1% (3 inclusive / 0 exclusive)
    2: com.sun.tools.javac.util.List.<init>: 0,1% (3 inclusive / 0 exclusive)
      3: java.util.AbstractCollection.<init>: 0,1% (3 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,1% (3 inclusive / 3 exclusive)
  1: com.sun.tools.javac.code.Types$UnaryVisitor.<init>: 0,1% (3 inclusive / 0 exclusive)
    2: com.sun.tools.javac.code.Types$SimpleVisitor.<init>: 0,1% (3 inclusive / 0 exclusive)
      3: com.sun.tools.javac.code.Types$DefaultTypeVisitor.<init>: 0,1% (3 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,1% (3 inclusive / 3 exclusive)
  1: com.sun.tools.javac.file.ZipFileIndex$DirectoryEntry.access$100: 0,1% (3 inclusive / 0 exclusive)
    2: com.sun.tools.javac.file.ZipFileIndex$DirectoryEntry.getEntry: 0,1% (3 inclusive / 0 exclusive)
      3: com.sun.tools.javac.file.ZipFileIndex$Entry.<init>: 0,07% (2 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,07% (2 inclusive / 2 exclusive)
      3: java.util.Collections.binarySearch: 0,03% (1 inclusive / 0 exclusive)
        4: java.util.Collections.indexedBinarySearch: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.code.Type$MethodType.<init>: 0,1% (3 inclusive / 0 exclusive)
    2: com.sun.tools.javac.code.Type.<init>: 0,1% (3 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,1% (3 inclusive / 3 exclusive)
  1: com.sun.tools.javac.code.Types$SimpleVisitor.<init>: 0,1% (3 inclusive / 0 exclusive)
    2: com.sun.tools.javac.code.Types$DefaultTypeVisitor.<init>: 0,1% (3 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,1% (3 inclusive / 3 exclusive)
  1: compiler.MacroExpander.transform: 0,1% (3 inclusive / 0 exclusive)
    2: compiler.MatchTreeTransformer.transformChilds: 0,07% (2 inclusive / 0 exclusive)
      3: compiler.util.MatchCreator.new_match: 0,07% (2 inclusive / 2 exclusive)
    2: compiler.MacroExpander.expandMacro: 0,03% (1 inclusive / 0 exclusive)
      3: compiler.Macro.expand: 0,03% (1 inclusive / 0 exclusive)
        4: compiler.macros.LambdaMacro.expand: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.util.SharedNameTable.fromChars: 0,07% (2 inclusive / 0 exclusive)
    2: com.sun.tools.javac.util.SharedNameTable$NameImpl.<init>: 0,07% (2 inclusive / 0 exclusive)
      3: com.sun.tools.javac.util.Name.<init>: 0,07% (2 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,07% (2 inclusive / 2 exclusive)
  1: java.lang.ClassLoader.checkCerts: 0,07% (2 inclusive / 0 exclusive)
    2: java.lang.String.substring: 0,07% (2 inclusive / 0 exclusive)
      3: java.lang.String.<init>: 0,07% (2 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,07% (2 inclusive / 2 exclusive)
  1: com.sun.tools.javac.util.ListBuffer.<init>: 0,07% (2 inclusive / 0 exclusive)
    2: java.util.AbstractQueue.<init>: 0,07% (2 inclusive / 0 exclusive)
      3: java.util.AbstractCollection.<init>: 0,07% (2 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,07% (2 inclusive / 2 exclusive)
  1: com.sun.tools.javac.util.Names.createTable: 0,07% (2 inclusive / 0 exclusive)
    2: com.sun.tools.javac.util.SharedNameTable.<init>: 0,07% (2 inclusive / 0 exclusive)
      3: com.sun.tools.javac.util.SharedNameTable.<init>: 0,07% (2 inclusive / 2 exclusive)
  1: java.util.concurrent.atomic.AtomicInteger.compareAndSet: 0,07% (2 inclusive / 0 exclusive)
    2: sun.misc.Unsafe.compareAndSwapInt: 0,07% (2 inclusive / 2 exclusive)
  1: com.sun.tools.javac.jvm.ClassReader.readMethod: 0,07% (2 inclusive / 0 exclusive)
    2: com.sun.tools.javac.code.Symbol$MethodSymbol.<init>: 0,07% (2 inclusive / 0 exclusive)
      3: com.sun.tools.javac.code.Symbol.<init>: 0,07% (2 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,07% (2 inclusive / 2 exclusive)
  1: java.lang.ClassLoader.findBootstrapClass: 0,07% (2 inclusive / 2 exclusive)
  1: sun.misc.Unsafe.compareAndSwapInt: 0,07% (2 inclusive / 2 exclusive)
  1: java.lang.Throwable.<init>: 0,07% (2 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
    2: java.lang.Throwable.fillInStackTrace: 0,03% (1 inclusive / 0 exclusive)
      3: java.lang.Throwable.fillInStackTrace: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.comp.Resolve.selectBest: 0,07% (2 inclusive / 0 exclusive)
    2: com.sun.tools.javac.comp.Resolve.rawInstantiate: 0,07% (2 inclusive / 1 exclusive)
      3: com.sun.tools.javac.comp.Resolve.checkRawArgumentsAcceptable: 0,03% (1 inclusive / 1 exclusive)
  1: java.lang.Class.getComponentType: 0,07% (2 inclusive / 2 exclusive)
  1: java.lang.Exception.<init>: 0,07% (2 inclusive / 0 exclusive)
    2: java.lang.Throwable.<init>: 0,07% (2 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
      3: java.lang.Throwable.fillInStackTrace: 0,03% (1 inclusive / 0 exclusive)
        4: java.lang.Throwable.fillInStackTrace: 0,03% (1 inclusive / 1 exclusive)
  1: java.io.FileDescriptor.decrementAndGetUseCount: 0,07% (2 inclusive / 0 exclusive)
    2: java.util.concurrent.atomic.AtomicInteger.decrementAndGet: 0,07% (2 inclusive / 0 exclusive)
      3: java.util.concurrent.atomic.AtomicInteger.compareAndSet: 0,07% (2 inclusive / 0 exclusive)
        4: sun.misc.Unsafe.compareAndSwapInt: 0,07% (2 inclusive / 2 exclusive)
  1: sun.misc.Launcher$AppClassLoader.loadClass: 0,07% (2 inclusive / 0 exclusive)
    2: java.lang.ClassLoader.loadClass: 0,07% (2 inclusive / 0 exclusive)
      3: java.lang.ClassLoader.loadClass: 0,03% (1 inclusive / 1 exclusive)
      3: java.lang.ClassLoader.getClassLoadingLock: 0,03% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.util.ListBuffer.iterator: 0,07% (2 inclusive / 0 exclusive)
    2: com.sun.tools.javac.util.ListBuffer$1.<init>: 0,07% (2 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,07% (2 inclusive / 2 exclusive)
  1: java.io.FileDescriptor.<init>: 0,07% (2 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,07% (2 inclusive / 2 exclusive)
  1: com.sun.tools.javac.file.RegularFileObject.<init>: 0,07% (2 inclusive / 0 exclusive)
    2: java.io.File.isDirectory: 0,07% (2 inclusive / 0 exclusive)
      3: java.io.WinNTFileSystem.getBooleanAttributes: 0,07% (2 inclusive / 2 exclusive)
  1: com.sun.tools.javac.code.Types$ImplementationCache.implementationInternal: 0,07% (2 inclusive / 0 exclusive)
    2: com.sun.tools.javac.code.Symbol$MethodSymbol.overrides: 0,03% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.code.Types.isSubSignature: 0,03% (1 inclusive / 0 exclusive)
        4: com.sun.tools.javac.code.Types.isSubSignature: 0,03% (1 inclusive / 1 exclusive)
    2: com.sun.tools.javac.code.Scope.lookup: 0,03% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.comp.TransTypes$1.accepts: 0,03% (1 inclusive / 0 exclusive)
        4: com.sun.tools.javac.comp.TransTypes$1.accepts: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.tree.JCTree$JCIdent.<init>: 0,07% (2 inclusive / 0 exclusive)
    2: com.sun.tools.javac.tree.JCTree$JCExpression.<init>: 0,07% (2 inclusive / 0 exclusive)
      3: com.sun.tools.javac.tree.JCTree.<init>: 0,07% (2 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,07% (2 inclusive / 2 exclusive)
  1: sun.nio.fs.WindowsPathParser.normalize: 0,07% (2 inclusive / 0 exclusive)
    2: java.lang.StringBuilder.toString: 0,07% (2 inclusive / 0 exclusive)
      3: java.lang.String.<init>: 0,07% (2 inclusive / 0 exclusive)
        4: java.util.Arrays.copyOfRange: 0,07% (2 inclusive / 2 exclusive)
  1: com.sun.tools.javac.api.JavacTaskImpl.call: 0,07% (2 inclusive / 0 exclusive)
    2: com.sun.tools.javac.main.Main.compile: 0,07% (2 inclusive / 0 exclusive)
      3: com.sun.tools.javac.main.JavaCompiler.instance: 0,07% (2 inclusive / 0 exclusive)
        4: com.sun.tools.javac.main.JavaCompiler.<init>: 0,07% (2 inclusive / 2 exclusive)
  1: java.util.AbstractQueue.<init>: 0,07% (2 inclusive / 0 exclusive)
    2: java.util.AbstractCollection.<init>: 0,07% (2 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,07% (2 inclusive / 2 exclusive)
  1: com.sun.tools.javac.jvm.ClassReader.includeClassFile: 0,07% (2 inclusive / 0 exclusive)
    2: com.sun.tools.javac.jvm.ClassReader.enterClass: 0,03% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.code.Symbol$TypeSymbol.formFlatName: 0,03% (1 inclusive / 0 exclusive)
        4: com.sun.tools.javac.util.Name.append: 0,03% (1 inclusive / 1 exclusive)
    2: com.sun.tools.javac.util.Names.fromString: 0,03% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.util.Name$Table.fromString: 0,03% (1 inclusive / 0 exclusive)
        4: java.lang.String.toCharArray: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.jvm.Code.emitop0: 0,07% (2 inclusive / 0 exclusive)
    2: com.sun.tools.javac.jvm.Code.emitop: 0,07% (2 inclusive / 0 exclusive)
      3: com.sun.tools.javac.jvm.Code.emitStackMap: 0,03% (1 inclusive / 0 exclusive)
        4: com.sun.tools.javac.jvm.Code.emitStackMapFrame: 0,03% (1 inclusive / 1 exclusive)
      3: com.sun.tools.javac.jvm.Code.markStatBegin: 0,03% (1 inclusive / 0 exclusive)
        4: com.sun.tools.javac.util.Position$LineMapImpl.getLineNumber: 0,03% (1 inclusive / 1 exclusive)
  1: java.lang.String.trim: 0,07% (2 inclusive / 0 exclusive)
    2: java.lang.String.substring: 0,07% (2 inclusive / 0 exclusive)
      3: java.lang.String.<init>: 0,07% (2 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,07% (2 inclusive / 2 exclusive)
  1: java.lang.ref.Finalizer.<init>: 0,07% (2 inclusive / 0 exclusive)
    2: java.lang.ref.FinalReference.<init>: 0,07% (2 inclusive / 0 exclusive)
      3: java.lang.ref.Reference.<init>: 0,07% (2 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,07% (2 inclusive / 2 exclusive)
  1: grammar.java._B_Expressions.<init>: 0,07% (2 inclusive / 0 exclusive)
    2: grammar.GrammarDSL.rule_seq: 0,03% (1 inclusive / 1 exclusive)
    2: grammar.java._A_Lexical.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: grammar.java._A_Lexical.keyword: 0,03% (1 inclusive / 0 exclusive)
        4: grammar.java._A_Lexical.keyword: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.comp.Resolve.findMethod: 0,07% (2 inclusive / 0 exclusive)
    2: com.sun.tools.javac.comp.Resolve.selectBest: 0,07% (2 inclusive / 0 exclusive)
      3: com.sun.tools.javac.comp.Resolve.rawInstantiate: 0,07% (2 inclusive / 1 exclusive)
        4: com.sun.tools.javac.comp.Resolve.checkRawArgumentsAcceptable: 0,03% (1 inclusive / 1 exclusive)
  1: java.net.URLStreamHandler.toExternalForm: 0,07% (2 inclusive / 0 exclusive)
    2: java.lang.StringBuffer.toString: 0,03% (1 inclusive / 0 exclusive)
      3: java.lang.String.<init>: 0,03% (1 inclusive / 0 exclusive)
        4: java.util.Arrays.copyOfRange: 0,03% (1 inclusive / 1 exclusive)
    2: java.lang.StringBuffer.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: java.lang.AbstractStringBuilder.<init>: 0,03% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.code.Type$ArrayType.<init>: 0,07% (2 inclusive / 0 exclusive)
    2: com.sun.tools.javac.code.Type.<init>: 0,07% (2 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,07% (2 inclusive / 2 exclusive)
  1: com.sun.tools.javac.jvm.ClassReader.readInnerClasses: 0,07% (2 inclusive / 0 exclusive)
    2: com.sun.tools.javac.jvm.ClassReader.enterClass: 0,07% (2 inclusive / 1 exclusive)
      3: com.sun.tools.javac.code.Symbol$TypeSymbol.formFullName: 0,03% (1 inclusive / 0 exclusive)
        4: com.sun.tools.javac.util.Name.append: 0,03% (1 inclusive / 1 exclusive)
  1: java.security.CodeSource.<init>: 0,07% (2 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,07% (2 inclusive / 2 exclusive)
  1: sun.misc.URLClassPath$JarLoader$2.<init>: 0,07% (2 inclusive / 0 exclusive)
    2: sun.misc.Resource.<init>: 0,07% (2 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,07% (2 inclusive / 2 exclusive)
  1: com.sun.tools.javac.util.ListBuffer$1.<init>: 0,07% (2 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,07% (2 inclusive / 2 exclusive)
  1: com.sun.tools.javac.main.RecognizedOptions.getOptions: 0,07% (2 inclusive / 0 exclusive)
    2: com.sun.tools.javac.main.RecognizedOptions.getAll: 0,07% (2 inclusive / 1 exclusive)
      3: com.sun.tools.javac.main.RecognizedOptions.getXLintChoices: 0,03% (1 inclusive / 0 exclusive)
        4: com.sun.tools.javac.code.Lint$LintCategory.<clinit>: 0,03% (1 inclusive / 1 exclusive)
  1: sun.misc.Resource.<init>: 0,07% (2 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,07% (2 inclusive / 2 exclusive)
  1: com.sun.tools.javac.util.SharedNameTable.<init>: 0,07% (2 inclusive / 2 exclusive)
  1: java.lang.ClassLoader.findBootstrapClassOrNull: 0,07% (2 inclusive / 0 exclusive)
    2: java.lang.ClassLoader.findBootstrapClass: 0,07% (2 inclusive / 2 exclusive)
  1: com.sun.tools.javac.main.Main.compile: 0,07% (2 inclusive / 0 exclusive)
    2: com.sun.tools.javac.main.JavaCompiler.instance: 0,07% (2 inclusive / 0 exclusive)
      3: com.sun.tools.javac.main.JavaCompiler.<init>: 0,07% (2 inclusive / 2 exclusive)
  1: grammar.Expression.<init>: 0,07% (2 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,07% (2 inclusive / 2 exclusive)
  1: java.util.EnumSet.of: 0,07% (2 inclusive / 0 exclusive)
    2: java.lang.Enum.getDeclaringClass: 0,03% (1 inclusive / 1 exclusive)
    2: java.util.RegularEnumSet.add: 0,03% (1 inclusive / 0 exclusive)
      3: java.util.RegularEnumSet.add: 0,03% (1 inclusive / 1 exclusive)
  1: java.io.File.listFiles: 0,07% (2 inclusive / 0 exclusive)
    2: java.io.File.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: java.io.Win32FileSystem.resolve: 0,03% (1 inclusive / 1 exclusive)
    2: java.io.File.list: 0,03% (1 inclusive / 0 exclusive)
      3: java.io.WinNTFileSystem.list: 0,03% (1 inclusive / 1 exclusive)
  1: java.util.concurrent.atomic.AtomicInteger.decrementAndGet: 0,07% (2 inclusive / 0 exclusive)
    2: java.util.concurrent.atomic.AtomicInteger.compareAndSet: 0,07% (2 inclusive / 0 exclusive)
      3: sun.misc.Unsafe.compareAndSwapInt: 0,07% (2 inclusive / 2 exclusive)
  1: trees.MatchSpec.<init>: 0,07% (2 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,07% (2 inclusive / 2 exclusive)
  1: java.lang.ref.FinalReference.<init>: 0,07% (2 inclusive / 0 exclusive)
    2: java.lang.ref.Reference.<init>: 0,07% (2 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,07% (2 inclusive / 2 exclusive)
  1: com.sun.tools.javac.jvm.Code.emitop: 0,07% (2 inclusive / 0 exclusive)
    2: com.sun.tools.javac.jvm.Code.emitStackMap: 0,03% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.jvm.Code.emitStackMapFrame: 0,03% (1 inclusive / 1 exclusive)
    2: com.sun.tools.javac.jvm.Code.markStatBegin: 0,03% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.util.Position$LineMapImpl.getLineNumber: 0,03% (1 inclusive / 1 exclusive)
  1: source.SourceComposed.<init>: 0,07% (2 inclusive / 0 exclusive)
    2: source.SourceComposed.strFromMatches: 0,07% (2 inclusive / 0 exclusive)
      3: java.lang.StringBuilder.<init>: 0,07% (2 inclusive / 0 exclusive)
        4: java.lang.AbstractStringBuilder.<init>: 0,07% (2 inclusive / 2 exclusive)
  1: trees.BoundedMatchIterator.<init>: 0,07% (2 inclusive / 0 exclusive)
    2: trees.MatchIterator.<init>: 0,07% (2 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,07% (2 inclusive / 2 exclusive)
  1: com.sun.tools.javac.code.DeferredLintHandler.flush: 0,07% (2 inclusive / 0 exclusive)
    2: com.sun.tools.javac.util.ListBuffer.iterator: 0,07% (2 inclusive / 0 exclusive)
      3: com.sun.tools.javac.util.ListBuffer$1.<init>: 0,07% (2 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,07% (2 inclusive / 2 exclusive)
  1: com.sun.tools.javac.code.Symbol$TypeSymbol.<init>: 0,07% (2 inclusive / 0 exclusive)
    2: com.sun.tools.javac.code.Symbol.<init>: 0,07% (2 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,07% (2 inclusive / 2 exclusive)
  1: com.sun.tools.javac.api.JavacTaskImpl.<init>: 0,07% (2 inclusive / 0 exclusive)
    2: java.util.concurrent.atomic.AtomicBoolean.<clinit>: 0,03% (1 inclusive / 1 exclusive)
    2: java.util.concurrent.atomic.AtomicBoolean.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: java.util.HashMap.<init>: 0,07% (2 inclusive / 1 exclusive)
    2: java.util.AbstractMap.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.comp.Resolve.rawInstantiate: 0,07% (2 inclusive / 1 exclusive)
    2: com.sun.tools.javac.comp.Resolve.checkRawArgumentsAcceptable: 0,03% (1 inclusive / 1 exclusive)
  1: compiler.MatchTreeTransformer.transformChilds: 0,07% (2 inclusive / 0 exclusive)
    2: compiler.util.MatchCreator.new_match: 0,07% (2 inclusive / 2 exclusive)
  1: com.sun.tools.javac.util.ListBuffer.clear: 0,07% (2 inclusive / 0 exclusive)
    2: com.sun.tools.javac.util.List.<init>: 0,07% (2 inclusive / 0 exclusive)
      3: java.util.AbstractCollection.<init>: 0,07% (2 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,07% (2 inclusive / 2 exclusive)
  1: com.sun.tools.javac.parser.JavacParser.variableDeclaratorId: 0,03% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.tree.TreeMaker.VarDef: 0,03% (1 inclusive / 1 exclusive)
  1: util.FileUtils.create: 0,03% (1 inclusive / 0 exclusive)
    2: java.io.File.createNewFile: 0,03% (1 inclusive / 0 exclusive)
      3: java.io.WinNTFileSystem.createFileExclusively: 0,03% (1 inclusive / 1 exclusive)
  1: trees.MatchFinder$Finder.find: 0,03% (1 inclusive / 1 exclusive)
  1: java.lang.Class.getDeclaredConstructors0: 0,03% (1 inclusive / 1 exclusive)
  1: java.util.ServiceLoader.load: 0,03% (1 inclusive / 0 exclusive)
    2: java.util.ServiceLoader.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: java.util.LinkedHashMap.<init>: 0,03% (1 inclusive / 0 exclusive)
        4: java.util.HashMap.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: grammar.Expression$StringLiteral.<init>: 0,03% (1 inclusive / 0 exclusive)
    2: grammar.Expression.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.util.Options.isSet: 0,03% (1 inclusive / 0 exclusive)
    2: java.lang.StringBuilder.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: java.lang.AbstractStringBuilder.<init>: 0,03% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.code.Scope.getElementsByName: 0,03% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.code.Scope$3.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.tree.JCTree$Visitor.<init>: 0,03% (1 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: java.io.FilterOutputStream.close: 0,03% (1 inclusive / 0 exclusive)
    2: java.io.FileOutputStream.close: 0,03% (1 inclusive / 0 exclusive)
      3: java.io.FileOutputStream.close0: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.main.Main.<init>: 0,03% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.main.RecognizedOptions.getJavaCompilerOptions: 0,03% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.main.RecognizedOptions.getOptions: 0,03% (1 inclusive / 0 exclusive)
        4: com.sun.tools.javac.main.RecognizedOptions.getAll: 0,03% (1 inclusive / 1 exclusive)
  1: java.io.FileOutputStream.close0: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.comp.TransTypes.addBridges: 0,03% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.comp.TransTypes.addBridgeIfNeeded: 0,03% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.code.Symbol$MethodSymbol.implementation: 0,03% (1 inclusive / 0 exclusive)
        4: com.sun.tools.javac.code.Types.implementation: 0,03% (1 inclusive / 1 exclusive)
  1: java.util.WeakHashMap$Entry.<init>: 0,03% (1 inclusive / 0 exclusive)
    2: java.lang.ref.WeakReference.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: java.lang.ref.Reference.<init>: 0,03% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: driver.Context.<clinit>: 0,03% (1 inclusive / 0 exclusive)
    2: grammar.Grammar.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: sun.misc.URLClassPath$JarLoader$2.getInputStream: 0,03% (1 inclusive / 0 exclusive)
    2: java.util.jar.JarFile.getInputStream: 0,03% (1 inclusive / 0 exclusive)
      3: java.util.zip.ZipFile.getInputStream: 0,03% (1 inclusive / 0 exclusive)
        4: java.util.zip.ZipCoder.getBytes: 0,03% (1 inclusive / 1 exclusive)
  1: java.util.concurrent.ConcurrentHashMap.putIfAbsent: 0,03% (1 inclusive / 0 exclusive)
    2: java.util.concurrent.ConcurrentHashMap$Segment.put: 0,03% (1 inclusive / 0 exclusive)
      3: java.util.concurrent.ConcurrentHashMap.setEntryAt: 0,03% (1 inclusive / 0 exclusive)
        4: sun.misc.Unsafe.putOrderedObject: 0,03% (1 inclusive / 1 exclusive)
  1: parser.Match.first: 0,03% (1 inclusive / 0 exclusive)
    2: trees.MatchFinder.find: 0,03% (1 inclusive / 0 exclusive)
      3: trees.MatchFinder$Finder.find: 0,03% (1 inclusive / 1 exclusive)
  1: sun.misc.Cleaner.<init>: 0,03% (1 inclusive / 0 exclusive)
    2: java.lang.ref.PhantomReference.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: java.lang.ref.Reference.<init>: 0,03% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: java.net.URLClassLoader.isSealed: 0,03% (1 inclusive / 0 exclusive)
    2: java.lang.String.concat: 0,03% (1 inclusive / 0 exclusive)
      3: java.lang.String.<init>: 0,03% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.comp.Check$CycleChecker.checkClass: 0,03% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.tree.TreeScanner.scan: 0,03% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.tree.TreeScanner.scan: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.jvm.ClassReader.fillIn: 0,03% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.file.RegularFileObject.openInputStream: 0,03% (1 inclusive / 0 exclusive)
      3: java.io.FileInputStream.<init>: 0,03% (1 inclusive / 0 exclusive)
        4: java.io.FileInputStream.open: 0,03% (1 inclusive / 1 exclusive)
  1: java.util.ComparableTimSort.sort: 0,03% (1 inclusive / 0 exclusive)
    2: java.util.ComparableTimSort.binarySort: 0,03% (1 inclusive / 0 exclusive)
      3: java.lang.System.arraycopy: 0,03% (1 inclusive / 1 exclusive)
  1: java.util.concurrent.atomic.AtomicBoolean.<clinit>: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.comp.Check$ConversionWarner.<init>: 0,03% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.util.Warner.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: java.io.WinNTFileSystem.canonicalize0: 0,03% (1 inclusive / 1 exclusive)
  1: sun.misc.URLClassPath$JarLoader$2.getManifest: 0,03% (1 inclusive / 0 exclusive)
    2: java.util.jar.JarFile.getManifest: 0,03% (1 inclusive / 0 exclusive)
      3: java.util.jar.JarFile.getManifestFromReference: 0,03% (1 inclusive / 1 exclusive)
  1: java.lang.ref.SoftReference.<init>: 0,03% (1 inclusive / 0 exclusive)
    2: java.lang.ref.Reference.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: java.lang.ref.Reference.<init>: 0,03% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.jvm.Code.emitStackMap: 0,03% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.jvm.Code.emitStackMapFrame: 0,03% (1 inclusive / 1 exclusive)
  1: compiler.QuotationMacroImplem.applyUnquotation: 0,03% (1 inclusive / 0 exclusive)
    2: parser.Match.first: 0,03% (1 inclusive / 0 exclusive)
      3: trees.MatchFinder.find: 0,03% (1 inclusive / 0 exclusive)
        4: trees.MatchFinder$Finder.find: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.code.Scope$CompoundScope$2$1.nextIterator: 0,03% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.code.Scope.getElementsByName: 0,03% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.code.Scope$3.<init>: 0,03% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: java.util.jar.JarFile.getJarEntry: 0,03% (1 inclusive / 0 exclusive)
    2: java.util.jar.JarFile.getEntry: 0,03% (1 inclusive / 0 exclusive)
      3: java.util.zip.ZipFile.getEntry: 0,03% (1 inclusive / 0 exclusive)
        4: java.util.zip.ZipCoder.getBytes: 0,03% (1 inclusive / 1 exclusive)
  1: java.util.jar.JarFile.hasClassPathAttribute: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.comp.Check.convertWarner: 0,03% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.comp.Check$ConversionWarner.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.util.Warner.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.code.Scope.lookup: 0,03% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.comp.TransTypes$1.accepts: 0,03% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.comp.TransTypes$1.accepts: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.jvm.ClassReader.readType: 0,03% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.jvm.ClassReader.sigToType: 0,03% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.jvm.ClassReader.sigToType: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.parser.JavacParser.parseCompilationUnit: 0,03% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.parser.Scanner.getLineMap: 0,03% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.util.Position.makeLineMap: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.code.Symbol$MethodSymbol.implementation: 0,03% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.code.Types.implementation: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.code.Types.<init>: 0,03% (1 inclusive / 0 exclusive)
    2: java.util.HashMap.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: java.util.AbstractMap.<init>: 0,03% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.code.Symbol$OperatorSymbol.<init>: 0,03% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.code.Symbol$MethodSymbol.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.code.Symbol.<init>: 0,03% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.tree.TreeMaker.VarDef: 0,03% (1 inclusive / 1 exclusive)
  1: java.io.FileOutputStream.close: 0,03% (1 inclusive / 0 exclusive)
    2: java.io.FileOutputStream.close0: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.tree.TreeInfo.<init>: 0,03% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.util.Names.fromString: 0,03% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.util.Name$Table.fromString: 0,03% (1 inclusive / 0 exclusive)
        4: java.lang.String.toCharArray: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.comp.Enter.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.tree.TreeMaker.<init>: 0,03% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.tree.TreeMaker$AnnotationBuilder.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.parser.Scanner.getLineMap: 0,03% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.util.Position.makeLineMap: 0,03% (1 inclusive / 1 exclusive)
  1: java.util.Arrays$ArrayList.<init>: 0,03% (1 inclusive / 0 exclusive)
    2: java.util.AbstractList.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: java.util.AbstractCollection.<init>: 0,03% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: java.util.ServiceLoader.<init>: 0,03% (1 inclusive / 0 exclusive)
    2: java.util.LinkedHashMap.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: java.util.HashMap.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: java.lang.Class.getConstructor0: 0,03% (1 inclusive / 0 exclusive)
    2: java.lang.Class.privateGetDeclaredConstructors: 0,03% (1 inclusive / 0 exclusive)
      3: java.lang.Class.getDeclaredConstructors0: 0,03% (1 inclusive / 1 exclusive)
  1: java.lang.AbstractStringBuilder.replace: 0,03% (1 inclusive / 0 exclusive)
    2: java.lang.System.arraycopy: 0,03% (1 inclusive / 1 exclusive)
  1: java.util.zip.ZipFile.getInputStream: 0,03% (1 inclusive / 0 exclusive)
    2: java.util.zip.ZipCoder.getBytes: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.comp.Infer.<init>: 0,03% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.comp.Infer$3.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: java.util.concurrent.ConcurrentHashMap.setEntryAt: 0,03% (1 inclusive / 0 exclusive)
    2: sun.misc.Unsafe.putOrderedObject: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.api.JavacTool.getTask: 0,03% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.api.JavacTaskImpl.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.api.JavacTaskImpl.<init>: 0,03% (1 inclusive / 0 exclusive)
        4: java.util.concurrent.atomic.AtomicBoolean.<clinit>: 0,03% (1 inclusive / 1 exclusive)
  1: sun.misc.Unsafe.putOrderedObject: 0,03% (1 inclusive / 1 exclusive)
  1: java.util.concurrent.locks.AbstractOwnableSynchronizer.<init>: 0,03% (1 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.code.Scope$CompoundScope$CompoundScopeIterator.<init>: 0,03% (1 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: sun.misc.URLClassPath$JarLoader.getResource: 0,03% (1 inclusive / 0 exclusive)
    2: sun.misc.URLClassPath$JarLoader.checkResource: 0,03% (1 inclusive / 0 exclusive)
      3: sun.net.www.ParseUtil.encodePath: 0,03% (1 inclusive / 1 exclusive)
  1: java.util.LinkedHashMap.createEntry: 0,03% (1 inclusive / 0 exclusive)
    2: java.util.LinkedHashMap$Entry.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: java.util.HashMap$Entry.<init>: 0,03% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: java.lang.reflect.Array.newArray: 0,03% (1 inclusive / 1 exclusive)
  1: java.util.jar.Manifest.read: 0,03% (1 inclusive / 0 exclusive)
    2: java.util.jar.Attributes.read: 0,03% (1 inclusive / 0 exclusive)
      3: java.lang.String.<init>: 0,03% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: trees.MatchSpec$RuleSpec.<init>: 0,03% (1 inclusive / 0 exclusive)
    2: trees.MatchSpec.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.util.RichDiagnosticFormatter.<init>: 0,03% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.util.ForwardingDiagnosticFormatter.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.util.ForwardingDiagnosticFormatter$ForwardingConfiguration.<init>: 0,03% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: java.lang.Class.privateGetDeclaredConstructors: 0,03% (1 inclusive / 0 exclusive)
    2: java.lang.Class.getDeclaredConstructors0: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.main.RecognizedOptions$17.<init>: 0,03% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.main.JavacOption$Option.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: java.io.File.createNewFile: 0,03% (1 inclusive / 0 exclusive)
    2: java.io.WinNTFileSystem.createFileExclusively: 0,03% (1 inclusive / 1 exclusive)
  1: java.util.regex.Pattern$CharPropertyNames.<clinit>: 0,03% (1 inclusive / 1 exclusive)
  1: java.lang.Throwable.fillInStackTrace: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.code.Scope$3.<init>: 0,03% (1 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: java.util.LinkedHashMap$Entry.<init>: 0,03% (1 inclusive / 0 exclusive)
    2: java.util.HashMap$Entry.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: grammar.Expression$Star.<init>: 0,03% (1 inclusive / 0 exclusive)
    2: grammar.Expression.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: java.lang.String.matches: 0,03% (1 inclusive / 0 exclusive)
    2: java.util.regex.Pattern.matches: 0,03% (1 inclusive / 0 exclusive)
      3: java.util.regex.Pattern.matcher: 0,03% (1 inclusive / 0 exclusive)
        4: java.util.regex.Matcher.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.util.ForwardingDiagnosticFormatter.<init>: 0,03% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.util.ForwardingDiagnosticFormatter$ForwardingConfiguration.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: java.util.RegularEnumSet.add: 0,03% (1 inclusive / 1 exclusive)
  1: java.lang.StringBuffer.replace: 0,03% (1 inclusive / 0 exclusive)
    2: java.lang.AbstractStringBuilder.replace: 0,03% (1 inclusive / 0 exclusive)
      3: java.lang.System.arraycopy: 0,03% (1 inclusive / 1 exclusive)
  1: util.StringUtils.unescape: 0,03% (1 inclusive / 0 exclusive)
    2: java.lang.StringBuilder.toString: 0,03% (1 inclusive / 0 exclusive)
      3: java.lang.String.<init>: 0,03% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.parser.JavacParser.variableDeclarators: 0,03% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.parser.JavacParser.variableDeclaratorsRest: 0,03% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.parser.JavacParser.variableDeclaratorRest: 0,03% (1 inclusive / 1 exclusive)
  1: java.security.PrivilegedActionException.<init>: 0,03% (1 inclusive / 0 exclusive)
    2: java.lang.Exception.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: java.lang.Throwable.<init>: 0,03% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.code.Scope$CompoundScope$2$1.<init>: 0,03% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.code.Scope$CompoundScope$CompoundScopeIterator.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.comp.Attr.checkMethod: 0,03% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.comp.Check.convertWarner: 0,03% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.comp.Check$ConversionWarner.<init>: 0,03% (1 inclusive / 0 exclusive)
        4: com.sun.tools.javac.util.Warner.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.comp.Infer.instance: 0,03% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.comp.Infer.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.comp.Infer$3.<init>: 0,03% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: compiler.MacroExpander.expandMacro: 0,03% (1 inclusive / 0 exclusive)
    2: compiler.Macro.expand: 0,03% (1 inclusive / 0 exclusive)
      3: compiler.macros.LambdaMacro.expand: 0,03% (1 inclusive / 1 exclusive)
  1: grammar.GrammarDSL.star: 0,03% (1 inclusive / 0 exclusive)
    2: grammar.Expression$Star.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: grammar.Expression.<init>: 0,03% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.code.Symbol.isStatic: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.comp.MemberEnter$3.importFrom: 0,03% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.code.Symbol.isStatic: 0,03% (1 inclusive / 1 exclusive)
  1: java.util.concurrent.atomic.AtomicBoolean.<init>: 0,03% (1 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: java.util.zip.ZipFile.access$1400: 0,03% (1 inclusive / 0 exclusive)
    2: java.util.zip.ZipFile.read: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.comp.Check$Validator.<init>: 0,03% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.tree.JCTree$Visitor.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: java.lang.Enum.getDeclaringClass: 0,03% (1 inclusive / 1 exclusive)
  1: grammar.java._A_Lexical.keyword: 0,03% (1 inclusive / 1 exclusive)
  1: java.net.FactoryURLClassLoader.loadClass: 0,03% (1 inclusive / 0 exclusive)
    2: java.lang.ClassLoader.loadClass: 0,03% (1 inclusive / 0 exclusive)
      3: java.net.URLClassLoader.findClass: 0,03% (1 inclusive / 0 exclusive)
        4: java.security.AccessController.doPrivileged: 0,03% (1 inclusive / 1 exclusive)
  1: java.lang.ref.PhantomReference.<init>: 0,03% (1 inclusive / 0 exclusive)
    2: java.lang.ref.Reference.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.code.Types.implementation: 0,03% (1 inclusive / 1 exclusive)
  1: sun.launcher.LauncherHelper.checkAndLoadMain: 0,03% (1 inclusive / 0 exclusive)
    2: sun.launcher.LauncherHelper.getMainMethod: 0,03% (1 inclusive / 1 exclusive)
  1: java.util.jar.JarFile.getInputStream: 0,03% (1 inclusive / 0 exclusive)
    2: java.util.zip.ZipFile.getInputStream: 0,03% (1 inclusive / 0 exclusive)
      3: java.util.zip.ZipCoder.getBytes: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.comp.Check.validate: 0,03% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.comp.Check$Validator.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.tree.JCTree$Visitor.<init>: 0,03% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.parser.JavacParser.blockStatements: 0,03% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.parser.JavacParser.variableDeclarators: 0,03% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.parser.JavacParser.variableDeclaratorsRest: 0,03% (1 inclusive / 0 exclusive)
        4: com.sun.tools.javac.parser.JavacParser.variableDeclaratorRest: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.parser.JavacParser.variableDeclaratorRest: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.main.JavacOption$Option.<init>: 0,03% (1 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: driver.CompilationDriver.compileFile: 0,03% (1 inclusive / 0 exclusive)
    2: compiler.java.StringJavaFileObject.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: java.lang.StringBuilder.<init>: 0,03% (1 inclusive / 0 exclusive)
        4: java.lang.AbstractStringBuilder.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.code.Symbol$MethodSymbol.overrides: 0,03% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.code.Types.isSubSignature: 0,03% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.code.Types.isSubSignature: 0,03% (1 inclusive / 1 exclusive)
  1: sun.net.www.ParseUtil.<init>: 0,03% (1 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: sun.net.www.protocol.jar.Handler.parseContextSpec: 0,03% (1 inclusive / 0 exclusive)
    2: java.lang.StringBuilder.toString: 0,03% (1 inclusive / 0 exclusive)
      3: java.lang.String.<init>: 0,03% (1 inclusive / 0 exclusive)
        4: java.util.Arrays.copyOfRange: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.code.Types$8.visitType: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.jvm.Items.makeImmediateItem: 0,03% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.jvm.Items$ImmediateItem.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.jvm.Items$Item.<init>: 0,03% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.code.Scope.dble: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.code.Symtab.initType: 0,03% (1 inclusive / 0 exclusive)
    2: java.lang.StringBuilder.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: java.lang.AbstractStringBuilder.<init>: 0,03% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: compiler.macros.LambdaMacro.expand: 0,03% (1 inclusive / 1 exclusive)
  1: java.util.concurrent.ConcurrentHashMap$Segment.put: 0,03% (1 inclusive / 0 exclusive)
    2: java.util.concurrent.ConcurrentHashMap.setEntryAt: 0,03% (1 inclusive / 0 exclusive)
      3: sun.misc.Unsafe.putOrderedObject: 0,03% (1 inclusive / 1 exclusive)
  1: java.util.jar.JarFile.getManifestFromReference: 0,03% (1 inclusive / 1 exclusive)
  1: java.io.File.getCanonicalPath: 0,03% (1 inclusive / 0 exclusive)
    2: java.io.Win32FileSystem.canonicalize: 0,03% (1 inclusive / 0 exclusive)
      3: java.io.WinNTFileSystem.canonicalize0: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.main.RecognizedOptions.getXLintChoices: 0,03% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.code.Lint$LintCategory.<clinit>: 0,03% (1 inclusive / 1 exclusive)
  1: java.util.regex.Pattern.charPropertyNodeFor: 0,03% (1 inclusive / 0 exclusive)
    2: java.util.regex.Pattern$CharPropertyNames.<clinit>: 0,03% (1 inclusive / 1 exclusive)
  1: java.util.AbstractSet.<init>: 0,03% (1 inclusive / 0 exclusive)
    2: java.util.AbstractCollection.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: java.util.concurrent.locks.AbstractQueuedSynchronizer.<init>: 0,03% (1 inclusive / 0 exclusive)
    2: java.util.concurrent.locks.AbstractOwnableSynchronizer.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: driver.CompilationDriver.dumpAndOrLoadClass: 0,03% (1 inclusive / 0 exclusive)
    2: compiler.java.CompiledClass.dump: 0,03% (1 inclusive / 0 exclusive)
      3: java.io.BufferedOutputStream.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.demo.jvmti.hprof.Tracker.ObjectInit: 0,03% (1 inclusive / 0 exclusive)
    2: java.lang.Thread.currentThread: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.parser.EndPosParser.parseCompilationUnit: 0,03% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.parser.JavacParser.parseCompilationUnit: 0,03% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.parser.Scanner.getLineMap: 0,03% (1 inclusive / 0 exclusive)
        4: com.sun.tools.javac.util.Position.makeLineMap: 0,03% (1 inclusive / 1 exclusive)
  1: java.util.EnumSet.<init>: 0,03% (1 inclusive / 0 exclusive)
    2: java.util.AbstractSet.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: java.util.AbstractCollection.<init>: 0,03% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: trees.MatchSpec.rule: 0,03% (1 inclusive / 0 exclusive)
    2: trees.MatchSpec$RuleSpec.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: trees.MatchSpec.<init>: 0,03% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: java.util.concurrent.locks.ReentrantLock$Sync.<init>: 0,03% (1 inclusive / 0 exclusive)
    2: java.util.concurrent.locks.AbstractQueuedSynchronizer.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: java.util.concurrent.locks.AbstractOwnableSynchronizer.<init>: 0,03% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: java.util.regex.Matcher.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.parser.JavacParser.variableDeclaratorsRest: 0,03% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.parser.JavacParser.variableDeclaratorRest: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.code.Types$DefaultTypeVisitor.visit: 0,03% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.code.Type.accept: 0,03% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.code.Types$8.visitType: 0,03% (1 inclusive / 0 exclusive)
        4: com.sun.tools.javac.code.Types$8.visitType: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.code.Scope$ImportScope.makeEntry: 0,03% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.code.Scope$ImportScope$ImportEntry.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.code.Scope$Entry.<init>: 0,03% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.code.Scope$ImportScope$ImportEntry.<init>: 0,03% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.code.Scope$Entry.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: java.io.File.getParent: 0,03% (1 inclusive / 0 exclusive)
    2: java.lang.String.substring: 0,03% (1 inclusive / 0 exclusive)
      3: java.lang.String.<init>: 0,03% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.jvm.Code.markStatBegin: 0,03% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.util.Position$LineMapImpl.getLineNumber: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.code.Symtab.enterBinop: 0,03% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.util.Names.fromString: 0,03% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.util.Name$Table.fromString: 0,03% (1 inclusive / 0 exclusive)
        4: java.lang.String.toCharArray: 0,03% (1 inclusive / 1 exclusive)
  1: java.util.ComparableTimSort.binarySort: 0,03% (1 inclusive / 0 exclusive)
    2: java.lang.System.arraycopy: 0,03% (1 inclusive / 1 exclusive)
  1: java.util.regex.Pattern.family: 0,03% (1 inclusive / 0 exclusive)
    2: java.util.regex.Pattern.charPropertyNodeFor: 0,03% (1 inclusive / 0 exclusive)
      3: java.util.regex.Pattern$CharPropertyNames.<clinit>: 0,03% (1 inclusive / 1 exclusive)
  1: grammar.java._D_Requires.<init>: 0,03% (1 inclusive / 0 exclusive)
    2: grammar.java._C_Statements.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: grammar.java._B_Expressions.<init>: 0,03% (1 inclusive / 0 exclusive)
        4: grammar.GrammarDSL.rule_seq: 0,03% (1 inclusive / 1 exclusive)
  1: java.lang.ClassLoader.getClassLoadingLock: 0,03% (1 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.code.Type.accept: 0,03% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.code.Types$8.visitType: 0,03% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.code.Types$8.visitType: 0,03% (1 inclusive / 1 exclusive)
  1: java.lang.ref.WeakReference.<init>: 0,03% (1 inclusive / 0 exclusive)
    2: java.lang.ref.Reference.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.tree.TreeMaker$AnnotationBuilder.<init>: 0,03% (1 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.comp.Check$CycleChecker.visitClassDef: 0,03% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.comp.Check$CycleChecker.checkClass: 0,03% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.tree.TreeScanner.scan: 0,03% (1 inclusive / 0 exclusive)
        4: com.sun.tools.javac.tree.TreeScanner.scan: 0,03% (1 inclusive / 1 exclusive)
  1: trees.MatchSpec$PositionSpec.<init>: 0,03% (1 inclusive / 0 exclusive)
    2: trees.MatchSpec.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.comp.Check.<init>: 0,03% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.comp.Enter.instance: 0,03% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.comp.Enter.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: driver.DependencyResolver.<init>: 0,03% (1 inclusive / 0 exclusive)
    2: driver.Context.<clinit>: 0,03% (1 inclusive / 0 exclusive)
      3: grammar.Grammar.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.comp.Infer$3.<init>: 0,03% (1 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: java.util.zip.ZipFile.read: 0,03% (1 inclusive / 1 exclusive)
  1: java.lang.System.nanoTime: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.jvm.Items$ImmediateItem.<init>: 0,03% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.jvm.Items$Item.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: java.lang.reflect.Array.newInstance: 0,03% (1 inclusive / 0 exclusive)
    2: java.lang.reflect.Array.newArray: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.file.JavacFileManager.caseMapCheck: 0,03% (1 inclusive / 0 exclusive)
    2: java.io.File.getCanonicalPath: 0,03% (1 inclusive / 0 exclusive)
      3: java.io.Win32FileSystem.canonicalize: 0,03% (1 inclusive / 0 exclusive)
        4: java.io.WinNTFileSystem.canonicalize0: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.file.FSInfo.exists: 0,03% (1 inclusive / 0 exclusive)
    2: java.io.File.exists: 0,03% (1 inclusive / 0 exclusive)
      3: java.io.WinNTFileSystem.getBooleanAttributes: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.util.Position.makeLineMap: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.parser.JavacParser.formalParameters: 0,03% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.parser.JavacParser.formalParameter: 0,03% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.parser.JavacParser.variableDeclaratorId: 0,03% (1 inclusive / 0 exclusive)
        4: com.sun.tools.javac.tree.TreeMaker.VarDef: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.tree.JCTree$JCLiteral.<init>: 0,03% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.tree.JCTree$JCExpression.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.tree.JCTree.<init>: 0,03% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: grammar.Expression$Plus.accept: 0,03% (1 inclusive / 0 exclusive)
    2: grammar.ExpressionTreeCleaner.visit: 0,03% (1 inclusive / 0 exclusive)
      3: java.lang.StringBuilder.<init>: 0,03% (1 inclusive / 0 exclusive)
        4: java.lang.AbstractStringBuilder.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: parser.Matcher.visit: 0,03% (1 inclusive / 0 exclusive)
    2: source.SourceStream.get: 0,03% (1 inclusive / 0 exclusive)
      3: source.SourceFileText.at: 0,03% (1 inclusive / 0 exclusive)
        4: java.lang.String.substring: 0,03% (1 inclusive / 1 exclusive)
  1: java.io.BufferedOutputStream.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: java.util.jar.JarFile.getManifest: 0,03% (1 inclusive / 0 exclusive)
    2: java.util.jar.JarFile.getManifestFromReference: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.comp.TransTypes.addBridgeIfNeeded: 0,03% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.code.Symbol$MethodSymbol.implementation: 0,03% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.code.Types.implementation: 0,03% (1 inclusive / 1 exclusive)
  1: grammar.java._A_Lexical.<init>: 0,03% (1 inclusive / 0 exclusive)
    2: grammar.java._A_Lexical.keyword: 0,03% (1 inclusive / 0 exclusive)
      3: grammar.java._A_Lexical.keyword: 0,03% (1 inclusive / 1 exclusive)
  1: java.util.regex.Pattern.sequence: 0,03% (1 inclusive / 0 exclusive)
    2: java.util.regex.Pattern.family: 0,03% (1 inclusive / 0 exclusive)
      3: java.util.regex.Pattern.charPropertyNodeFor: 0,03% (1 inclusive / 0 exclusive)
        4: java.util.regex.Pattern$CharPropertyNames.<clinit>: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.file.Paths$Path.addFile: 0,03% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.file.FSInfo.exists: 0,03% (1 inclusive / 0 exclusive)
      3: java.io.File.exists: 0,03% (1 inclusive / 0 exclusive)
        4: java.io.WinNTFileSystem.getBooleanAttributes: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.code.Lint$LintCategory.<clinit>: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.parser.ParserFactory.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: trees.MatchSpec.at: 0,03% (1 inclusive / 0 exclusive)
    2: trees.MatchSpec$PositionSpec.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: trees.MatchSpec.<init>: 0,03% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.jvm.Items$Item.<init>: 0,03% (1 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: source.SourceStream.get: 0,03% (1 inclusive / 0 exclusive)
    2: source.SourceFileText.at: 0,03% (1 inclusive / 0 exclusive)
      3: java.lang.String.substring: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.comp.MemberEnter.importNamedStatic: 0,03% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.comp.MemberEnter$3.importFrom: 0,03% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.code.Symbol.isStatic: 0,03% (1 inclusive / 1 exclusive)
  1: grammar.java._C_Statements.<init>: 0,03% (1 inclusive / 0 exclusive)
    2: grammar.java._B_Expressions.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: grammar.GrammarDSL.rule_seq: 0,03% (1 inclusive / 1 exclusive)
  1: java.util.HashMap.resize: 0,03% (1 inclusive / 0 exclusive)
    2: java.util.HashMap.transfer: 0,03% (1 inclusive / 1 exclusive)
  1: java.io.Win32FileSystem.canonicalize: 0,03% (1 inclusive / 0 exclusive)
    2: java.io.WinNTFileSystem.canonicalize0: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.comp.Enter.instance: 0,03% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.comp.Enter.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.code.Symbol$ClassSymbol.erasure: 0,03% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.code.Type$ClassType.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.code.Type.<init>: 0,03% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.jvm.ClassReader$6.read: 0,03% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.jvm.ClassReader.readInnerClasses: 0,03% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.jvm.ClassReader.enterClass: 0,03% (1 inclusive / 1 exclusive)
  1: util.StringUtils.escape: 0,03% (1 inclusive / 0 exclusive)
    2: java.lang.StringBuilder.toString: 0,03% (1 inclusive / 0 exclusive)
      3: java.lang.String.<init>: 0,03% (1 inclusive / 0 exclusive)
        4: java.util.Arrays.copyOfRange: 0,03% (1 inclusive / 1 exclusive)
  1: driver.DependencyResolver.resolve: 0,03% (1 inclusive / 0 exclusive)
    2: driver.DependencyResolver.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: driver.Context.<clinit>: 0,03% (1 inclusive / 0 exclusive)
        4: grammar.Grammar.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.jvm.Code.emitStackMapFrame: 0,03% (1 inclusive / 1 exclusive)
  1: grammar.Expression$Not.accept: 0,03% (1 inclusive / 0 exclusive)
    2: grammar.ExpressionTreeCleaner.visit: 0,03% (1 inclusive / 0 exclusive)
      3: java.lang.StringBuilder.<init>: 0,03% (1 inclusive / 0 exclusive)
        4: java.lang.AbstractStringBuilder.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: sun.launcher.LauncherHelper.getMainMethod: 0,03% (1 inclusive / 1 exclusive)
  1: java.util.jar.Attributes.read: 0,03% (1 inclusive / 0 exclusive)
    2: java.lang.String.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.jvm.ClassReader$11.read: 0,03% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.jvm.ClassReader.readType: 0,03% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.jvm.ClassReader.sigToType: 0,03% (1 inclusive / 0 exclusive)
        4: com.sun.tools.javac.jvm.ClassReader.sigToType: 0,03% (1 inclusive / 1 exclusive)
  1: grammar.Grammar.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: java.util.regex.Pattern.matches: 0,03% (1 inclusive / 0 exclusive)
    2: java.util.regex.Pattern.matcher: 0,03% (1 inclusive / 0 exclusive)
      3: java.util.regex.Matcher.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: java.util.regex.Pattern.matcher: 0,03% (1 inclusive / 0 exclusive)
    2: java.util.regex.Matcher.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: java.util.LinkedHashMap.<init>: 0,03% (1 inclusive / 0 exclusive)
    2: java.util.HashMap.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.tree.TreeMaker.forToplevel: 0,03% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.tree.TreeMaker.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.tree.TreeMaker$AnnotationBuilder.<init>: 0,03% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.parser.ParserFactory.instance: 0,03% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.parser.ParserFactory.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.code.Symtab.instance: 0,03% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.code.Symtab.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.main.RecognizedOptions.getJavaCompilerOptions: 0,03% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.main.RecognizedOptions.getOptions: 0,03% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.main.RecognizedOptions.getAll: 0,03% (1 inclusive / 1 exclusive)
  1: grammar.GrammarDSL.str: 0,03% (1 inclusive / 0 exclusive)
    2: grammar.Expression$StringLiteral.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: grammar.Expression.<init>: 0,03% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: java.util.jar.JavaUtilJarAccessImpl.jarFileHasClassPathAttribute: 0,03% (1 inclusive / 0 exclusive)
    2: java.util.jar.JarFile.hasClassPathAttribute: 0,03% (1 inclusive / 1 exclusive)
  1: java.lang.Class.newInstance0: 0,03% (1 inclusive / 0 exclusive)
    2: java.lang.Class.getConstructor0: 0,03% (1 inclusive / 0 exclusive)
      3: java.lang.Class.privateGetDeclaredConstructors: 0,03% (1 inclusive / 0 exclusive)
        4: java.lang.Class.getDeclaredConstructors0: 0,03% (1 inclusive / 1 exclusive)
  1: java.util.HashMap.transfer: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.code.Scope$CompoundScope$2.iterator: 0,03% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.code.Scope$CompoundScope$2$1.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.code.Scope$CompoundScope$CompoundScopeIterator.<init>: 0,03% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: compiler.util.Quoter$DynamicQuoteMethod.dynamicQuote: 0,03% (1 inclusive / 0 exclusive)
    2: java.lang.StringBuffer.replace: 0,03% (1 inclusive / 0 exclusive)
      3: java.lang.AbstractStringBuilder.replace: 0,03% (1 inclusive / 0 exclusive)
        4: java.lang.System.arraycopy: 0,03% (1 inclusive / 1 exclusive)
  1: compiler.java.StringJavaFileObject.<init>: 0,03% (1 inclusive / 0 exclusive)
    2: java.lang.StringBuilder.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: java.lang.AbstractStringBuilder.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: java.util.Collections.indexedBinarySearch: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.file.RegularFileObject.openInputStream: 0,03% (1 inclusive / 0 exclusive)
    2: java.io.FileInputStream.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: java.io.FileInputStream.open: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.util.Warner.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.comp.Check.instance: 0,03% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.comp.Check.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.comp.Enter.instance: 0,03% (1 inclusive / 0 exclusive)
        4: com.sun.tools.javac.comp.Enter.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: java.io.File.list: 0,03% (1 inclusive / 0 exclusive)
    2: java.io.WinNTFileSystem.list: 0,03% (1 inclusive / 1 exclusive)
  1: sun.misc.URLClassPath$JarLoader.getClassPath: 0,03% (1 inclusive / 0 exclusive)
    2: java.util.jar.JavaUtilJarAccessImpl.jarFileHasClassPathAttribute: 0,03% (1 inclusive / 0 exclusive)
      3: java.util.jar.JarFile.hasClassPathAttribute: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.parser.JavacParser.formalParameter: 0,03% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.parser.JavacParser.variableDeclaratorId: 0,03% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.tree.TreeMaker.VarDef: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.util.Position$LineMapImpl.getLineNumber: 0,03% (1 inclusive / 1 exclusive)
  1: java.util.AbstractMap.<init>: 0,03% (1 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: compiler.Macro.expand: 0,03% (1 inclusive / 0 exclusive)
    2: compiler.macros.LambdaMacro.expand: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.comp.MemberEnter.visitImport: 0,03% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.comp.MemberEnter.importNamedStatic: 0,03% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.comp.MemberEnter$3.importFrom: 0,03% (1 inclusive / 0 exclusive)
        4: com.sun.tools.javac.code.Symbol.isStatic: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.comp.Resolve.checkRawArgumentsAcceptable: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.main.RecognizedOptions.<clinit>: 0,03% (1 inclusive / 0 exclusive)
    2: java.util.EnumSet.of: 0,03% (1 inclusive / 0 exclusive)
      3: java.util.RegularEnumSet.add: 0,03% (1 inclusive / 0 exclusive)
        4: java.util.RegularEnumSet.add: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.code.Scope.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: java.io.WinNTFileSystem.list: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.util.Name.getBytes: 0,03% (1 inclusive / 0 exclusive)
    2: java.lang.System.arraycopy: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.jvm.ClassReader.readAttrs: 0,03% (1 inclusive / 0 exclusive)
    2: com.sun.tools.javac.jvm.ClassReader$6.read: 0,03% (1 inclusive / 0 exclusive)
      3: com.sun.tools.javac.jvm.ClassReader.readInnerClasses: 0,03% (1 inclusive / 0 exclusive)
        4: com.sun.tools.javac.jvm.ClassReader.enterClass: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.comp.TransTypes$1.accepts: 0,03% (1 inclusive / 1 exclusive)
  1: java.util.Collections.binarySearch: 0,03% (1 inclusive / 0 exclusive)
    2: java.util.Collections.indexedBinarySearch: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.tree.TreeScanner.scan: 0,03% (1 inclusive / 1 exclusive)
  1: java.io.WinNTFileSystem.createFileExclusively: 0,03% (1 inclusive / 1 exclusive)
  1: java.util.zip.ZipFile$ZipFileInputStream.read: 0,03% (1 inclusive / 0 exclusive)
    2: java.util.zip.ZipFile.access$1400: 0,03% (1 inclusive / 0 exclusive)
      3: java.util.zip.ZipFile.read: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.code.Types.isSubSignature: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.file.Paths.getPathEntries: 0,03% (1 inclusive / 0 exclusive)
    2: java.lang.String.substring: 0,03% (1 inclusive / 0 exclusive)
      3: java.lang.String.<init>: 0,03% (1 inclusive / 0 exclusive)
        4: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.util.ForwardingDiagnosticFormatter$ForwardingConfiguration.<init>: 0,03% (1 inclusive / 0 exclusive)
    2: java.lang.Object.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: java.lang.String.split: 0,03% (1 inclusive / 0 exclusive)
    2: java.util.ArrayList.<init>: 0,03% (1 inclusive / 0 exclusive)
      3: java.util.ArrayList.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: com.sun.tools.javac.code.Symtab.<init>: 0,03% (1 inclusive / 1 exclusive)
  1: sun.misc.URLClassPath.getLoader: 0,03% (1 inclusive / 0 exclusive)
    2: sun.misc.URLClassPath$JarLoader.getClassPath: 0,03% (1 inclusive / 0 exclusive)
      3: java.util.jar.JavaUtilJarAccessImpl.jarFileHasClassPathAttribute: 0,03% (1 inclusive / 0 exclusive)
        4: java.util.jar.JarFile.hasClassPathAttribute: 0,03% (1 inclusive / 1 exclusive)
  1: grammar.GrammarDSL.rule_seq: 0,03% (1 inclusive / 1 exclusive)
  1: java.lang.Thread.currentThread: 0,03% (1 inclusive / 1 exclusive)

Method Times by Line Number (times inclusive): 3076 ticks
  1: java.lang.Object.<init>: 71,26% (2192 inclusive)
    2: (Object.java:37): 71,26% (2192 inclusive)
  1: parser.ParseData.<init>: 34,33% (1056 inclusive)
    2: (ParseData.java:44): 13,98% (430 inclusive)
    2: (ParseData.java:38): 13,52% (416 inclusive)
    2: (ParseData.java:47): 6,83% (210 inclusive)
  1: parser.Matcher.parse: 34,33% (1056 inclusive)
    2: (Matcher.java:133): 34,33% (1056 inclusive)
  1: java.util.ArrayList.<init>: 28,38% (873 inclusive)
    2: (ArrayList.java:128): 14,73% (453 inclusive)
    2: (ArrayList.java:132): 13,62% (419 inclusive)
    2: (ArrayList.java:150): 0,03% (1 inclusive)
    2: (ArrayList.java:139): 0% (0 inclusive)
  1: java.util.AbstractCollection.<init>: 16,87% (519 inclusive)
    2: (AbstractCollection.java:66): 16,87% (519 inclusive)
  1: java.util.AbstractList.<init>: 14,95% (460 inclusive)
    2: (AbstractList.java:76): 14,95% (460 inclusive)
  1: parser.LimitedMemo.get: 14,53% (447 inclusive)
    2: (LimitedMemo.java:86): 9,79% (301 inclusive)
    2: (LimitedMemo.java:99): 3,77% (116 inclusive)
    2: (LimitedMemo.java:92): 0,98% (30 inclusive)
  1: parser.ParseErrors.<init>: 13,98% (430 inclusive)
    2: (ParseErrors.java:89): 7,18% (221 inclusive)
    2: (ParseErrors.java:81): 6,79% (209 inclusive)
  1: java.lang.String.<init>: 7,48% (230 inclusive)
    2: (String.java:645): 4,62% (142 inclusive)
    2: (String.java:234): 1,17% (36 inclusive)
    2: (String.java:221): 0,55% (17 inclusive)
    2: (String.java:448): 0,49% (15 inclusive)
    2: (String.java:452): 0,42% (13 inclusive)
    2: (String.java:193): 0,13% (4 inclusive)
    2: (String.java:197): 0,07% (2 inclusive)
    2: (String.java:346): 0,03% (1 inclusive)
  1: util.apache.CharSequenceTranslator.translate: 6,31% (194 inclusive)
    2: (CharSequenceTranslator.java:87): 6,11% (188 inclusive)
    2: (CharSequenceTranslator.java:58): 0,2% (6 inclusive)
    2: (CharSequenceTranslator.java:59): 0% (0 inclusive)
  1: java.lang.Character.toChars: 6,11% (188 inclusive)
    2: (Character.java:4976): 6,11% (188 inclusive)
  1: source.SourceString.<init>: 5,95% (183 inclusive)
    2: (SourceString.java:57): 5,95% (183 inclusive)
  1: java.lang.Integer.valueOf: 4,55% (140 inclusive)
    2: (Integer.java:642): 4,55% (140 inclusive)
  1: java.lang.Integer.<init>: 4,55% (140 inclusive)
    2: (Integer.java:659): 4,55% (140 inclusive)
  1: java.lang.Number.<init>: 4,55% (140 inclusive)
    2: (Number.java:49): 4,55% (140 inclusive)
  1: java.util.AbstractList.iterator: 4,42% (136 inclusive)
    2: (AbstractList.java:288): 4,42% (136 inclusive)
  1: java.util.AbstractList$Itr.<init>: 4,42% (136 inclusive)
    2: (AbstractList.java:330): 4,42% (136 inclusive)
  1: java.lang.String.substring: 4,23% (130 inclusive)
    2: (String.java:1960): 4,23% (130 inclusive)
    2: (String.java:1925): 0% (0 inclusive)
  1: java.util.ArrayList.iterator: 3,64% (112 inclusive)
    2: (ArrayList.java:774): 3,64% (112 inclusive)
  1: java.util.ArrayList$Itr.<init>: 3,64% (112 inclusive)
    2: (ArrayList.java:780): 3,64% (112 inclusive)
  1: java.util.Collections$UnmodifiableRandomAccessList.<init>: 2,67% (82 inclusive)
    2: (Collections.java:1282): 2,67% (82 inclusive)
  1: java.util.Collections$UnmodifiableList.<init>: 2,67% (82 inclusive)
    2: (Collections.java:1204): 2,67% (82 inclusive)
  1: java.util.Collections$UnmodifiableCollection.<init>: 2,67% (82 inclusive)
    2: (Collections.java:1049): 2,67% (82 inclusive)
  1: parser.ParseData.succeed: 2,54% (78 inclusive)
    2: (ParseData.java:83): 2,54% (78 inclusive)
  1: parser.Match.<init>: 2,54% (78 inclusive)
    2: (Match.java:87): 2,54% (78 inclusive)
  1: parser.Matcher.succeed: 2,54% (78 inclusive)
    2: (Matcher.java:160): 2,54% (78 inclusive)
  1: com.sun.tools.javac.file.RelativePath$RelativeFile.<init>: 1,92% (59 inclusive)
    2: (RelativePath.java:166): 1,43% (44 inclusive)
    2: (RelativePath.java:157): 0,49% (15 inclusive)
  1: java.lang.AbstractStringBuilder.<init>: 1,82% (56 inclusive)
    2: (AbstractStringBuilder.java:63): 1,07% (33 inclusive)
    2: (AbstractStringBuilder.java:64): 0,75% (23 inclusive)
  1: com.sun.tools.javac.util.List.<init>: 1,82% (56 inclusive)
    2: (List.java:65): 1,82% (56 inclusive)
  1: trees.MatchIterator$NodeState.<init>: 1,76% (54 inclusive)
    2: (MatchIterator.java:31): 1,76% (54 inclusive)
  1: trees.MatchIterator.next: 1,76% (54 inclusive)
    2: (MatchIterator.java:80): 1,76% (54 inclusive)
  1: trees.MatchIterator.forward: 1,76% (54 inclusive)
    2: (MatchIterator.java:105): 1,69% (52 inclusive)
    2: (MatchIterator.java:90): 0,07% (2 inclusive)
  1: java.util.Arrays.copyOf: 1,69% (52 inclusive)
    2: (Arrays.java:2245): 0,72% (22 inclusive)
    2: (Arrays.java:2367): 0,68% (21 inclusive)
    2: (Arrays.java:2271): 0,29% (9 inclusive)
    2: (Arrays.java:2219): 0% (0 inclusive)
  1: source.SourceFileText.at: 1,69% (52 inclusive)
    2: (SourceFileText.java:143): 1,69% (52 inclusive)
  1: java.lang.StringBuilder.<init>: 1,63% (50 inclusive)
    2: (StringBuilder.java:85): 1,5% (46 inclusive)
    2: (StringBuilder.java:109): 0,13% (4 inclusive)
  1: source.SourceString.at: 1,46% (45 inclusive)
    2: (SourceString.java:86): 1,46% (45 inclusive)
  1: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.readEntry: 1,43% (44 inclusive)
    2: (ZipFileIndex.java:668): 1,4% (43 inclusive)
    2: (ZipFileIndex.java:644): 0,03% (1 inclusive)
  1: util.ArrayIterator.<init>: 1,4% (43 inclusive)
    2: (ArrayIterator.java:23): 1,4% (43 inclusive)
    2: (ArrayIterator.java:37): 0% (0 inclusive)
  1: util.AbstractBiIterator.<init>: 1,4% (43 inclusive)
    2: (AbstractBiIterator.java:7): 1,4% (43 inclusive)
  1: java.lang.StringBuilder.toString: 1,37% (42 inclusive)
    2: (StringBuilder.java:405): 1,37% (42 inclusive)
  1: com.sun.tools.javac.util.List.reverse: 1,2% (37 inclusive)
    2: (List.java:210): 1,2% (37 inclusive)
  1: java.util.Arrays.copyOfRange: 1,17% (36 inclusive)
    2: (Arrays.java:2694): 1,17% (36 inclusive)
  1: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.buildIndex: 1,01% (31 inclusive)
    2: (ZipFileIndex.java:579): 1,01% (31 inclusive)
  1: java.util.HashMap$Entry.<init>: 1,01% (31 inclusive)
    2: (HashMap.java:696): 1,01% (31 inclusive)
  1: java.util.HashMap.put: 1,01% (31 inclusive)
    2: (HashMap.java:402): 1,01% (31 inclusive)
  1: java.util.HashMap.addEntry: 1,01% (31 inclusive)
    2: (HashMap.java:766): 0,98% (30 inclusive)
    2: (HashMap.java:768): 0,03% (1 inclusive)
  1: parser.LimitedMemo$Memoed.<init>: 0,98% (30 inclusive)
    2: (LimitedMemo.java:30): 0,46% (14 inclusive)
    2: (LimitedMemo.java:33): 0,29% (9 inclusive)
    2: (LimitedMemo.java:32): 0,23% (7 inclusive)
  1: java.net.URLClassLoader.defineClass: 0,72% (22 inclusive)
    2: (URLClassLoader.java:449): 0,36% (11 inclusive)
    2: (URLClassLoader.java:444): 0,23% (7 inclusive)
    2: (URLClassLoader.java:447): 0,07% (2 inclusive)
    2: (URLClassLoader.java:410): 0,03% (1 inclusive)
    2: (URLClassLoader.java:416): 0,03% (1 inclusive)
  1: com.sun.tools.javac.file.RelativePath.<init>: 0,72% (22 inclusive)
    2: (RelativePath.java:47): 0,72% (22 inclusive)
  1: java.lang.AbstractStringBuilder.append: 0,62% (19 inclusive)
    2: (AbstractStringBuilder.java:415): 0,62% (19 inclusive)
  1: java.lang.AbstractStringBuilder.expandCapacity: 0,62% (19 inclusive)
    2: (AbstractStringBuilder.java:130): 0,62% (19 inclusive)
  1: java.lang.AbstractStringBuilder.ensureCapacityInternal: 0,62% (19 inclusive)
    2: (AbstractStringBuilder.java:114): 0,62% (19 inclusive)
  1: java.lang.String.replace: 0,62% (19 inclusive)
    2: (String.java:2078): 0,33% (10 inclusive)
    2: (String.java:2069): 0,29% (9 inclusive)
  1: com.sun.tools.javac.file.ZipFileIndex$Entry.<init>: 0,59% (18 inclusive)
    2: (ZipFileIndex.java:1083): 0,59% (18 inclusive)
  1: parser.Matcher.visitChild: 0,52% (16 inclusive)
    2: (Matcher.java:149): 0,52% (16 inclusive)
  1: java.util.ArrayList.grow: 0,49% (15 inclusive)
    2: (ArrayList.java:213): 0,49% (15 inclusive)
  1: java.util.ArrayList.ensureCapacityInternal: 0,49% (15 inclusive)
    2: (ArrayList.java:187): 0,49% (15 inclusive)
  1: java.io.WinNTFileSystem.getBooleanAttributes: 0,46% (14 inclusive)
    2: (WinNTFileSystem.java:Unknown line): 0,46% (14 inclusive)
  1: java.io.File.<init>: 0,46% (14 inclusive)
    2: (File.java:341): 0,23% (7 inclusive)
    2: (File.java:249): 0,1% (3 inclusive)
    2: (File.java:236): 0,07% (2 inclusive)
    2: (File.java:332): 0,07% (2 inclusive)
  1: java.lang.StringCoding.decode: 0,42% (13 inclusive)
    2: (StringCoding.java:193): 0,42% (13 inclusive)
  1: sun.misc.URLClassPath$FileLoader.getResource: 0,42% (13 inclusive)
    2: (URLClassPath.java:1057): 0,16% (5 inclusive)
    2: (URLClassPath.java:1054): 0,13% (4 inclusive)
    2: (URLClassPath.java:1034): 0,07% (2 inclusive)
    2: (URLClassPath.java:1035): 0,07% (2 inclusive)
  1: java.lang.StringCoding$StringDecoder.decode: 0,42% (13 inclusive)
    2: (StringCoding.java:149): 0,42% (13 inclusive)
  1: java.net.URLStreamHandler.parseURL: 0,42% (13 inclusive)
    2: (URLStreamHandler.java:249): 0,33% (10 inclusive)
    2: (URLStreamHandler.java:302): 0,1% (3 inclusive)
  1: com.sun.tools.javac.file.ZipFileIndex$Entry.getName: 0,39% (12 inclusive)
    2: (ZipFileIndex.java:1089): 0,39% (12 inclusive)
  1: com.sun.tools.javac.file.RegularFileObject.inferBinaryName: 0,39% (12 inclusive)
    2: (RegularFileObject.java:162): 0,23% (7 inclusive)
    2: (RegularFileObject.java:163): 0,13% (4 inclusive)
    2: (RegularFileObject.java:166): 0,03% (1 inclusive)
  1: com.sun.tools.javac.file.ZipFileIndexArchive$ZipFileIndexFileObject.inferBinaryName: 0,36% (11 inclusive)
    2: (ZipFileIndexArchive.java:212): 0,36% (11 inclusive)
  1: java.lang.ClassLoader.defineClass: 0,36% (11 inclusive)
    2: (ClassLoader.java:791): 0,36% (11 inclusive)
  1: java.lang.ClassLoader.defineClass1: 0,36% (11 inclusive)
    2: (ClassLoader.java:Unknown line): 0,36% (11 inclusive)
  1: com.sun.tools.javac.file.JavacFileManager.inferBinaryName: 0,36% (11 inclusive)
    2: (JavacFileManager.java:658): 0,36% (11 inclusive)
  1: java.security.SecureClassLoader.defineClass: 0,36% (11 inclusive)
    2: (SecureClassLoader.java:142): 0,36% (11 inclusive)
  1: java.net.URLClassLoader.access$100: 0,33% (10 inclusive)
    2: (URLClassLoader.java:71): 0,33% (10 inclusive)
  1: com.sun.tools.javac.file.JavacFileManager.listDirectory: 0,33% (10 inclusive)
    2: (JavacFileManager.java:305): 0,16% (5 inclusive)
    2: (JavacFileManager.java:295): 0,1% (3 inclusive)
    2: (JavacFileManager.java:286): 0,07% (2 inclusive)
  1: com.sun.tools.javac.code.Symbol$ClassSymbol.<init>: 0,33% (10 inclusive)
    2: (Symbol.java:736): 0,1% (3 inclusive)
    2: (Symbol.java:743): 0,1% (3 inclusive)
    2: (Symbol.java:733): 0,07% (2 inclusive)
    2: (Symbol.java:735): 0,07% (2 inclusive)
  1: com.sun.tools.javac.util.Name.<init>: 0,33% (10 inclusive)
    2: (Name.java:41): 0,33% (10 inclusive)
  1: java.net.URLClassLoader$1.run: 0,33% (10 inclusive)
    2: (URLClassLoader.java:357): 0,23% (7 inclusive)
    2: (URLClassLoader.java:355): 0,03% (1 inclusive)
    2: (URLClassLoader.java:358): 0,03% (1 inclusive)
    2: (URLClassLoader.java:361): 0,03% (1 inclusive)
  1: com.sun.tools.javac.util.SharedNameTable$NameImpl.<init>: 0,33% (10 inclusive)
    2: (SharedNameTable.java:176): 0,33% (10 inclusive)
  1: com.sun.tools.javac.file.RelativePath$RelativeDirectory.<init>: 0,29% (9 inclusive)
    2: (RelativePath.java:104): 0,29% (9 inclusive)
  1: com.sun.tools.javac.code.Type.<init>: 0,29% (9 inclusive)
    2: (Type.java:118): 0,29% (9 inclusive)
  1: java.io.Win32FileSystem.resolve: 0,29% (9 inclusive)
    2: (Win32FileSystem.java:259): 0,2% (6 inclusive)
    2: (Win32FileSystem.java:254): 0,1% (3 inclusive)
  1: java.lang.StringBuffer.toString: 0,29% (9 inclusive)
    2: (StringBuffer.java:561): 0,29% (9 inclusive)
  1: com.sun.tools.javac.file.JavacFileManager.listContainer: 0,29% (9 inclusive)
    2: (JavacFileManager.java:358): 0,2% (6 inclusive)
    2: (JavacFileManager.java:357): 0,1% (3 inclusive)
  1: java.lang.ClassLoader.loadClass: 0,29% (9 inclusive)
    2: (ClassLoader.java:423): 0,16% (5 inclusive)
    2: (ClassLoader.java:412): 0,07% (2 inclusive)
    2: (ClassLoader.java:403): 0,03% (1 inclusive)
    2: (ClassLoader.java:435): 0,03% (1 inclusive)
    2: (ClassLoader.java:410): 0% (0 inclusive)
  1: com.sun.tools.javac.file.BaseFileObject.removeExtension: 0,29% (9 inclusive)
    2: (BaseFileObject.java:84): 0,29% (9 inclusive)
  1: java.io.Win32FileSystem.normalize: 0,29% (9 inclusive)
    2: (Win32FileSystem.java:174): 0,13% (4 inclusive)
    2: (Win32FileSystem.java:122): 0,1% (3 inclusive)
    2: (Win32FileSystem.java:130): 0,07% (2 inclusive)
  1: com.sun.tools.javac.util.SharedNameTable.fromUtf: 0,26% (8 inclusive)
    2: (SharedNameTable.java:143): 0,26% (8 inclusive)
  1: sun.misc.URLClassPath.getResource: 0,26% (8 inclusive)
    2: (URLClassPath.java:195): 0,26% (8 inclusive)
  1: java.lang.String.toCharArray: 0,26% (8 inclusive)
    2: (String.java:2801): 0,26% (8 inclusive)
  1: com.sun.tools.javac.util.List.of: 0,26% (8 inclusive)
    2: (List.java:89): 0,23% (7 inclusive)
    2: (List.java:95): 0,03% (1 inclusive)
  1: com.sun.tools.javac.util.Name.append: 0,26% (8 inclusive)
    2: (Name.java:88): 0,23% (7 inclusive)
    2: (Name.java:89): 0,03% (1 inclusive)
  1: java.io.File.isDirectory: 0,26% (8 inclusive)
    2: (File.java:799): 0,26% (8 inclusive)
  1: sun.misc.Resource.getBytes: 0,26% (8 inclusive)
    2: (Resource.java:117): 0,23% (7 inclusive)
    2: (Resource.java:124): 0,03% (1 inclusive)
  1: java.io.StringWriter.<init>: 0,23% (7 inclusive)
    2: (StringWriter.java:65): 0,2% (6 inclusive)
    2: (StringWriter.java:69): 0,03% (1 inclusive)
  1: com.sun.tools.javac.code.Scope$Entry.<init>: 0,23% (7 inclusive)
    2: (Scope.java:477): 0,23% (7 inclusive)
  1: compiler.java.CollectingJavaFileManager.inferBinaryName: 0,23% (7 inclusive)
    2: (CollectingJavaFileManager.java:174): 0,23% (7 inclusive)
  1: java.util.ArrayList.toArray: 0,23% (7 inclusive)
    2: (ArrayList.java:329): 0,13% (4 inclusive)
    2: (ArrayList.java:360): 0,1% (3 inclusive)
  1: java.util.zip.ZipCoder.getBytes: 0,23% (7 inclusive)
    2: (ZipCoder.java:78): 0,1% (3 inclusive)
    2: (ZipCoder.java:80): 0,07% (2 inclusive)
    2: (ZipCoder.java:89): 0,07% (2 inclusive)
  1: com.sun.tools.javac.code.Scope.enter: 0,23% (7 inclusive)
    2: (Scope.java:219): 0,2% (6 inclusive)
    2: (Scope.java:212): 0,03% (1 inclusive)
    2: (Scope.java:197): 0% (0 inclusive)
    2: (Scope.java:201): 0% (0 inclusive)
  1: sun.net.www.protocol.jar.Handler.parseURL: 0,23% (7 inclusive)
    2: (Handler.java:160): 0,13% (4 inclusive)
    2: (Handler.java:145): 0,03% (1 inclusive)
    2: (Handler.java:156): 0,03% (1 inclusive)
    2: (Handler.java:158): 0,03% (1 inclusive)
  1: grammar.ExpressionTreeCleaner.visit: 0,23% (7 inclusive)
    2: (ExpressionTreeCleaner.java:227): 0,1% (3 inclusive)
    2: (ExpressionTreeCleaner.java:270): 0,07% (2 inclusive)
    2: (ExpressionTreeCleaner.java:200): 0,03% (1 inclusive)
    2: (ExpressionTreeCleaner.java:245): 0,03% (1 inclusive)
  1: com.sun.tools.javac.jvm.ClassReader.sigToType: 0,2% (6 inclusive)
    2: (ClassReader.java:673): 0,1% (3 inclusive)
    2: (ClassReader.java:663): 0,07% (2 inclusive)
    2: (ClassReader.java:678): 0,03% (1 inclusive)
    2: (ClassReader.java:589): 0% (0 inclusive)
  1: source.SourceComposed.strFromMatches: 0,2% (6 inclusive)
    2: (SourceComposed.java:23): 0,1% (3 inclusive)
    2: (SourceComposed.java:29): 0,1% (3 inclusive)
  1: java.io.Writer.<init>: 0,2% (6 inclusive)
    2: (Writer.java:75): 0,2% (6 inclusive)
  1: java.util.zip.ZipFile.getEntry: 0,2% (6 inclusive)
    2: (ZipFile.java:304): 0,2% (6 inclusive)
  1: com.sun.tools.javac.util.List.prepend: 0,2% (6 inclusive)
    2: (List.java:174): 0,2% (6 inclusive)
  1: com.sun.tools.javac.code.Scope.makeEntry: 0,2% (6 inclusive)
    2: (Scope.java:230): 0,2% (6 inclusive)
  1: com.sun.tools.javac.file.ZipFileIndexArchive.getFileObject: 0,2% (6 inclusive)
    2: (ZipFileIndexArchive.java:74): 0,1% (3 inclusive)
    2: (ZipFileIndexArchive.java:76): 0,1% (3 inclusive)
  1: java.util.jar.JarFile.getEntry: 0,2% (6 inclusive)
    2: (JarFile.java:225): 0,2% (6 inclusive)
  1: java.io.File.exists: 0,2% (6 inclusive)
    2: (File.java:772): 0,2% (6 inclusive)
  1: trees.MatchFinder.find: 0,2% (6 inclusive)
    2: (MatchFinder.java:52): 0,1% (3 inclusive)
    2: (MatchFinder.java:55): 0,07% (2 inclusive)
    2: (MatchFinder.java:58): 0,03% (1 inclusive)
  1: java.io.FileInputStream.<init>: 0,2% (6 inclusive)
    2: (FileInputStream.java:138): 0,1% (3 inclusive)
    2: (FileInputStream.java:136): 0,07% (2 inclusive)
    2: (FileInputStream.java:56): 0,03% (1 inclusive)
  1: java.io.FileOutputStream.<init>: 0,16% (5 inclusive)
    2: (FileOutputStream.java:212): 0,16% (5 inclusive)
    2: (FileOutputStream.java:165): 0% (0 inclusive)
  1: java.lang.StringBuffer.<init>: 0,16% (5 inclusive)
    2: (StringBuffer.java:108): 0,16% (5 inclusive)
  1: java.io.FileOutputStream.open: 0,16% (5 inclusive)
    2: (FileOutputStream.java:Unknown line): 0,16% (5 inclusive)
  1: java.net.URLClassLoader.findClass: 0,16% (5 inclusive)
    2: (URLClassLoader.java:354): 0,16% (5 inclusive)
  1: com.sun.tools.javac.util.Name$Table.fromString: 0,16% (5 inclusive)
    2: (Name.java:203): 0,16% (5 inclusive)
  1: trees.MatchIterator.<init>: 0,16% (5 inclusive)
    2: (MatchIterator.java:65): 0,16% (5 inclusive)
  1: com.sun.tools.javac.util.Names.fromString: 0,16% (5 inclusive)
    2: (Names.java:288): 0,16% (5 inclusive)
  1: java.security.AccessController.doPrivileged: 0,16% (5 inclusive)
    2: (AccessController.java:Unknown line): 0,16% (5 inclusive)
  1: java.util.Collections$UnmodifiableCollection.toArray: 0,16% (5 inclusive)
    2: (Collections.java:1058): 0,13% (4 inclusive)
    2: (Collections.java:1059): 0,03% (1 inclusive)
  1: com.sun.tools.javac.file.RelativePath$RelativeFile.dirname: 0,16% (5 inclusive)
    2: (RelativePath.java:176): 0,16% (5 inclusive)
  1: com.sun.tools.javac.code.Symbol$TypeSymbol.formFlatName: 0,16% (5 inclusive)
    2: (Symbol.java:547): 0,16% (5 inclusive)
  1: compiler.java.CompiledClass.dump: 0,16% (5 inclusive)
    2: (CompiledClass.java:74): 0,1% (3 inclusive)
    2: (CompiledClass.java:73): 0,03% (1 inclusive)
    2: (CompiledClass.java:76): 0,03% (1 inclusive)
  1: sun.misc.URLClassPath$JarLoader.checkResource: 0,16% (5 inclusive)
    2: (URLClassPath.java:734): 0,1% (3 inclusive)
    2: (URLClassPath.java:747): 0,07% (2 inclusive)
  1: java.util.Vector.<init>: 0,16% (5 inclusive)
    2: (Vector.java:127): 0,16% (5 inclusive)
  1: source.SourceFileText.<init>: 0,16% (5 inclusive)
    2: (SourceFileText.java:118): 0,16% (5 inclusive)
  1: sun.misc.URLClassPath$FileLoader$1.getInputStream: 0,16% (5 inclusive)
    2: (URLClassPath.java:1063): 0,16% (5 inclusive)
  1: com.sun.tools.javac.main.JavaCompiler.<init>: 0,16% (5 inclusive)
    2: (JavaCompiler.java:331): 0,07% (2 inclusive)
    2: (JavaCompiler.java:338): 0,03% (1 inclusive)
    2: (JavaCompiler.java:353): 0,03% (1 inclusive)
    2: (JavaCompiler.java:355): 0,03% (1 inclusive)
  1: com.sun.tools.javac.util.JCDiagnostic$Factory.qualify: 0,16% (5 inclusive)
    2: (JCDiagnostic.java:234): 0,16% (5 inclusive)
  1: java.net.URL.<init>: 0,16% (5 inclusive)
    2: (URL.java:505): 0,1% (3 inclusive)
    2: (URL.java:612): 0,07% (2 inclusive)
    2: (URL.java:480): 0% (0 inclusive)
  1: java.lang.ref.Reference.<init>: 0,16% (5 inclusive)
    2: (Reference.java:233): 0,16% (5 inclusive)
    2: (Reference.java:230): 0% (0 inclusive)
  1: com.sun.tools.javac.code.Symbol.<init>: 0,16% (5 inclusive)
    2: (Symbol.java:116): 0,16% (5 inclusive)
  1: com.sun.tools.javac.util.Names.<init>: 0,13% (4 inclusive)
    2: (Names.java:157): 0,07% (2 inclusive)
    2: (Names.java:188): 0,03% (1 inclusive)
    2: (Names.java:201): 0,03% (1 inclusive)
  1: com.sun.tools.javac.file.RelativePath$RelativeDirectory.dirname: 0,13% (4 inclusive)
    2: (RelativePath.java:120): 0,13% (4 inclusive)
  1: java.io.StringWriter.toString: 0,13% (4 inclusive)
    2: (StringWriter.java:210): 0,13% (4 inclusive)
  1: com.sun.tools.javac.jvm.ClassReader.<init>: 0,13% (4 inclusive)
    2: (ClassReader.java:263): 0,03% (1 inclusive)
    2: (ClassReader.java:264): 0,03% (1 inclusive)
    2: (ClassReader.java:291): 0,03% (1 inclusive)
    2: (ClassReader.java:925): 0,03% (1 inclusive)
  1: com.sun.tools.javac.code.Type$ClassType.<init>: 0,13% (4 inclusive)
    2: (Type.java:564): 0,13% (4 inclusive)
  1: com.sun.tools.javac.jvm.ClassReader.instance: 0,13% (4 inclusive)
    2: (ClassReader.java:226): 0,13% (4 inclusive)
  1: java.lang.String.concat: 0,13% (4 inclusive)
    2: (String.java:2024): 0,1% (3 inclusive)
    2: (String.java:2021): 0,03% (1 inclusive)
  1: com.sun.tools.javac.main.JavaCompiler.instance: 0,13% (4 inclusive)
    2: (JavaCompiler.java:88): 0,13% (4 inclusive)
  1: sun.net.www.ParseUtil.encodePath: 0,13% (4 inclusive)
    2: (ParseUtil.java:105): 0,07% (2 inclusive)
    2: (ParseUtil.java:146): 0,07% (2 inclusive)
  1: com.sun.tools.javac.file.FSInfo.isDirectory: 0,1% (3 inclusive)
    2: (FSInfo.java:58): 0,1% (3 inclusive)
  1: java.io.File.hashCode: 0,1% (3 inclusive)
    2: (File.java:1985): 0,1% (3 inclusive)
  1: java.util.HashMap.get: 0,1% (3 inclusive)
    2: (HashMap.java:317): 0,1% (3 inclusive)
  1: java.lang.System.arraycopy: 0,1% (3 inclusive)
    2: (System.java:Unknown line): 0,1% (3 inclusive)
  1: com.sun.tools.javac.tree.JCTree.<init>: 0,1% (3 inclusive)
    2: (JCTree.java:79): 0,1% (3 inclusive)
  1: com.sun.tools.javac.tree.JCTree$JCExpression.<init>: 0,1% (3 inclusive)
    2: (JCTree.java:543): 0,1% (3 inclusive)
  1: com.sun.tools.javac.main.RecognizedOptions.getAll: 0,1% (3 inclusive)
    2: (RecognizedOptions.java:257): 0,1% (3 inclusive)
  1: trees.MatchFinder.trace: 0,1% (3 inclusive)
    2: (MatchFinder.java:75): 0,1% (3 inclusive)
  1: java.lang.String.toLowerCase: 0,1% (3 inclusive)
    2: (String.java:2486): 0,1% (3 inclusive)
  1: java.io.FileInputStream.open: 0,1% (3 inclusive)
    2: (FileInputStream.java:Unknown line): 0,1% (3 inclusive)
  1: com.sun.tools.javac.jvm.ClassReader.enterClass: 0,1% (3 inclusive)
    2: (ClassReader.java:2065): 0,03% (1 inclusive)
    2: (ClassReader.java:2073): 0,03% (1 inclusive)
    2: (ClassReader.java:2076): 0,03% (1 inclusive)
  1: util.FileUtils.write: 0,1% (3 inclusive)
    2: (FileUtils.java:99): 0,07% (2 inclusive)
    2: (FileUtils.java:97): 0,03% (1 inclusive)
  1: java.io.Win32FileSystem.hashCode: 0,1% (3 inclusive)
    2: (Win32FileSystem.java:598): 0,1% (3 inclusive)
  1: compiler.util.MatchCreator.new_match: 0,1% (3 inclusive)
    2: (MatchCreator.java:54): 0,1% (3 inclusive)
  1: com.sun.tools.javac.code.Types$DefaultTypeVisitor.<init>: 0,1% (3 inclusive)
    2: (Types.java:3711): 0,1% (3 inclusive)
  1: com.sun.tools.javac.file.ZipFileIndex$DirectoryEntry.getEntry: 0,1% (3 inclusive)
    2: (ZipFileIndex.java:769): 0,1% (3 inclusive)
  1: sun.net.www.protocol.file.Handler.parseURL: 0,1% (3 inclusive)
    2: (Handler.java:67): 0,1% (3 inclusive)
  1: com.sun.tools.javac.code.Symbol$MethodSymbol.<init>: 0,1% (3 inclusive)
    2: (Symbol.java:1043): 0,1% (3 inclusive)
  1: com.sun.tools.javac.file.BaseFileObject.<init>: 0,1% (3 inclusive)
    2: (BaseFileObject.java:51): 0,1% (3 inclusive)
  1: com.sun.tools.javac.code.Symbol$TypeSymbol.formFullName: 0,1% (3 inclusive)
    2: (Symbol.java:532): 0,1% (3 inclusive)
  1: java.net.URLClassLoader$1.<init>: 0,1% (3 inclusive)
    2: (URLClassLoader.java:355): 0,1% (3 inclusive)
  1: sun.misc.Resource.cachedInputStream: 0,1% (3 inclusive)
    2: (Resource.java:77): 0,1% (3 inclusive)
  1: com.sun.tools.javac.file.ZipFileIndexArchive$ZipFileIndexFileObject.<init>: 0,1% (3 inclusive)
    2: (ZipFileIndexArchive.java:120): 0,1% (3 inclusive)
  1: com.sun.tools.javac.util.ListBuffer.append: 0,1% (3 inclusive)
    2: (ListBuffer.java:132): 0,1% (3 inclusive)
  1: com.sun.tools.javac.code.Types$UnaryVisitor.<init>: 0,1% (3 inclusive)
    2: (Types.java:3790): 0,1% (3 inclusive)
  1: com.sun.tools.javac.file.ZipFileIndex$DirectoryEntry.access$100: 0,1% (3 inclusive)
    2: (ZipFileIndex.java:700): 0,1% (3 inclusive)
  1: com.sun.tools.javac.code.Type$MethodType.<init>: 0,1% (3 inclusive)
    2: (Type.java:872): 0,1% (3 inclusive)
  1: com.sun.tools.javac.code.Types$SimpleVisitor.<init>: 0,1% (3 inclusive)
    2: (Types.java:3760): 0,1% (3 inclusive)
  1: compiler.MacroExpander.transform: 0,1% (3 inclusive)
    2: (MacroExpander.java:32): 0,07% (2 inclusive)
    2: (MacroExpander.java:30): 0,03% (1 inclusive)
  1: com.sun.tools.javac.util.SharedNameTable.fromChars: 0,07% (2 inclusive)
    2: (SharedNameTable.java:112): 0,07% (2 inclusive)
  1: java.lang.ClassLoader.checkCerts: 0,07% (2 inclusive)
    2: (ClassLoader.java:924): 0,07% (2 inclusive)
  1: com.sun.tools.javac.util.ListBuffer.<init>: 0,07% (2 inclusive)
    2: (ListBuffer.java:71): 0,07% (2 inclusive)
  1: com.sun.tools.javac.util.Names.createTable: 0,07% (2 inclusive)
    2: (Names.java:276): 0,07% (2 inclusive)
  1: java.util.concurrent.atomic.AtomicInteger.compareAndSet: 0,07% (2 inclusive)
    2: (AtomicInteger.java:135): 0,07% (2 inclusive)
  1: com.sun.tools.javac.jvm.ClassReader.readMethod: 0,07% (2 inclusive)
    2: (ClassReader.java:1742): 0,07% (2 inclusive)
  1: java.lang.ClassLoader.findBootstrapClass: 0,07% (2 inclusive)
    2: (ClassLoader.java:Unknown line): 0,07% (2 inclusive)
  1: sun.misc.Unsafe.compareAndSwapInt: 0,07% (2 inclusive)
    2: (Unsafe.java:Unknown line): 0,07% (2 inclusive)
  1: java.lang.Throwable.<init>: 0,07% (2 inclusive)
    2: (Throwable.java:287): 0,03% (1 inclusive)
    2: (Throwable.java:309): 0,03% (1 inclusive)
  1: com.sun.tools.javac.comp.Resolve.selectBest: 0,07% (2 inclusive)
    2: (Resolve.java:687): 0,07% (2 inclusive)
  1: java.lang.Class.getComponentType: 0,07% (2 inclusive)
    2: (Class.java:Unknown line): 0,07% (2 inclusive)
  1: java.lang.Exception.<init>: 0,07% (2 inclusive)
    2: (Exception.java:102): 0,03% (1 inclusive)
    2: (Exception.java:84): 0,03% (1 inclusive)
  1: java.io.FileDescriptor.decrementAndGetUseCount: 0,07% (2 inclusive)
    2: (FileDescriptor.java:178): 0,07% (2 inclusive)
  1: sun.misc.Launcher$AppClassLoader.loadClass: 0,07% (2 inclusive)
    2: (Launcher.java:308): 0,07% (2 inclusive)
  1: com.sun.tools.javac.util.ListBuffer.iterator: 0,07% (2 inclusive)
    2: (ListBuffer.java:205): 0,07% (2 inclusive)
  1: java.io.FileDescriptor.<init>: 0,07% (2 inclusive)
    2: (FileDescriptor.java:60): 0,07% (2 inclusive)
  1: com.sun.tools.javac.file.RegularFileObject.<init>: 0,07% (2 inclusive)
    2: (RegularFileObject.java:67): 0,07% (2 inclusive)
  1: com.sun.tools.javac.code.Types$ImplementationCache.implementationInternal: 0,07% (2 inclusive)
    2: (Types.java:2081): 0,03% (1 inclusive)
    2: (Types.java:2084): 0,03% (1 inclusive)
  1: com.sun.tools.javac.tree.JCTree$JCIdent.<init>: 0,07% (2 inclusive)
    2: (JCTree.java:1700): 0,07% (2 inclusive)
  1: sun.nio.fs.WindowsPathParser.normalize: 0,07% (2 inclusive)
    2: (WindowsPathParser.java:190): 0,07% (2 inclusive)
  1: com.sun.tools.javac.api.JavacTaskImpl.call: 0,07% (2 inclusive)
    2: (JavacTaskImpl.java:132): 0,07% (2 inclusive)
  1: java.util.AbstractQueue.<init>: 0,07% (2 inclusive)
    2: (AbstractQueue.java:71): 0,07% (2 inclusive)
  1: com.sun.tools.javac.jvm.ClassReader.includeClassFile: 0,07% (2 inclusive)
    2: (ClassReader.java:2377): 0,03% (1 inclusive)
    2: (ClassReader.java:2383): 0,03% (1 inclusive)
  1: com.sun.tools.javac.jvm.Code.emitop0: 0,07% (2 inclusive)
    2: (Code.java:475): 0,07% (2 inclusive)
  1: java.lang.String.trim: 0,07% (2 inclusive)
    2: (String.java:2781): 0,07% (2 inclusive)
  1: java.lang.ref.Finalizer.<init>: 0,07% (2 inclusive)
    2: (Finalizer.java:84): 0,07% (2 inclusive)
  1: grammar.java._B_Expressions.<init>: 0,07% (2 inclusive)
    2: (_B_Expressions.java:12): 0,03% (1 inclusive)
    2: (_B_Expressions.java:412): 0,03% (1 inclusive)
  1: com.sun.tools.javac.comp.Resolve.findMethod: 0,07% (2 inclusive)
    2: (Resolve.java:949): 0,07% (2 inclusive)
    2: (Resolve.java:910): 0% (0 inclusive)
  1: java.net.URLStreamHandler.toExternalForm: 0,07% (2 inclusive)
    2: (URLStreamHandler.java:490): 0,03% (1 inclusive)
    2: (URLStreamHandler.java:508): 0,03% (1 inclusive)
  1: com.sun.tools.javac.code.Type$ArrayType.<init>: 0,07% (2 inclusive)
    2: (Type.java:784): 0,07% (2 inclusive)
  1: com.sun.tools.javac.jvm.ClassReader.readInnerClasses: 0,07% (2 inclusive)
    2: (ClassReader.java:1967): 0,07% (2 inclusive)
  1: java.security.CodeSource.<init>: 0,07% (2 inclusive)
    2: (CodeSource.java:103): 0,07% (2 inclusive)
  1: sun.misc.URLClassPath$JarLoader$2.<init>: 0,07% (2 inclusive)
    2: (URLClassPath.java:747): 0,07% (2 inclusive)
  1: com.sun.tools.javac.util.ListBuffer$1.<init>: 0,07% (2 inclusive)
    2: (ListBuffer.java:205): 0,07% (2 inclusive)
  1: com.sun.tools.javac.main.RecognizedOptions.getOptions: 0,07% (2 inclusive)
    2: (RecognizedOptions.java:245): 0,07% (2 inclusive)
  1: sun.misc.Resource.<init>: 0,07% (2 inclusive)
    2: (Resource.java:46): 0,07% (2 inclusive)
  1: com.sun.tools.javac.util.SharedNameTable.<init>: 0,07% (2 inclusive)
    2: (SharedNameTable.java:84): 0,03% (1 inclusive)
    2: (SharedNameTable.java:85): 0,03% (1 inclusive)
    2: (SharedNameTable.java:90): 0% (0 inclusive)
  1: java.lang.ClassLoader.findBootstrapClassOrNull: 0,07% (2 inclusive)
    2: (ClassLoader.java:1061): 0,07% (2 inclusive)
  1: com.sun.tools.javac.main.Main.compile: 0,07% (2 inclusive)
    2: (Main.java:404): 0,07% (2 inclusive)
  1: grammar.Expression.<init>: 0,07% (2 inclusive)
    2: (Expression.java:77): 0,03% (1 inclusive)
    2: (Expression.java:84): 0,03% (1 inclusive)
  1: java.util.EnumSet.of: 0,07% (2 inclusive)
    2: (EnumSet.java:204): 0,03% (1 inclusive)
    2: (EnumSet.java:323): 0,03% (1 inclusive)
  1: java.io.File.listFiles: 0,07% (2 inclusive)
    2: (File.java:1133): 0,03% (1 inclusive)
    2: (File.java:1138): 0,03% (1 inclusive)
  1: java.util.concurrent.atomic.AtomicInteger.decrementAndGet: 0,07% (2 inclusive)
    2: (AtomicInteger.java:220): 0,07% (2 inclusive)
  1: trees.MatchSpec.<init>: 0,07% (2 inclusive)
    2: (MatchSpec.java:18): 0,07% (2 inclusive)
  1: java.lang.ref.FinalReference.<init>: 0,07% (2 inclusive)
    2: (FinalReference.java:34): 0,07% (2 inclusive)
  1: com.sun.tools.javac.jvm.Code.emitop: 0,07% (2 inclusive)
    2: (Code.java:361): 0,03% (1 inclusive)
    2: (Code.java:364): 0,03% (1 inclusive)
  1: source.SourceComposed.<init>: 0,07% (2 inclusive)
    2: (SourceComposed.java:17): 0,07% (2 inclusive)
  1: trees.BoundedMatchIterator.<init>: 0,07% (2 inclusive)
    2: (BoundedMatchIterator.java:50): 0,07% (2 inclusive)
  1: com.sun.tools.javac.code.DeferredLintHandler.flush: 0,07% (2 inclusive)
    2: (DeferredLintHandler.java:76): 0,07% (2 inclusive)
  1: com.sun.tools.javac.code.Symbol$TypeSymbol.<init>: 0,07% (2 inclusive)
    2: (Symbol.java:518): 0,07% (2 inclusive)
  1: com.sun.tools.javac.api.JavacTaskImpl.<init>: 0,07% (2 inclusive)
    2: (JavacTaskImpl.java:78): 0,07% (2 inclusive)
    2: (JavacTaskImpl.java:104): 0% (0 inclusive)
  1: java.util.HashMap.<init>: 0,07% (2 inclusive)
    2: (HashMap.java:223): 0,03% (1 inclusive)
    2: (HashMap.java:226): 0,03% (1 inclusive)
  1: com.sun.tools.javac.comp.Resolve.rawInstantiate: 0,07% (2 inclusive)
    2: (Resolve.java:336): 0,03% (1 inclusive)
    2: (Resolve.java:395): 0,03% (1 inclusive)
  1: compiler.MatchTreeTransformer.transformChilds: 0,07% (2 inclusive)
    2: (MatchTreeTransformer.java:41): 0,07% (2 inclusive)
    2: (MatchTreeTransformer.java:32): 0% (0 inclusive)
  1: com.sun.tools.javac.util.ListBuffer.clear: 0,07% (2 inclusive)
    2: (ListBuffer.java:76): 0,07% (2 inclusive)
  1: com.sun.tools.javac.parser.JavacParser.variableDeclaratorId: 0,03% (1 inclusive)
    2: (JavacParser.java:2224): 0,03% (1 inclusive)
  1: util.FileUtils.create: 0,03% (1 inclusive)
    2: (FileUtils.java:58): 0,03% (1 inclusive)
  1: trees.MatchFinder$Finder.find: 0,03% (1 inclusive)
    2: (MatchFinder.java:149): 0,03% (1 inclusive)
  1: java.lang.Class.getDeclaredConstructors0: 0,03% (1 inclusive)
    2: (Class.java:Unknown line): 0,03% (1 inclusive)
  1: java.util.ServiceLoader.load: 0,03% (1 inclusive)
    2: (ServiceLoader.java:466): 0,03% (1 inclusive)
  1: grammar.Expression$StringLiteral.<init>: 0,03% (1 inclusive)
    2: (Expression.java:303): 0,03% (1 inclusive)
  1: com.sun.tools.javac.util.Options.isSet: 0,03% (1 inclusive)
    2: (Options.java:112): 0,03% (1 inclusive)
  1: com.sun.tools.javac.code.Scope.getElementsByName: 0,03% (1 inclusive)
    2: (Scope.java:418): 0,03% (1 inclusive)
  1: com.sun.tools.javac.tree.JCTree$Visitor.<init>: 0,03% (1 inclusive)
    2: (JCTree.java:2187): 0,03% (1 inclusive)
  1: java.io.FilterOutputStream.close: 0,03% (1 inclusive)
    2: (FilterOutputStream.java:160): 0,03% (1 inclusive)
  1: com.sun.tools.javac.main.Main.<init>: 0,03% (1 inclusive)
    2: (Main.java:86): 0,03% (1 inclusive)
  1: java.io.FileOutputStream.close0: 0,03% (1 inclusive)
    2: (FileOutputStream.java:Unknown line): 0,03% (1 inclusive)
  1: com.sun.tools.javac.comp.TransTypes.addBridges: 0,03% (1 inclusive)
    2: (TransTypes.java:389): 0,03% (1 inclusive)
  1: java.util.WeakHashMap$Entry.<init>: 0,03% (1 inclusive)
    2: (WeakHashMap.java:691): 0,03% (1 inclusive)
  1: driver.Context.<clinit>: 0,03% (1 inclusive)
    2: (Context.java:20): 0,03% (1 inclusive)
  1: sun.misc.URLClassPath$JarLoader$2.getInputStream: 0,03% (1 inclusive)
    2: (URLClassPath.java:752): 0,03% (1 inclusive)
  1: java.util.concurrent.ConcurrentHashMap.putIfAbsent: 0,03% (1 inclusive)
    2: (ConcurrentHashMap.java:1084): 0,03% (1 inclusive)
  1: parser.Match.first: 0,03% (1 inclusive)
    2: (Match.java:253): 0,03% (1 inclusive)
  1: sun.misc.Cleaner.<init>: 0,03% (1 inclusive)
    2: (Cleaner.java:115): 0,03% (1 inclusive)
  1: java.net.URLClassLoader.isSealed: 0,03% (1 inclusive)
    2: (URLClassLoader.java:523): 0,03% (1 inclusive)
  1: com.sun.tools.javac.comp.Check$CycleChecker.checkClass: 0,03% (1 inclusive)
    2: (Check.java:1904): 0,03% (1 inclusive)
  1: com.sun.tools.javac.jvm.ClassReader.fillIn: 0,03% (1 inclusive)
    2: (ClassReader.java:2207): 0,03% (1 inclusive)
  1: java.util.ComparableTimSort.sort: 0,03% (1 inclusive)
    2: (ComparableTimSort.java:176): 0,03% (1 inclusive)
    2: (ComparableTimSort.java:146): 0% (0 inclusive)
  1: java.util.concurrent.atomic.AtomicBoolean.<clinit>: 0,03% (1 inclusive)
    2: (AtomicBoolean.java:58): 0,03% (1 inclusive)
  1: com.sun.tools.javac.comp.Check$ConversionWarner.<init>: 0,03% (1 inclusive)
    2: (Check.java:2757): 0,03% (1 inclusive)
  1: java.io.WinNTFileSystem.canonicalize0: 0,03% (1 inclusive)
    2: (WinNTFileSystem.java:Unknown line): 0,03% (1 inclusive)
  1: sun.misc.URLClassPath$JarLoader$2.getManifest: 0,03% (1 inclusive)
    2: (URLClassPath.java:756): 0,03% (1 inclusive)
  1: java.lang.ref.SoftReference.<init>: 0,03% (1 inclusive)
    2: (SoftReference.java:85): 0,03% (1 inclusive)
  1: com.sun.tools.javac.jvm.Code.emitStackMap: 0,03% (1 inclusive)
    2: (Code.java:1215): 0,03% (1 inclusive)
  1: compiler.QuotationMacroImplem.applyUnquotation: 0,03% (1 inclusive)
    2: (QuotationMacro.java:189): 0,03% (1 inclusive)
  1: com.sun.tools.javac.code.Scope$CompoundScope$2$1.nextIterator: 0,03% (1 inclusive)
    2: (Scope.java:665): 0,03% (1 inclusive)
  1: java.util.jar.JarFile.getJarEntry: 0,03% (1 inclusive)
    2: (JarFile.java:208): 0,03% (1 inclusive)
  1: java.util.jar.JarFile.hasClassPathAttribute: 0,03% (1 inclusive)
    2: (JarFile.java:483): 0,03% (1 inclusive)
  1: com.sun.tools.javac.comp.Check.convertWarner: 0,03% (1 inclusive)
    2: (Check.java:2791): 0,03% (1 inclusive)
  1: com.sun.tools.javac.code.Scope.lookup: 0,03% (1 inclusive)
    2: (Scope.java:322): 0,03% (1 inclusive)
  1: com.sun.tools.javac.jvm.ClassReader.readType: 0,03% (1 inclusive)
    2: (ClassReader.java:533): 0,03% (1 inclusive)
  1: com.sun.tools.javac.parser.JavacParser.parseCompilationUnit: 0,03% (1 inclusive)
    2: (JavacParser.java:2310): 0,03% (1 inclusive)
  1: com.sun.tools.javac.code.Symbol$MethodSymbol.implementation: 0,03% (1 inclusive)
    2: (Symbol.java:1226): 0,03% (1 inclusive)
  1: com.sun.tools.javac.code.Types.<init>: 0,03% (1 inclusive)
    2: (Types.java:2655): 0,03% (1 inclusive)
  1: com.sun.tools.javac.code.Symbol$OperatorSymbol.<init>: 0,03% (1 inclusive)
    2: (Symbol.java:1342): 0,03% (1 inclusive)
  1: com.sun.tools.javac.tree.TreeMaker.VarDef: 0,03% (1 inclusive)
    2: (TreeMaker.java:186): 0,03% (1 inclusive)
  1: java.io.FileOutputStream.close: 0,03% (1 inclusive)
    2: (FileOutputStream.java:362): 0,03% (1 inclusive)
  1: com.sun.tools.javac.tree.TreeInfo.<init>: 0,03% (1 inclusive)
    2: (TreeInfo.java:69): 0,03% (1 inclusive)
  1: com.sun.tools.javac.comp.Enter.<init>: 0,03% (1 inclusive)
    2: (Enter.java:126): 0,03% (1 inclusive)
  1: com.sun.tools.javac.tree.TreeMaker.<init>: 0,03% (1 inclusive)
    2: (TreeMaker.java:762): 0,03% (1 inclusive)
  1: com.sun.tools.javac.parser.Scanner.getLineMap: 0,03% (1 inclusive)
    2: (Scanner.java:1137): 0,03% (1 inclusive)
  1: java.util.Arrays$ArrayList.<init>: 0,03% (1 inclusive)
    2: (Arrays.java:2840): 0,03% (1 inclusive)
  1: java.util.ServiceLoader.<init>: 0,03% (1 inclusive)
    2: (ServiceLoader.java:194): 0,03% (1 inclusive)
  1: java.lang.Class.getConstructor0: 0,03% (1 inclusive)
    2: (Class.java:2714): 0,03% (1 inclusive)
  1: java.lang.AbstractStringBuilder.replace: 0,03% (1 inclusive)
    2: (AbstractStringBuilder.java:801): 0,03% (1 inclusive)
  1: java.util.zip.ZipFile.getInputStream: 0,03% (1 inclusive)
    2: (ZipFile.java:349): 0,03% (1 inclusive)
  1: com.sun.tools.javac.comp.Infer.<init>: 0,03% (1 inclusive)
    2: (Infer.java:245): 0,03% (1 inclusive)
  1: java.util.concurrent.ConcurrentHashMap.setEntryAt: 0,03% (1 inclusive)
    2: (ConcurrentHashMap.java:258): 0,03% (1 inclusive)
  1: com.sun.tools.javac.api.JavacTool.getTask: 0,03% (1 inclusive)
    2: (JavacTool.java:201): 0,03% (1 inclusive)
  1: sun.misc.Unsafe.putOrderedObject: 0,03% (1 inclusive)
    2: (Unsafe.java:Unknown line): 0,03% (1 inclusive)
  1: java.util.concurrent.locks.AbstractOwnableSynchronizer.<init>: 0,03% (1 inclusive)
    2: (AbstractOwnableSynchronizer.java:59): 0,03% (1 inclusive)
  1: com.sun.tools.javac.code.Scope$CompoundScope$CompoundScopeIterator.<init>: 0,03% (1 inclusive)
    2: (Scope.java:677): 0,03% (1 inclusive)
  1: sun.misc.URLClassPath$JarLoader.getResource: 0,03% (1 inclusive)
    2: (URLClassPath.java:819): 0,03% (1 inclusive)
  1: java.util.LinkedHashMap.createEntry: 0,03% (1 inclusive)
    2: (LinkedHashMap.java:441): 0,03% (1 inclusive)
  1: java.lang.reflect.Array.newArray: 0,03% (1 inclusive)
    2: (Array.java:Unknown line): 0,03% (1 inclusive)
  1: java.util.jar.Manifest.read: 0,03% (1 inclusive)
    2: (Manifest.java:251): 0,03% (1 inclusive)
  1: trees.MatchSpec$RuleSpec.<init>: 0,03% (1 inclusive)
    2: (MatchSpec.java:62): 0,03% (1 inclusive)
  1: com.sun.tools.javac.util.RichDiagnosticFormatter.<init>: 0,03% (1 inclusive)
    2: (RichDiagnosticFormatter.java:93): 0,03% (1 inclusive)
  1: java.lang.Class.privateGetDeclaredConstructors: 0,03% (1 inclusive)
    2: (Class.java:2404): 0,03% (1 inclusive)
  1: com.sun.tools.javac.main.RecognizedOptions$17.<init>: 0,03% (1 inclusive)
    2: (RecognizedOptions.java:445): 0,03% (1 inclusive)
  1: java.io.File.createNewFile: 0,03% (1 inclusive)
    2: (File.java:947): 0,03% (1 inclusive)
  1: java.util.regex.Pattern$CharPropertyNames.<clinit>: 0,03% (1 inclusive)
    2: (Pattern.java:5595): 0,03% (1 inclusive)
  1: java.lang.Throwable.fillInStackTrace: 0,03% (1 inclusive)
    2: (Throwable.java:Unknown line): 0,03% (1 inclusive)
    2: (Throwable.java:782): 0% (0 inclusive)
  1: com.sun.tools.javac.code.Scope$3.<init>: 0,03% (1 inclusive)
    2: (Scope.java:418): 0,03% (1 inclusive)
  1: java.util.LinkedHashMap$Entry.<init>: 0,03% (1 inclusive)
    2: (LinkedHashMap.java:321): 0,03% (1 inclusive)
  1: grammar.Expression$Star.<init>: 0,03% (1 inclusive)
    2: (Expression.java:275): 0,03% (1 inclusive)
  1: java.lang.String.matches: 0,03% (1 inclusive)
    2: (String.java:2111): 0,03% (1 inclusive)
  1: com.sun.tools.javac.util.ForwardingDiagnosticFormatter.<init>: 0,03% (1 inclusive)
    2: (ForwardingDiagnosticFormatter.java:61): 0,03% (1 inclusive)
  1: java.util.RegularEnumSet.add: 0,03% (1 inclusive)
    2: (RegularEnumSet.java:163): 0,03% (1 inclusive)
    2: (RegularEnumSet.java:36): 0% (0 inclusive)
  1: java.lang.StringBuffer.replace: 0,03% (1 inclusive)
    2: (StringBuffer.java:387): 0,03% (1 inclusive)
  1: util.StringUtils.unescape: 0,03% (1 inclusive)
    2: (StringUtils.java:85): 0,03% (1 inclusive)
  1: com.sun.tools.javac.parser.JavacParser.variableDeclarators: 0,03% (1 inclusive)
    2: (JavacParser.java:2159): 0,03% (1 inclusive)
  1: java.security.PrivilegedActionException.<init>: 0,03% (1 inclusive)
    2: (PrivilegedActionException.java:66): 0,03% (1 inclusive)
  1: com.sun.tools.javac.code.Scope$CompoundScope$2$1.<init>: 0,03% (1 inclusive)
    2: (Scope.java:663): 0,03% (1 inclusive)
  1: com.sun.tools.javac.comp.Attr.checkMethod: 0,03% (1 inclusive)
    2: (Attr.java:2767): 0,03% (1 inclusive)
  1: com.sun.tools.javac.comp.Infer.instance: 0,03% (1 inclusive)
    2: (Infer.java:64): 0,03% (1 inclusive)
  1: compiler.MacroExpander.expandMacro: 0,03% (1 inclusive)
    2: (MacroExpander.java:45): 0,03% (1 inclusive)
  1: grammar.GrammarDSL.star: 0,03% (1 inclusive)
    2: (GrammarDSL.java:80): 0,03% (1 inclusive)
  1: com.sun.tools.javac.code.Symbol.isStatic: 0,03% (1 inclusive)
    2: (Symbol.java:195): 0,03% (1 inclusive)
  1: com.sun.tools.javac.comp.MemberEnter$3.importFrom: 0,03% (1 inclusive)
    2: (MemberEnter.java:272): 0,03% (1 inclusive)
  1: java.util.concurrent.atomic.AtomicBoolean.<init>: 0,03% (1 inclusive)
    2: (AtomicBoolean.java:77): 0,03% (1 inclusive)
  1: java.util.zip.ZipFile.access$1400: 0,03% (1 inclusive)
    2: (ZipFile.java:56): 0,03% (1 inclusive)
  1: com.sun.tools.javac.comp.Check$Validator.<init>: 0,03% (1 inclusive)
    2: (Check.java:1050): 0,03% (1 inclusive)
  1: java.lang.Enum.getDeclaringClass: 0,03% (1 inclusive)
    2: (Enum.java:199): 0,03% (1 inclusive)
  1: grammar.java._A_Lexical.keyword: 0,03% (1 inclusive)
    2: (_A_Lexical.java:61): 0,03% (1 inclusive)
    2: (_A_Lexical.java:68): 0% (0 inclusive)
  1: java.net.FactoryURLClassLoader.loadClass: 0,03% (1 inclusive)
    2: (URLClassLoader.java:789): 0,03% (1 inclusive)
  1: java.lang.ref.PhantomReference.<init>: 0,03% (1 inclusive)
    2: (PhantomReference.java:80): 0,03% (1 inclusive)
  1: com.sun.tools.javac.code.Types.implementation: 0,03% (1 inclusive)
    2: (Types.java:2096): 0,03% (1 inclusive)
  1: sun.launcher.LauncherHelper.checkAndLoadMain: 0,03% (1 inclusive)
    2: (LauncherHelper.java:480): 0,03% (1 inclusive)
  1: java.util.jar.JarFile.getInputStream: 0,03% (1 inclusive)
    2: (JarFile.java:403): 0,03% (1 inclusive)
  1: com.sun.tools.javac.comp.Check.validate: 0,03% (1 inclusive)
    2: (Check.java:1033): 0,03% (1 inclusive)
  1: com.sun.tools.javac.parser.JavacParser.blockStatements: 0,03% (1 inclusive)
    2: (JavacParser.java:1656): 0,03% (1 inclusive)
  1: com.sun.tools.javac.parser.JavacParser.variableDeclaratorRest: 0,03% (1 inclusive)
    2: (JavacParser.java:2205): 0,03% (1 inclusive)
  1: com.sun.tools.javac.main.JavacOption$Option.<init>: 0,03% (1 inclusive)
    2: (JavacOption.java:114): 0,03% (1 inclusive)
  1: driver.CompilationDriver.compileFile: 0,03% (1 inclusive)
    2: (CompilationDriver.java:84): 0,03% (1 inclusive)
  1: com.sun.tools.javac.code.Symbol$MethodSymbol.overrides: 0,03% (1 inclusive)
    2: (Symbol.java:1167): 0,03% (1 inclusive)
  1: sun.net.www.ParseUtil.<init>: 0,03% (1 inclusive)
    2: (ParseUtil.java:48): 0,03% (1 inclusive)
  1: sun.net.www.protocol.jar.Handler.parseContextSpec: 0,03% (1 inclusive)
    2: (Handler.java:206): 0,03% (1 inclusive)
  1: com.sun.tools.javac.code.Types$8.visitType: 0,03% (1 inclusive)
    2: (Types.java:871): 0,03% (1 inclusive)
    2: (Types.java:846): 0% (0 inclusive)
  1: com.sun.tools.javac.jvm.Items.makeImmediateItem: 0,03% (1 inclusive)
    2: (Items.java:156): 0,03% (1 inclusive)
  1: com.sun.tools.javac.code.Scope.dble: 0,03% (1 inclusive)
    2: (Scope.java:172): 0,03% (1 inclusive)
  1: com.sun.tools.javac.code.Symtab.initType: 0,03% (1 inclusive)
    2: (Symtab.java:208): 0,03% (1 inclusive)
  1: compiler.macros.LambdaMacro.expand: 0,03% (1 inclusive)
    2: (LambdaMacro.java:17): 0,03% (1 inclusive)
  1: java.util.concurrent.ConcurrentHashMap$Segment.put: 0,03% (1 inclusive)
    2: (ConcurrentHashMap.java:396): 0,03% (1 inclusive)
  1: java.util.jar.JarFile.getManifestFromReference: 0,03% (1 inclusive)
    2: (JarFile.java:181): 0,03% (1 inclusive)
  1: java.io.File.getCanonicalPath: 0,03% (1 inclusive)
    2: (File.java:589): 0,03% (1 inclusive)
  1: com.sun.tools.javac.main.RecognizedOptions.getXLintChoices: 0,03% (1 inclusive)
    2: (RecognizedOptions.java:635): 0,03% (1 inclusive)
  1: java.util.regex.Pattern.charPropertyNodeFor: 0,03% (1 inclusive)
    2: (Pattern.java:2728): 0,03% (1 inclusive)
  1: java.util.AbstractSet.<init>: 0,03% (1 inclusive)
    2: (AbstractSet.java:63): 0,03% (1 inclusive)
  1: java.util.concurrent.locks.AbstractQueuedSynchronizer.<init>: 0,03% (1 inclusive)
    2: (AbstractQueuedSynchronizer.java:299): 0,03% (1 inclusive)
  1: driver.CompilationDriver.dumpAndOrLoadClass: 0,03% (1 inclusive)
    2: (CompilationDriver.java:118): 0,03% (1 inclusive)
    2: (CompilationDriver.java:109): 0% (0 inclusive)
  1: com.sun.demo.jvmti.hprof.Tracker.ObjectInit: 0,03% (1 inclusive)
    2: (Tracker.java:57): 0,03% (1 inclusive)
  1: com.sun.tools.javac.parser.EndPosParser.parseCompilationUnit: 0,03% (1 inclusive)
    2: (EndPosParser.java:83): 0,03% (1 inclusive)
  1: java.util.EnumSet.<init>: 0,03% (1 inclusive)
    2: (EnumSet.java:95): 0,03% (1 inclusive)
  1: trees.MatchSpec.rule: 0,03% (1 inclusive)
    2: (MatchSpec.java:87): 0,03% (1 inclusive)
  1: java.util.concurrent.locks.ReentrantLock$Sync.<init>: 0,03% (1 inclusive)
    2: (ReentrantLock.java:119): 0,03% (1 inclusive)
  1: java.util.regex.Matcher.<init>: 0,03% (1 inclusive)
    2: (Matcher.java:224): 0,03% (1 inclusive)
  1: com.sun.tools.javac.parser.JavacParser.variableDeclaratorsRest: 0,03% (1 inclusive)
    2: (JavacParser.java:2176): 0,03% (1 inclusive)
  1: com.sun.tools.javac.code.Types$DefaultTypeVisitor.visit: 0,03% (1 inclusive)
    2: (Types.java:3712): 0,03% (1 inclusive)
  1: com.sun.tools.javac.code.Scope$ImportScope.makeEntry: 0,03% (1 inclusive)
    2: (Scope.java:515): 0,03% (1 inclusive)
  1: com.sun.tools.javac.code.Scope$ImportScope$ImportEntry.<init>: 0,03% (1 inclusive)
    2: (Scope.java:522): 0,03% (1 inclusive)
  1: java.io.File.getParent: 0,03% (1 inclusive)
    2: (File.java:453): 0,03% (1 inclusive)
  1: com.sun.tools.javac.jvm.Code.markStatBegin: 0,03% (1 inclusive)
    2: (Code.java:1576): 0,03% (1 inclusive)
  1: com.sun.tools.javac.code.Symtab.enterBinop: 0,03% (1 inclusive)
    2: (Symtab.java:240): 0,03% (1 inclusive)
  1: java.util.ComparableTimSort.binarySort: 0,03% (1 inclusive)
    2: (ComparableTimSort.java:252): 0,03% (1 inclusive)
  1: java.util.regex.Pattern.family: 0,03% (1 inclusive)
    2: (Pattern.java:2685): 0,03% (1 inclusive)
  1: grammar.java._D_Requires.<init>: 0,03% (1 inclusive)
    2: (_D_Requires.java:16): 0,03% (1 inclusive)
  1: java.lang.ClassLoader.getClassLoadingLock: 0,03% (1 inclusive)
    2: (ClassLoader.java:461): 0,03% (1 inclusive)
  1: com.sun.tools.javac.code.Type.accept: 0,03% (1 inclusive)
    2: (Type.java:114): 0,03% (1 inclusive)
  1: java.lang.ref.WeakReference.<init>: 0,03% (1 inclusive)
    2: (WeakReference.java:69): 0,03% (1 inclusive)
  1: com.sun.tools.javac.tree.TreeMaker$AnnotationBuilder.<init>: 0,03% (1 inclusive)
    2: (TreeMaker.java:722): 0,03% (1 inclusive)
  1: com.sun.tools.javac.comp.Check$CycleChecker.visitClassDef: 0,03% (1 inclusive)
    2: (Check.java:1890): 0,03% (1 inclusive)
  1: trees.MatchSpec$PositionSpec.<init>: 0,03% (1 inclusive)
    2: (MatchSpec.java:262): 0,03% (1 inclusive)
  1: com.sun.tools.javac.comp.Check.<init>: 0,03% (1 inclusive)
    2: (Check.java:96): 0,03% (1 inclusive)
  1: driver.DependencyResolver.<init>: 0,03% (1 inclusive)
    2: (DependencyResolver.java:65): 0,03% (1 inclusive)
  1: com.sun.tools.javac.comp.Infer$3.<init>: 0,03% (1 inclusive)
    2: (Infer.java:245): 0,03% (1 inclusive)
  1: java.util.zip.ZipFile.read: 0,03% (1 inclusive)
    2: (ZipFile.java:Unknown line): 0,03% (1 inclusive)
  1: java.lang.System.nanoTime: 0,03% (1 inclusive)
    2: (System.java:Unknown line): 0,03% (1 inclusive)
  1: com.sun.tools.javac.jvm.Items$ImmediateItem.<init>: 0,03% (1 inclusive)
    2: (Items.java:530): 0,03% (1 inclusive)
  1: java.lang.reflect.Array.newInstance: 0,03% (1 inclusive)
    2: (Array.java:70): 0,03% (1 inclusive)
  1: com.sun.tools.javac.file.JavacFileManager.caseMapCheck: 0,03% (1 inclusive)
    2: (JavacFileManager.java:400): 0,03% (1 inclusive)
  1: com.sun.tools.javac.file.FSInfo.exists: 0,03% (1 inclusive)
    2: (FSInfo.java:54): 0,03% (1 inclusive)
  1: com.sun.tools.javac.util.Position.makeLineMap: 0,03% (1 inclusive)
    2: (Position.java:75): 0,03% (1 inclusive)
  1: com.sun.tools.javac.parser.JavacParser.formalParameters: 0,03% (1 inclusive)
    2: (JavacParser.java:2782): 0,03% (1 inclusive)
  1: com.sun.tools.javac.tree.JCTree$JCLiteral.<init>: 0,03% (1 inclusive)
    2: (JCTree.java:1725): 0,03% (1 inclusive)
  1: grammar.Expression$Plus.accept: 0,03% (1 inclusive)
    2: (Expression.java:265): 0,03% (1 inclusive)
  1: parser.Matcher.visit: 0,03% (1 inclusive)
    2: (Matcher.java:254): 0,03% (1 inclusive)
  1: java.io.BufferedOutputStream.<init>: 0,03% (1 inclusive)
    2: (BufferedOutputStream.java:76): 0,03% (1 inclusive)
  1: java.util.jar.JarFile.getManifest: 0,03% (1 inclusive)
    2: (JarFile.java:165): 0,03% (1 inclusive)
  1: com.sun.tools.javac.comp.TransTypes.addBridgeIfNeeded: 0,03% (1 inclusive)
    2: (TransTypes.java:290): 0,03% (1 inclusive)
  1: grammar.java._A_Lexical.<init>: 0,03% (1 inclusive)
    2: (_A_Lexical.java:180): 0,03% (1 inclusive)
  1: java.util.regex.Pattern.sequence: 0,03% (1 inclusive)
    2: (Pattern.java:2043): 0,03% (1 inclusive)
  1: com.sun.tools.javac.file.Paths$Path.addFile: 0,03% (1 inclusive)
    2: (Paths.java:302): 0,03% (1 inclusive)
  1: com.sun.tools.javac.code.Lint$LintCategory.<clinit>: 0,03% (1 inclusive)
    2: (Lint.java:175): 0,03% (1 inclusive)
  1: com.sun.tools.javac.parser.ParserFactory.<init>: 0,03% (1 inclusive)
    2: (ParserFactory.java:73): 0,03% (1 inclusive)
  1: trees.MatchSpec.at: 0,03% (1 inclusive)
    2: (MatchSpec.java:285): 0,03% (1 inclusive)
  1: com.sun.tools.javac.jvm.Items$Item.<init>: 0,03% (1 inclusive)
    2: (Items.java:192): 0,03% (1 inclusive)
  1: source.SourceStream.get: 0,03% (1 inclusive)
    2: (SourceStream.java:68): 0,03% (1 inclusive)
  1: com.sun.tools.javac.comp.MemberEnter.importNamedStatic: 0,03% (1 inclusive)
    2: (MemberEnter.java:257): 0,03% (1 inclusive)
  1: grammar.java._C_Statements.<init>: 0,03% (1 inclusive)
    2: (_C_Statements.java:11): 0,03% (1 inclusive)
  1: java.util.HashMap.resize: 0,03% (1 inclusive)
    2: (HashMap.java:478): 0,03% (1 inclusive)
  1: java.io.Win32FileSystem.canonicalize: 0,03% (1 inclusive)
    2: (Win32FileSystem.java:414): 0,03% (1 inclusive)
  1: com.sun.tools.javac.comp.Enter.instance: 0,03% (1 inclusive)
    2: (Enter.java:114): 0,03% (1 inclusive)
  1: com.sun.tools.javac.code.Symbol$ClassSymbol.erasure: 0,03% (1 inclusive)
    2: (Symbol.java:774): 0,03% (1 inclusive)
  1: com.sun.tools.javac.jvm.ClassReader$6.read: 0,03% (1 inclusive)
    2: (ClassReader.java:976): 0,03% (1 inclusive)
  1: util.StringUtils.escape: 0,03% (1 inclusive)
    2: (StringUtils.java:22): 0,03% (1 inclusive)
  1: driver.DependencyResolver.resolve: 0,03% (1 inclusive)
    2: (DependencyResolver.java:61): 0,03% (1 inclusive)
  1: com.sun.tools.javac.jvm.Code.emitStackMapFrame: 0,03% (1 inclusive)
    2: (Code.java:1308): 0,03% (1 inclusive)
  1: grammar.Expression$Not.accept: 0,03% (1 inclusive)
    2: (Expression.java:252): 0,03% (1 inclusive)
  1: sun.launcher.LauncherHelper.getMainMethod: 0,03% (1 inclusive)
    2: (LauncherHelper.java:501): 0,03% (1 inclusive)
  1: java.util.jar.Attributes.read: 0,03% (1 inclusive)
    2: (Attributes.java:412): 0,03% (1 inclusive)
  1: com.sun.tools.javac.jvm.ClassReader$11.read: 0,03% (1 inclusive)
    2: (ClassReader.java:1065): 0,03% (1 inclusive)
  1: grammar.Grammar.<init>: 0,03% (1 inclusive)
    2: (Grammar.java:23): 0,03% (1 inclusive)
  1: java.util.regex.Pattern.matches: 0,03% (1 inclusive)
    2: (Pattern.java:1129): 0,03% (1 inclusive)
  1: java.util.regex.Pattern.matcher: 0,03% (1 inclusive)
    2: (Pattern.java:1088): 0,03% (1 inclusive)
  1: java.util.LinkedHashMap.<init>: 0,03% (1 inclusive)
    2: (LinkedHashMap.java:198): 0,03% (1 inclusive)
  1: com.sun.tools.javac.tree.TreeMaker.forToplevel: 0,03% (1 inclusive)
    2: (TreeMaker.java:101): 0,03% (1 inclusive)
  1: com.sun.tools.javac.parser.ParserFactory.instance: 0,03% (1 inclusive)
    2: (ParserFactory.java:51): 0,03% (1 inclusive)
  1: com.sun.tools.javac.code.Symtab.instance: 0,03% (1 inclusive)
    2: (Symtab.java:61): 0,03% (1 inclusive)
  1: com.sun.tools.javac.main.RecognizedOptions.getJavaCompilerOptions: 0,03% (1 inclusive)
    2: (RecognizedOptions.java:232): 0,03% (1 inclusive)
  1: grammar.GrammarDSL.str: 0,03% (1 inclusive)
    2: (GrammarDSL.java:110): 0,03% (1 inclusive)
  1: java.util.jar.JavaUtilJarAccessImpl.jarFileHasClassPathAttribute: 0,03% (1 inclusive)
    2: (JavaUtilJarAccessImpl.java:37): 0,03% (1 inclusive)
  1: java.lang.Class.newInstance0: 0,03% (1 inclusive)
    2: (Class.java:343): 0,03% (1 inclusive)
  1: java.util.HashMap.transfer: 0,03% (1 inclusive)
    2: (HashMap.java:489): 0,03% (1 inclusive)
  1: com.sun.tools.javac.code.Scope$CompoundScope$2.iterator: 0,03% (1 inclusive)
    2: (Scope.java:663): 0,03% (1 inclusive)
  1: compiler.util.Quoter$DynamicQuoteMethod.dynamicQuote: 0,03% (1 inclusive)
    2: (Quoter.java:81): 0,03% (1 inclusive)
  1: compiler.java.StringJavaFileObject.<init>: 0,03% (1 inclusive)
    2: (StringJavaFileObject.java:29): 0,03% (1 inclusive)
  1: java.util.Collections.indexedBinarySearch: 0,03% (1 inclusive)
    2: (Collections.java:268): 0,03% (1 inclusive)
  1: com.sun.tools.javac.file.RegularFileObject.openInputStream: 0,03% (1 inclusive)
    2: (RegularFileObject.java:96): 0,03% (1 inclusive)
  1: com.sun.tools.javac.util.Warner.<init>: 0,03% (1 inclusive)
    2: (Warner.java:46): 0,03% (1 inclusive)
  1: com.sun.tools.javac.comp.Check.instance: 0,03% (1 inclusive)
    2: (Check.java:86): 0,03% (1 inclusive)
  1: java.io.File.list: 0,03% (1 inclusive)
    2: (File.java:1048): 0,03% (1 inclusive)
  1: sun.misc.URLClassPath$JarLoader.getClassPath: 0,03% (1 inclusive)
    2: (URLClassPath.java:961): 0,03% (1 inclusive)
  1: com.sun.tools.javac.parser.JavacParser.formalParameter: 0,03% (1 inclusive)
    2: (JavacParser.java:2811): 0,03% (1 inclusive)
  1: com.sun.tools.javac.util.Position$LineMapImpl.getLineNumber: 0,03% (1 inclusive)
    2: (Position.java:203): 0,03% (1 inclusive)
  1: java.util.AbstractMap.<init>: 0,03% (1 inclusive)
    2: (AbstractMap.java:73): 0,03% (1 inclusive)
  1: compiler.Macro.expand: 0,03% (1 inclusive)
    2: (Macro.java:107): 0,03% (1 inclusive)
  1: com.sun.tools.javac.comp.MemberEnter.visitImport: 0,03% (1 inclusive)
    2: (MemberEnter.java:554): 0,03% (1 inclusive)
  1: com.sun.tools.javac.comp.Resolve.checkRawArgumentsAcceptable: 0,03% (1 inclusive)
    2: (Resolve.java:450): 0,03% (1 inclusive)
  1: com.sun.tools.javac.main.RecognizedOptions.<clinit>: 0,03% (1 inclusive)
    2: (RecognizedOptions.java:117): 0,03% (1 inclusive)
  1: com.sun.tools.javac.code.Scope.<init>: 0,03% (1 inclusive)
    2: (Scope.java:113): 0,03% (1 inclusive)
  1: java.io.WinNTFileSystem.list: 0,03% (1 inclusive)
    2: (WinNTFileSystem.java:Unknown line): 0,03% (1 inclusive)
  1: com.sun.tools.javac.util.Name.getBytes: 0,03% (1 inclusive)
    2: (Name.java:173): 0,03% (1 inclusive)
  1: com.sun.tools.javac.jvm.ClassReader.readAttrs: 0,03% (1 inclusive)
    2: (ClassReader.java:1275): 0,03% (1 inclusive)
  1: com.sun.tools.javac.comp.TransTypes$1.accepts: 0,03% (1 inclusive)
    2: (TransTypes.java:331): 0,03% (1 inclusive)
    2: (TransTypes.java:329): 0% (0 inclusive)
  1: java.util.Collections.binarySearch: 0,03% (1 inclusive)
    2: (Collections.java:259): 0,03% (1 inclusive)
  1: com.sun.tools.javac.tree.TreeScanner.scan: 0,03% (1 inclusive)
    2: (TreeScanner.java:49): 0,03% (1 inclusive)
    2: (TreeScanner.java:57): 0% (0 inclusive)
  1: java.io.WinNTFileSystem.createFileExclusively: 0,03% (1 inclusive)
    2: (WinNTFileSystem.java:Unknown line): 0,03% (1 inclusive)
  1: java.util.zip.ZipFile$ZipFileInputStream.read: 0,03% (1 inclusive)
    2: (ZipFile.java:677): 0,03% (1 inclusive)
  1: com.sun.tools.javac.code.Types.isSubSignature: 0,03% (1 inclusive)
    2: (Types.java:2006): 0,03% (1 inclusive)
    2: (Types.java:2002): 0% (0 inclusive)
  1: com.sun.tools.javac.file.Paths.getPathEntries: 0,03% (1 inclusive)
    2: (Paths.java:220): 0,03% (1 inclusive)
  1: com.sun.tools.javac.util.ForwardingDiagnosticFormatter$ForwardingConfiguration.<init>: 0,03% (1 inclusive)
    2: (ForwardingDiagnosticFormatter.java:109): 0,03% (1 inclusive)
  1: java.lang.String.split: 0,03% (1 inclusive)
    2: (String.java:2333): 0,03% (1 inclusive)
    2: (String.java:2403): 0% (0 inclusive)
  1: com.sun.tools.javac.code.Symtab.<init>: 0,03% (1 inclusive)
    2: (Symtab.java:452): 0,03% (1 inclusive)
  1: sun.misc.URLClassPath.getLoader: 0,03% (1 inclusive)
    2: (URLClassPath.java:331): 0,03% (1 inclusive)
  1: grammar.GrammarDSL.rule_seq: 0,03% (1 inclusive)
    2: (GrammarDSL.java:269): 0,03% (1 inclusive)
  1: java.lang.Thread.currentThread: 0,03% (1 inclusive)
    2: (Thread.java:Unknown line): 0,03% (1 inclusive)

Method Times by Callee (times inclusive): 3076 ticks
  1: java.lang.Object.<init>: 71,26% (2192 inclusive)
    2: java.util.AbstractCollection.<init>: 16,87% (519 inclusive)
      3: java.util.AbstractList.<init>: 14,95% (460 inclusive)
        4: java.util.ArrayList.<init>: 14,76% (454 inclusive)
        4: java.util.Vector.<init>: 0,16% (5 inclusive)
        4: java.util.Arrays$ArrayList.<init>: 0,03% (1 inclusive)
      3: com.sun.tools.javac.util.List.<init>: 1,82% (56 inclusive)
        4: com.sun.tools.javac.util.List.reverse: 1,2% (37 inclusive)
        4: com.sun.tools.javac.util.List.of: 0,26% (8 inclusive)
        4: com.sun.tools.javac.util.List.prepend: 0,2% (6 inclusive)
        4: com.sun.tools.javac.util.ListBuffer.append: 0,1% (3 inclusive)
        4: com.sun.tools.javac.util.ListBuffer.clear: 0,07% (2 inclusive)
      3: java.util.AbstractQueue.<init>: 0,07% (2 inclusive)
        4: com.sun.tools.javac.util.ListBuffer.<init>: 0,07% (2 inclusive)
      3: java.util.AbstractSet.<init>: 0,03% (1 inclusive)
        4: java.util.EnumSet.<init>: 0,03% (1 inclusive)
    2: parser.ParseData.<init>: 13,52% (416 inclusive)
      3: parser.Matcher.parse: 13,52% (416 inclusive)
        4: parser.LimitedMemo.get: 13,52% (416 inclusive)
    2: parser.ParseErrors.<init>: 7,18% (221 inclusive)
      3: parser.ParseData.<init>: 7,18% (221 inclusive)
        4: parser.Matcher.parse: 7,18% (221 inclusive)
    2: java.lang.String.<init>: 5,82% (179 inclusive)
      3: java.lang.String.substring: 4,19% (129 inclusive)
        4: source.SourceFileText.at: 1,66% (51 inclusive)
        4: source.SourceString.at: 1,46% (45 inclusive)
        4: com.sun.tools.javac.file.BaseFileObject.removeExtension: 0,29% (9 inclusive)
        4: java.lang.String.substring: 0,26% (8 inclusive)
        4: java.net.URLStreamHandler.parseURL: 0,1% (3 inclusive)
        4: java.io.Win32FileSystem.normalize: 0,07% (2 inclusive)
        4: java.lang.String.trim: 0,07% (2 inclusive)
        4: java.lang.ClassLoader.checkCerts: 0,07% (2 inclusive)
        4: sun.net.www.protocol.jar.Handler.parseURL: 0,07% (2 inclusive)
        4: com.sun.tools.javac.file.RelativePath$RelativeDirectory.dirname: 0,03% (1 inclusive)
        4: com.sun.tools.javac.file.Paths.getPathEntries: 0,03% (1 inclusive)
        4: com.sun.tools.javac.file.RegularFileObject.inferBinaryName: 0,03% (1 inclusive)
        4: com.sun.tools.javac.file.RelativePath$RelativeFile.dirname: 0,03% (1 inclusive)
        4: java.io.File.getParent: 0,03% (1 inclusive)
      3: java.lang.StringBuilder.toString: 0,52% (16 inclusive)
        4: com.sun.tools.javac.file.RelativePath$RelativeFile.<init>: 0,23% (7 inclusive)
        4: java.net.URLStreamHandler.parseURL: 0,07% (2 inclusive)
        4: com.sun.tools.javac.file.RegularFileObject.inferBinaryName: 0,07% (2 inclusive)
        4: com.sun.tools.javac.file.RelativePath$RelativeDirectory.<init>: 0,03% (1 inclusive)
        4: com.sun.tools.javac.util.JCDiagnostic$Factory.qualify: 0,03% (1 inclusive)
        4: sun.net.www.protocol.jar.Handler.parseURL: 0,03% (1 inclusive)
        4: util.StringUtils.unescape: 0,03% (1 inclusive)
        4: grammar.ExpressionTreeCleaner.visit: 0,03% (1 inclusive)
      3: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.readEntry: 0,49% (15 inclusive)
        4: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.buildIndex: 0,49% (15 inclusive)
      3: java.lang.String.replace: 0,33% (10 inclusive)
        4: com.sun.tools.javac.file.ZipFileIndexArchive$ZipFileIndexFileObject.inferBinaryName: 0,16% (5 inclusive)
        4: sun.misc.URLClassPath$FileLoader.getResource: 0,1% (3 inclusive)
        4: java.net.URLClassLoader$1.run: 0,07% (2 inclusive)
      3: java.io.Win32FileSystem.resolve: 0,13% (4 inclusive)
        4: java.io.File.<init>: 0,13% (4 inclusive)
      3: java.lang.String.concat: 0,1% (3 inclusive)
        4: java.net.URLClassLoader$1.run: 0,07% (2 inclusive)
        4: java.net.URLClassLoader.isSealed: 0,03% (1 inclusive)
      3: java.util.jar.Attributes.read: 0,03% (1 inclusive)
        4: java.util.jar.Manifest.read: 0,03% (1 inclusive)
      3: sun.net.www.ParseUtil.encodePath: 0,03% (1 inclusive)
        4: sun.misc.URLClassPath$JarLoader.checkResource: 0,03% (1 inclusive)
    2: java.lang.Number.<init>: 4,55% (140 inclusive)
      3: java.lang.Integer.<init>: 4,55% (140 inclusive)
        4: java.lang.Integer.valueOf: 4,55% (140 inclusive)
    2: java.util.AbstractList$Itr.<init>: 4,42% (136 inclusive)
      3: java.util.AbstractList$Itr.<init>: 4,42% (136 inclusive)
        4: java.util.AbstractList.iterator: 4,42% (136 inclusive)
    2: java.util.ArrayList$Itr.<init>: 3,64% (112 inclusive)
      3: java.util.ArrayList$Itr.<init>: 3,64% (112 inclusive)
        4: java.util.ArrayList.iterator: 3,64% (112 inclusive)
    2: java.util.Collections$UnmodifiableCollection.<init>: 2,67% (82 inclusive)
      3: java.util.Collections$UnmodifiableList.<init>: 2,67% (82 inclusive)
        4: java.util.Collections$UnmodifiableRandomAccessList.<init>: 2,67% (82 inclusive)
    2: parser.Match.<init>: 2,54% (78 inclusive)
      3: parser.ParseData.succeed: 2,54% (78 inclusive)
        4: parser.Matcher.succeed: 2,54% (78 inclusive)
    2: trees.MatchIterator$NodeState.<init>: 1,76% (54 inclusive)
      3: trees.MatchIterator.forward: 1,76% (54 inclusive)
        4: trees.MatchIterator.next: 1,76% (54 inclusive)
    2: util.AbstractBiIterator.<init>: 1,4% (43 inclusive)
      3: util.ArrayIterator.<init>: 1,4% (43 inclusive)
        4: util.ArrayIterator.<init>: 1,4% (43 inclusive)
    2: java.lang.AbstractStringBuilder.<init>: 1,07% (33 inclusive)
      3: java.lang.StringBuilder.<init>: 0,88% (27 inclusive)
        4: com.sun.tools.javac.file.RelativePath$RelativeFile.<init>: 0,46% (14 inclusive)
        4: java.net.URLStreamHandler.parseURL: 0,1% (3 inclusive)
        4: com.sun.tools.javac.util.JCDiagnostic$Factory.qualify: 0,1% (3 inclusive)
        4: com.sun.tools.javac.util.Options.isSet: 0,03% (1 inclusive)
        4: com.sun.tools.javac.code.Symtab.initType: 0,03% (1 inclusive)
        4: sun.net.www.protocol.jar.Handler.parseURL: 0,03% (1 inclusive)
        4: com.sun.tools.javac.file.RegularFileObject.inferBinaryName: 0,03% (1 inclusive)
        4: grammar.ExpressionTreeCleaner.visit: 0,03% (1 inclusive)
        4: source.SourceComposed.strFromMatches: 0,03% (1 inclusive)
        4: com.sun.tools.javac.file.RelativePath$RelativeDirectory.<init>: 0,03% (1 inclusive)
      3: java.lang.StringBuffer.<init>: 0,16% (5 inclusive)
        4: java.io.Win32FileSystem.normalize: 0,1% (3 inclusive)
        4: java.net.URLStreamHandler.toExternalForm: 0,03% (1 inclusive)
        4: java.io.StringWriter.<init>: 0,03% (1 inclusive)
    2: java.util.HashMap$Entry.<init>: 1,01% (31 inclusive)
      3: java.util.HashMap.addEntry: 0,98% (30 inclusive)
        4: java.util.HashMap.put: 0,98% (30 inclusive)
      3: java.util.LinkedHashMap$Entry.<init>: 0,03% (1 inclusive)
        4: java.util.LinkedHashMap.createEntry: 0,03% (1 inclusive)
    2: com.sun.tools.javac.file.RelativePath.<init>: 0,72% (22 inclusive)
      3: com.sun.tools.javac.file.RelativePath$RelativeFile.<init>: 0,49% (15 inclusive)
        4: com.sun.tools.javac.file.RelativePath$RelativeFile.<init>: 0,49% (15 inclusive)
      3: com.sun.tools.javac.file.RelativePath$RelativeDirectory.<init>: 0,23% (7 inclusive)
        4: com.sun.tools.javac.file.RelativePath$RelativeFile.dirname: 0,13% (4 inclusive)
        4: com.sun.tools.javac.file.RelativePath$RelativeDirectory.dirname: 0,1% (3 inclusive)
    2: com.sun.tools.javac.file.ZipFileIndex$Entry.<init>: 0,59% (18 inclusive)
      3: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.readEntry: 0,52% (16 inclusive)
        4: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.buildIndex: 0,52% (16 inclusive)
      3: com.sun.tools.javac.file.ZipFileIndex$DirectoryEntry.getEntry: 0,07% (2 inclusive)
        4: com.sun.tools.javac.file.ZipFileIndex$DirectoryEntry.access$100: 0,07% (2 inclusive)
    2: parser.LimitedMemo$Memoed.<init>: 0,46% (14 inclusive)
      3: parser.LimitedMemo$Memoed.<init>: 0,46% (14 inclusive)
        4: parser.LimitedMemo.get: 0,46% (14 inclusive)
    2: com.sun.tools.javac.util.Name.<init>: 0,33% (10 inclusive)
      3: com.sun.tools.javac.util.SharedNameTable$NameImpl.<init>: 0,33% (10 inclusive)
        4: com.sun.tools.javac.util.SharedNameTable.fromUtf: 0,26% (8 inclusive)
        4: com.sun.tools.javac.util.SharedNameTable.fromChars: 0,07% (2 inclusive)
    2: com.sun.tools.javac.code.Type.<init>: 0,29% (9 inclusive)
      3: com.sun.tools.javac.code.Type$ClassType.<init>: 0,13% (4 inclusive)
        4: com.sun.tools.javac.code.Symbol$ClassSymbol.<init>: 0,1% (3 inclusive)
        4: com.sun.tools.javac.code.Symbol$ClassSymbol.erasure: 0,03% (1 inclusive)
      3: com.sun.tools.javac.code.Type$MethodType.<init>: 0,1% (3 inclusive)
        4: com.sun.tools.javac.jvm.ClassReader.sigToType: 0,1% (3 inclusive)
      3: com.sun.tools.javac.code.Type$ArrayType.<init>: 0,07% (2 inclusive)
        4: com.sun.tools.javac.jvm.ClassReader.sigToType: 0,07% (2 inclusive)
    2: com.sun.tools.javac.code.Scope$Entry.<init>: 0,23% (7 inclusive)
      3: com.sun.tools.javac.code.Scope.makeEntry: 0,2% (6 inclusive)
        4: com.sun.tools.javac.code.Scope.enter: 0,2% (6 inclusive)
      3: com.sun.tools.javac.code.Scope$ImportScope$ImportEntry.<init>: 0,03% (1 inclusive)
        4: com.sun.tools.javac.code.Scope$ImportScope.makeEntry: 0,03% (1 inclusive)
    2: java.io.Writer.<init>: 0,2% (6 inclusive)
      3: java.io.StringWriter.<init>: 0,2% (6 inclusive)
        4: util.apache.CharSequenceTranslator.translate: 0,2% (6 inclusive)
    2: trees.MatchIterator.<init>: 0,16% (5 inclusive)
      3: trees.MatchFinder.trace: 0,1% (3 inclusive)
        4: trees.MatchFinder.find: 0,1% (3 inclusive)
      3: trees.BoundedMatchIterator.<init>: 0,07% (2 inclusive)
        4: trees.MatchFinder.find: 0,07% (2 inclusive)
    2: java.io.File.<init>: 0,16% (5 inclusive)
      3: com.sun.tools.javac.file.RegularFileObject.inferBinaryName: 0,1% (3 inclusive)
        4: com.sun.tools.javac.file.JavacFileManager.inferBinaryName: 0,1% (3 inclusive)
      3: com.sun.tools.javac.file.JavacFileManager.listDirectory: 0,07% (2 inclusive)
        4: com.sun.tools.javac.file.JavacFileManager.listContainer: 0,07% (2 inclusive)
    2: com.sun.tools.javac.code.Symbol.<init>: 0,16% (5 inclusive)
      3: com.sun.tools.javac.code.Symbol$MethodSymbol.<init>: 0,1% (3 inclusive)
        4: com.sun.tools.javac.jvm.ClassReader.readMethod: 0,07% (2 inclusive)
        4: com.sun.tools.javac.code.Symbol$OperatorSymbol.<init>: 0,03% (1 inclusive)
      3: com.sun.tools.javac.code.Symbol$TypeSymbol.<init>: 0,07% (2 inclusive)
        4: com.sun.tools.javac.code.Symbol$ClassSymbol.<init>: 0,07% (2 inclusive)
    2: java.lang.ref.Reference.<init>: 0,16% (5 inclusive)
      3: java.lang.ref.FinalReference.<init>: 0,07% (2 inclusive)
        4: java.lang.ref.Finalizer.<init>: 0,07% (2 inclusive)
      3: java.lang.ref.WeakReference.<init>: 0,03% (1 inclusive)
        4: java.util.WeakHashMap$Entry.<init>: 0,03% (1 inclusive)
      3: java.lang.ref.Reference.<init>: 0,03% (1 inclusive)
        4: java.lang.ref.SoftReference.<init>: 0,03% (1 inclusive)
      3: java.lang.ref.PhantomReference.<init>: 0,03% (1 inclusive)
        4: sun.misc.Cleaner.<init>: 0,03% (1 inclusive)
    2: com.sun.tools.javac.code.Types$DefaultTypeVisitor.<init>: 0,1% (3 inclusive)
      3: com.sun.tools.javac.code.Types$SimpleVisitor.<init>: 0,1% (3 inclusive)
        4: com.sun.tools.javac.code.Types$UnaryVisitor.<init>: 0,1% (3 inclusive)
    2: com.sun.tools.javac.file.BaseFileObject.<init>: 0,1% (3 inclusive)
      3: com.sun.tools.javac.file.ZipFileIndexArchive$ZipFileIndexFileObject.<init>: 0,1% (3 inclusive)
        4: com.sun.tools.javac.file.ZipFileIndexArchive.getFileObject: 0,1% (3 inclusive)
    2: java.net.URLClassLoader$1.<init>: 0,1% (3 inclusive)
      3: java.net.URLClassLoader.findClass: 0,1% (3 inclusive)
        4: java.lang.ClassLoader.loadClass: 0,1% (3 inclusive)
    2: java.net.URL.<init>: 0,1% (3 inclusive)
      3: java.net.URL.<init>: 0,1% (3 inclusive)
        4: sun.misc.URLClassPath$FileLoader.getResource: 0,1% (3 inclusive)
    2: com.sun.tools.javac.tree.JCTree.<init>: 0,1% (3 inclusive)
      3: com.sun.tools.javac.tree.JCTree$JCExpression.<init>: 0,1% (3 inclusive)
        4: com.sun.tools.javac.tree.JCTree$JCIdent.<init>: 0,07% (2 inclusive)
        4: com.sun.tools.javac.tree.JCTree$JCLiteral.<init>: 0,03% (1 inclusive)
    2: java.security.CodeSource.<init>: 0,07% (2 inclusive)
      3: java.net.URLClassLoader.defineClass: 0,07% (2 inclusive)
        4: java.net.URLClassLoader.access$100: 0,07% (2 inclusive)
    2: java.io.FileDescriptor.<init>: 0,07% (2 inclusive)
      3: java.io.FileInputStream.<init>: 0,07% (2 inclusive)
        4: sun.misc.URLClassPath$FileLoader$1.getInputStream: 0,07% (2 inclusive)
    2: com.sun.tools.javac.util.ListBuffer$1.<init>: 0,07% (2 inclusive)
      3: com.sun.tools.javac.util.ListBuffer.iterator: 0,07% (2 inclusive)
        4: com.sun.tools.javac.code.DeferredLintHandler.flush: 0,07% (2 inclusive)
    2: sun.misc.Resource.<init>: 0,07% (2 inclusive)
      3: sun.misc.URLClassPath$JarLoader$2.<init>: 0,07% (2 inclusive)
        4: sun.misc.URLClassPath$JarLoader.checkResource: 0,07% (2 inclusive)
    2: trees.MatchSpec.<init>: 0,07% (2 inclusive)
      3: trees.MatchSpec$RuleSpec.<init>: 0,03% (1 inclusive)
        4: trees.MatchSpec.rule: 0,03% (1 inclusive)
      3: trees.MatchSpec$PositionSpec.<init>: 0,03% (1 inclusive)
        4: trees.MatchSpec.at: 0,03% (1 inclusive)
    2: grammar.Expression.<init>: 0,07% (2 inclusive)
      3: grammar.Expression$Star.<init>: 0,03% (1 inclusive)
        4: grammar.GrammarDSL.star: 0,03% (1 inclusive)
      3: grammar.Expression$StringLiteral.<init>: 0,03% (1 inclusive)
        4: grammar.GrammarDSL.str: 0,03% (1 inclusive)
    2: com.sun.tools.javac.tree.JCTree$Visitor.<init>: 0,03% (1 inclusive)
      3: com.sun.tools.javac.comp.Check$Validator.<init>: 0,03% (1 inclusive)
        4: com.sun.tools.javac.comp.Check.validate: 0,03% (1 inclusive)
    2: java.util.AbstractMap.<init>: 0,03% (1 inclusive)
      3: java.util.HashMap.<init>: 0,03% (1 inclusive)
        4: com.sun.tools.javac.code.Types.<init>: 0,03% (1 inclusive)
    2: java.lang.Throwable.<init>: 0,03% (1 inclusive)
      3: java.lang.Exception.<init>: 0,03% (1 inclusive)
        4: java.security.PrivilegedActionException.<init>: 0,03% (1 inclusive)
    2: sun.net.www.ParseUtil.<init>: 0,03% (1 inclusive)
      3: sun.net.www.protocol.jar.Handler.parseURL: 0,03% (1 inclusive)
        4: java.net.URL.<init>: 0,03% (1 inclusive)
    2: com.sun.tools.javac.main.JavacOption$Option.<init>: 0,03% (1 inclusive)
      3: com.sun.tools.javac.main.RecognizedOptions$17.<init>: 0,03% (1 inclusive)
        4: com.sun.tools.javac.main.RecognizedOptions.getAll: 0,03% (1 inclusive)
    2: com.sun.tools.javac.comp.Infer$3.<init>: 0,03% (1 inclusive)
      3: com.sun.tools.javac.comp.Infer.<init>: 0,03% (1 inclusive)
        4: com.sun.tools.javac.comp.Infer.instance: 0,03% (1 inclusive)
    2: java.io.FileInputStream.<init>: 0,03% (1 inclusive)
      3: sun.misc.URLClassPath$FileLoader$1.getInputStream: 0,03% (1 inclusive)
        4: sun.misc.Resource.cachedInputStream: 0,03% (1 inclusive)
    2: com.sun.tools.javac.code.Scope$3.<init>: 0,03% (1 inclusive)
      3: com.sun.tools.javac.code.Scope.getElementsByName: 0,03% (1 inclusive)
        4: com.sun.tools.javac.code.Scope$CompoundScope$2$1.nextIterator: 0,03% (1 inclusive)
    2: com.sun.tools.javac.tree.TreeMaker$AnnotationBuilder.<init>: 0,03% (1 inclusive)
      3: com.sun.tools.javac.tree.TreeMaker.<init>: 0,03% (1 inclusive)
        4: com.sun.tools.javac.tree.TreeMaker.forToplevel: 0,03% (1 inclusive)
    2: java.util.concurrent.atomic.AtomicBoolean.<init>: 0,03% (1 inclusive)
      3: com.sun.tools.javac.api.JavacTaskImpl.<init>: 0,03% (1 inclusive)
        4: com.sun.tools.javac.api.JavacTaskImpl.<init>: 0,03% (1 inclusive)
    2: com.sun.tools.javac.code.Scope$CompoundScope$CompoundScopeIterator.<init>: 0,03% (1 inclusive)
      3: com.sun.tools.javac.code.Scope$CompoundScope$2$1.<init>: 0,03% (1 inclusive)
        4: com.sun.tools.javac.code.Scope$CompoundScope$2.iterator: 0,03% (1 inclusive)
    2: com.sun.tools.javac.jvm.Items$Item.<init>: 0,03% (1 inclusive)
      3: com.sun.tools.javac.jvm.Items$ImmediateItem.<init>: 0,03% (1 inclusive)
        4: com.sun.tools.javac.jvm.Items.makeImmediateItem: 0,03% (1 inclusive)
    2: java.lang.ClassLoader.getClassLoadingLock: 0,03% (1 inclusive)
      3: java.lang.ClassLoader.loadClass: 0,03% (1 inclusive)
        4: sun.misc.Launcher$AppClassLoader.loadClass: 0,03% (1 inclusive)
    2: com.sun.tools.javac.util.ForwardingDiagnosticFormatter$ForwardingConfiguration.<init>: 0,03% (1 inclusive)
      3: com.sun.tools.javac.util.ForwardingDiagnosticFormatter.<init>: 0,03% (1 inclusive)
        4: com.sun.tools.javac.util.RichDiagnosticFormatter.<init>: 0,03% (1 inclusive)
    2: java.util.concurrent.locks.AbstractOwnableSynchronizer.<init>: 0,03% (1 inclusive)
      3: java.util.concurrent.locks.AbstractQueuedSynchronizer.<init>: 0,03% (1 inclusive)
        4: java.util.concurrent.locks.ReentrantLock$Sync.<init>: 0,03% (1 inclusive)
  1: parser.ParseData.<init>: 34,33% (1056 inclusive)
    2: parser.Matcher.parse: 34,33% (1056 inclusive)
      3: parser.LimitedMemo.get: 13,56% (417 inclusive)
  1: parser.Matcher.parse: 34,33% (1056 inclusive)
    2: parser.LimitedMemo.get: 13,56% (417 inclusive)
  1: java.util.ArrayList.<init>: 28,38% (873 inclusive)
    2: parser.ParseData.<init>: 6,83% (210 inclusive)
      3: parser.Matcher.parse: 6,83% (210 inclusive)
    2: parser.ParseErrors.<init>: 6,76% (208 inclusive)
      3: parser.ParseData.<init>: 6,76% (208 inclusive)
        4: parser.Matcher.parse: 6,76% (208 inclusive)
    2: java.lang.String.split: 0,03% (1 inclusive)
      3: java.lang.String.split: 0,03% (1 inclusive)
  1: java.util.AbstractCollection.<init>: 16,87% (519 inclusive)
    2: java.util.AbstractList.<init>: 14,95% (460 inclusive)
      3: java.util.ArrayList.<init>: 14,76% (454 inclusive)
      3: java.util.Vector.<init>: 0,16% (5 inclusive)
      3: java.util.Arrays$ArrayList.<init>: 0,03% (1 inclusive)
    2: com.sun.tools.javac.util.List.<init>: 1,82% (56 inclusive)
      3: com.sun.tools.javac.util.List.reverse: 1,2% (37 inclusive)
      3: com.sun.tools.javac.util.List.of: 0,26% (8 inclusive)
      3: com.sun.tools.javac.util.List.prepend: 0,2% (6 inclusive)
      3: com.sun.tools.javac.util.ListBuffer.append: 0,1% (3 inclusive)
      3: com.sun.tools.javac.util.ListBuffer.clear: 0,07% (2 inclusive)
    2: java.util.AbstractQueue.<init>: 0,07% (2 inclusive)
      3: com.sun.tools.javac.util.ListBuffer.<init>: 0,07% (2 inclusive)
    2: java.util.AbstractSet.<init>: 0,03% (1 inclusive)
      3: java.util.EnumSet.<init>: 0,03% (1 inclusive)
  1: java.util.AbstractList.<init>: 14,95% (460 inclusive)
    2: java.util.ArrayList.<init>: 14,76% (454 inclusive)
    2: java.util.Vector.<init>: 0,16% (5 inclusive)
    2: java.util.Arrays$ArrayList.<init>: 0,03% (1 inclusive)
  1: parser.LimitedMemo.get: 14,53% (447 inclusive)
    2: parser.Matcher.visitChild: 0,52% (16 inclusive)
  1: parser.ParseErrors.<init>: 13,98% (430 inclusive)
    2: parser.ParseData.<init>: 13,98% (430 inclusive)
      3: parser.Matcher.parse: 13,98% (430 inclusive)
        4: parser.LimitedMemo.get: 0,03% (1 inclusive)
  1: java.lang.String.<init>: 7,48% (230 inclusive)
    2: java.lang.String.substring: 4,19% (129 inclusive)
      3: source.SourceFileText.at: 1,66% (51 inclusive)
      3: source.SourceString.at: 1,46% (45 inclusive)
      3: com.sun.tools.javac.file.BaseFileObject.removeExtension: 0,29% (9 inclusive)
      3: java.lang.String.substring: 0,26% (8 inclusive)
      3: java.net.URLStreamHandler.parseURL: 0,1% (3 inclusive)
      3: java.io.Win32FileSystem.normalize: 0,07% (2 inclusive)
      3: java.lang.String.trim: 0,07% (2 inclusive)
      3: java.lang.ClassLoader.checkCerts: 0,07% (2 inclusive)
      3: sun.net.www.protocol.jar.Handler.parseURL: 0,07% (2 inclusive)
      3: com.sun.tools.javac.file.RelativePath$RelativeDirectory.dirname: 0,03% (1 inclusive)
      3: com.sun.tools.javac.file.Paths.getPathEntries: 0,03% (1 inclusive)
      3: com.sun.tools.javac.file.RegularFileObject.inferBinaryName: 0,03% (1 inclusive)
      3: com.sun.tools.javac.file.RelativePath$RelativeFile.dirname: 0,03% (1 inclusive)
      3: java.io.File.getParent: 0,03% (1 inclusive)
    2: java.lang.StringBuilder.toString: 1,37% (42 inclusive)
      3: com.sun.tools.javac.file.RelativePath$RelativeFile.<init>: 0,49% (15 inclusive)
      3: com.sun.tools.javac.file.RegularFileObject.inferBinaryName: 0,16% (5 inclusive)
      3: java.net.URLStreamHandler.parseURL: 0,13% (4 inclusive)
      3: grammar.ExpressionTreeCleaner.visit: 0,13% (4 inclusive)
      3: source.SourceComposed.strFromMatches: 0,1% (3 inclusive)
      3: sun.net.www.protocol.jar.Handler.parseURL: 0,1% (3 inclusive)
      3: sun.nio.fs.WindowsPathParser.normalize: 0,07% (2 inclusive)
      3: com.sun.tools.javac.util.JCDiagnostic$Factory.qualify: 0,07% (2 inclusive)
      3: com.sun.tools.javac.file.RelativePath$RelativeDirectory.<init>: 0,03% (1 inclusive)
      3: util.StringUtils.unescape: 0,03% (1 inclusive)
      3: sun.net.www.protocol.jar.Handler.parseContextSpec: 0,03% (1 inclusive)
      3: util.StringUtils.escape: 0,03% (1 inclusive)
    2: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.readEntry: 0,91% (28 inclusive)
      3: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.buildIndex: 0,49% (15 inclusive)
    2: java.lang.String.replace: 0,33% (10 inclusive)
      3: com.sun.tools.javac.file.ZipFileIndexArchive$ZipFileIndexFileObject.inferBinaryName: 0,16% (5 inclusive)
      3: sun.misc.URLClassPath$FileLoader.getResource: 0,1% (3 inclusive)
      3: java.net.URLClassLoader$1.run: 0,07% (2 inclusive)
    2: java.lang.StringBuffer.toString: 0,29% (9 inclusive)
      3: java.io.StringWriter.toString: 0,13% (4 inclusive)
      3: java.io.Win32FileSystem.normalize: 0,13% (4 inclusive)
      3: java.net.URLStreamHandler.toExternalForm: 0,03% (1 inclusive)
    2: java.io.Win32FileSystem.resolve: 0,2% (6 inclusive)
      3: java.io.File.<init>: 0,2% (6 inclusive)
    2: java.lang.String.concat: 0,1% (3 inclusive)
      3: java.net.URLClassLoader$1.run: 0,07% (2 inclusive)
      3: java.net.URLClassLoader.isSealed: 0,03% (1 inclusive)
    2: sun.net.www.ParseUtil.encodePath: 0,07% (2 inclusive)
      3: sun.misc.URLClassPath$JarLoader.checkResource: 0,07% (2 inclusive)
    2: java.util.jar.Attributes.read: 0,03% (1 inclusive)
      3: java.util.jar.Manifest.read: 0,03% (1 inclusive)
  1: util.apache.CharSequenceTranslator.translate: 6,31% (194 inclusive)
    2: source.SourceString.<init>: 5,95% (183 inclusive)
    2: source.SourceFileText.<init>: 0,16% (5 inclusive)
  1: java.lang.Character.toChars: 6,11% (188 inclusive)
    2: util.apache.CharSequenceTranslator.translate: 6,11% (188 inclusive)
      3: util.apache.CharSequenceTranslator.translate: 6,11% (188 inclusive)
        4: source.SourceString.<init>: 5,95% (183 inclusive)
        4: source.SourceFileText.<init>: 0,16% (5 inclusive)
  1: source.SourceString.<init>: 5,95% (183 inclusive)
  1: java.lang.Integer.valueOf: 4,55% (140 inclusive)
  1: java.lang.Integer.<init>: 4,55% (140 inclusive)
    2: java.lang.Integer.valueOf: 4,55% (140 inclusive)
  1: java.lang.Number.<init>: 4,55% (140 inclusive)
    2: java.lang.Integer.<init>: 4,55% (140 inclusive)
      3: java.lang.Integer.valueOf: 4,55% (140 inclusive)
  1: java.util.AbstractList.iterator: 4,42% (136 inclusive)
  1: java.util.AbstractList$Itr.<init>: 4,42% (136 inclusive)
    2: java.util.AbstractList.iterator: 4,42% (136 inclusive)
  1: java.lang.String.substring: 4,23% (130 inclusive)
    2: source.SourceFileText.at: 1,69% (52 inclusive)
      3: source.SourceStream.get: 0,03% (1 inclusive)
        4: parser.Matcher.visit: 0,03% (1 inclusive)
    2: source.SourceString.at: 1,46% (45 inclusive)
    2: com.sun.tools.javac.file.BaseFileObject.removeExtension: 0,29% (9 inclusive)
    2: java.net.URLStreamHandler.parseURL: 0,1% (3 inclusive)
    2: java.io.Win32FileSystem.normalize: 0,07% (2 inclusive)
    2: java.lang.String.trim: 0,07% (2 inclusive)
    2: java.lang.ClassLoader.checkCerts: 0,07% (2 inclusive)
    2: sun.net.www.protocol.jar.Handler.parseURL: 0,07% (2 inclusive)
    2: com.sun.tools.javac.file.RelativePath$RelativeDirectory.dirname: 0,03% (1 inclusive)
    2: com.sun.tools.javac.file.Paths.getPathEntries: 0,03% (1 inclusive)
    2: com.sun.tools.javac.file.RegularFileObject.inferBinaryName: 0,03% (1 inclusive)
    2: com.sun.tools.javac.file.RelativePath$RelativeFile.dirname: 0,03% (1 inclusive)
    2: java.io.File.getParent: 0,03% (1 inclusive)
  1: java.util.ArrayList.iterator: 3,64% (112 inclusive)
  1: java.util.ArrayList$Itr.<init>: 3,64% (112 inclusive)
    2: java.util.ArrayList.iterator: 3,64% (112 inclusive)
  1: java.util.Collections$UnmodifiableRandomAccessList.<init>: 2,67% (82 inclusive)
  1: java.util.Collections$UnmodifiableList.<init>: 2,67% (82 inclusive)
    2: java.util.Collections$UnmodifiableRandomAccessList.<init>: 2,67% (82 inclusive)
  1: java.util.Collections$UnmodifiableCollection.<init>: 2,67% (82 inclusive)
    2: java.util.Collections$UnmodifiableList.<init>: 2,67% (82 inclusive)
      3: java.util.Collections$UnmodifiableRandomAccessList.<init>: 2,67% (82 inclusive)
  1: parser.ParseData.succeed: 2,54% (78 inclusive)
    2: parser.Matcher.succeed: 2,54% (78 inclusive)
  1: parser.Match.<init>: 2,54% (78 inclusive)
    2: parser.ParseData.succeed: 2,54% (78 inclusive)
      3: parser.Matcher.succeed: 2,54% (78 inclusive)
  1: parser.Matcher.succeed: 2,54% (78 inclusive)
  1: com.sun.tools.javac.file.RelativePath$RelativeFile.<init>: 1,92% (59 inclusive)
    2: com.sun.tools.javac.file.ZipFileIndex$Entry.getName: 0,39% (12 inclusive)
    2: com.sun.tools.javac.file.ZipFileIndexArchive.getFileObject: 0,1% (3 inclusive)
  1: java.lang.AbstractStringBuilder.<init>: 1,82% (56 inclusive)
    2: java.lang.StringBuilder.<init>: 1,63% (50 inclusive)
      3: com.sun.tools.javac.file.RelativePath$RelativeFile.<init>: 0,94% (29 inclusive)
        4: com.sun.tools.javac.file.ZipFileIndex$Entry.getName: 0,39% (12 inclusive)
        4: com.sun.tools.javac.file.ZipFileIndexArchive.getFileObject: 0,1% (3 inclusive)
      3: java.net.URLStreamHandler.parseURL: 0,16% (5 inclusive)
        4: sun.net.www.protocol.file.Handler.parseURL: 0,07% (2 inclusive)
      3: com.sun.tools.javac.util.JCDiagnostic$Factory.qualify: 0,1% (3 inclusive)
      3: source.SourceComposed.strFromMatches: 0,1% (3 inclusive)
        4: source.SourceComposed.<init>: 0,07% (2 inclusive)
      3: grammar.ExpressionTreeCleaner.visit: 0,1% (3 inclusive)
        4: grammar.Expression$Not.accept: 0,03% (1 inclusive)
        4: grammar.Expression$Plus.accept: 0,03% (1 inclusive)
      3: com.sun.tools.javac.file.RegularFileObject.inferBinaryName: 0,07% (2 inclusive)
        4: com.sun.tools.javac.file.JavacFileManager.inferBinaryName: 0,03% (1 inclusive)
      3: com.sun.tools.javac.util.Options.isSet: 0,03% (1 inclusive)
      3: com.sun.tools.javac.code.Symtab.initType: 0,03% (1 inclusive)
      3: sun.net.www.protocol.jar.Handler.parseURL: 0,03% (1 inclusive)
      3: compiler.java.StringJavaFileObject.<init>: 0,03% (1 inclusive)
        4: driver.CompilationDriver.compileFile: 0,03% (1 inclusive)
      3: com.sun.tools.javac.file.RelativePath$RelativeDirectory.<init>: 0,03% (1 inclusive)
    2: java.lang.StringBuffer.<init>: 0,16% (5 inclusive)
      3: java.io.Win32FileSystem.normalize: 0,1% (3 inclusive)
      3: java.net.URLStreamHandler.toExternalForm: 0,03% (1 inclusive)
      3: java.io.StringWriter.<init>: 0,03% (1 inclusive)
  1: com.sun.tools.javac.util.List.<init>: 1,82% (56 inclusive)
    2: com.sun.tools.javac.util.List.reverse: 1,2% (37 inclusive)
    2: com.sun.tools.javac.util.List.of: 0,26% (8 inclusive)
    2: com.sun.tools.javac.util.List.prepend: 0,2% (6 inclusive)
    2: com.sun.tools.javac.util.ListBuffer.append: 0,1% (3 inclusive)
    2: com.sun.tools.javac.util.ListBuffer.clear: 0,07% (2 inclusive)
  1: trees.MatchIterator$NodeState.<init>: 1,76% (54 inclusive)
    2: trees.MatchIterator.forward: 1,76% (54 inclusive)
      3: trees.MatchIterator.next: 1,76% (54 inclusive)
  1: trees.MatchIterator.next: 1,76% (54 inclusive)
  1: trees.MatchIterator.forward: 1,76% (54 inclusive)
    2: trees.MatchIterator.next: 1,76% (54 inclusive)
  1: java.util.Arrays.copyOf: 1,69% (52 inclusive)
    2: java.lang.AbstractStringBuilder.expandCapacity: 0,62% (19 inclusive)
      3: java.lang.AbstractStringBuilder.ensureCapacityInternal: 0,62% (19 inclusive)
        4: java.lang.AbstractStringBuilder.append: 0,62% (19 inclusive)
    2: java.util.ArrayList.grow: 0,49% (15 inclusive)
      3: java.util.ArrayList.ensureCapacityInternal: 0,49% (15 inclusive)
    2: sun.misc.Resource.getBytes: 0,23% (7 inclusive)
      3: java.net.URLClassLoader.defineClass: 0,23% (7 inclusive)
        4: java.net.URLClassLoader.access$100: 0,23% (7 inclusive)
    2: java.util.ArrayList.toArray: 0,23% (7 inclusive)
      3: java.util.Collections$UnmodifiableCollection.toArray: 0,16% (5 inclusive)
      3: compiler.util.MatchCreator.new_match: 0,03% (1 inclusive)
    2: java.lang.String.<init>: 0,07% (2 inclusive)
      3: java.io.Win32FileSystem.resolve: 0,07% (2 inclusive)
        4: java.io.File.<init>: 0,07% (2 inclusive)
    2: java.util.zip.ZipCoder.getBytes: 0,07% (2 inclusive)
      3: java.util.zip.ZipFile.getEntry: 0,07% (2 inclusive)
        4: java.util.jar.JarFile.getEntry: 0,07% (2 inclusive)
  1: source.SourceFileText.at: 1,69% (52 inclusive)
    2: source.SourceStream.get: 0,03% (1 inclusive)
      3: parser.Matcher.visit: 0,03% (1 inclusive)
  1: java.lang.StringBuilder.<init>: 1,63% (50 inclusive)
    2: com.sun.tools.javac.file.RelativePath$RelativeFile.<init>: 0,94% (29 inclusive)
      3: com.sun.tools.javac.file.ZipFileIndex$Entry.getName: 0,39% (12 inclusive)
      3: com.sun.tools.javac.file.ZipFileIndexArchive.getFileObject: 0,1% (3 inclusive)
    2: java.net.URLStreamHandler.parseURL: 0,16% (5 inclusive)
      3: sun.net.www.protocol.file.Handler.parseURL: 0,07% (2 inclusive)
    2: com.sun.tools.javac.util.JCDiagnostic$Factory.qualify: 0,1% (3 inclusive)
    2: source.SourceComposed.strFromMatches: 0,1% (3 inclusive)
      3: source.SourceComposed.<init>: 0,07% (2 inclusive)
    2: grammar.ExpressionTreeCleaner.visit: 0,1% (3 inclusive)
      3: grammar.Expression$Not.accept: 0,03% (1 inclusive)
      3: grammar.Expression$Plus.accept: 0,03% (1 inclusive)
    2: com.sun.tools.javac.file.RegularFileObject.inferBinaryName: 0,07% (2 inclusive)
      3: com.sun.tools.javac.file.JavacFileManager.inferBinaryName: 0,03% (1 inclusive)
    2: com.sun.tools.javac.util.Options.isSet: 0,03% (1 inclusive)
    2: com.sun.tools.javac.code.Symtab.initType: 0,03% (1 inclusive)
    2: sun.net.www.protocol.jar.Handler.parseURL: 0,03% (1 inclusive)
    2: compiler.java.StringJavaFileObject.<init>: 0,03% (1 inclusive)
      3: driver.CompilationDriver.compileFile: 0,03% (1 inclusive)
    2: com.sun.tools.javac.file.RelativePath$RelativeDirectory.<init>: 0,03% (1 inclusive)
  1: source.SourceString.at: 1,46% (45 inclusive)
  1: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.readEntry: 1,43% (44 inclusive)
    2: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.buildIndex: 1,01% (31 inclusive)
  1: util.ArrayIterator.<init>: 1,4% (43 inclusive)
  1: util.AbstractBiIterator.<init>: 1,4% (43 inclusive)
    2: util.ArrayIterator.<init>: 1,4% (43 inclusive)
      3: util.ArrayIterator.<init>: 1,4% (43 inclusive)
  1: java.lang.StringBuilder.toString: 1,37% (42 inclusive)
    2: com.sun.tools.javac.file.RelativePath$RelativeFile.<init>: 0,49% (15 inclusive)
    2: com.sun.tools.javac.file.RegularFileObject.inferBinaryName: 0,16% (5 inclusive)
    2: java.net.URLStreamHandler.parseURL: 0,13% (4 inclusive)
    2: grammar.ExpressionTreeCleaner.visit: 0,13% (4 inclusive)
    2: source.SourceComposed.strFromMatches: 0,1% (3 inclusive)
    2: sun.net.www.protocol.jar.Handler.parseURL: 0,1% (3 inclusive)
    2: sun.nio.fs.WindowsPathParser.normalize: 0,07% (2 inclusive)
    2: com.sun.tools.javac.util.JCDiagnostic$Factory.qualify: 0,07% (2 inclusive)
    2: com.sun.tools.javac.file.RelativePath$RelativeDirectory.<init>: 0,03% (1 inclusive)
    2: util.StringUtils.unescape: 0,03% (1 inclusive)
    2: sun.net.www.protocol.jar.Handler.parseContextSpec: 0,03% (1 inclusive)
    2: util.StringUtils.escape: 0,03% (1 inclusive)
  1: com.sun.tools.javac.util.List.reverse: 1,2% (37 inclusive)
  1: java.util.Arrays.copyOfRange: 1,17% (36 inclusive)
    2: java.lang.String.<init>: 1,17% (36 inclusive)
      3: java.lang.StringBuilder.toString: 0,85% (26 inclusive)
        4: com.sun.tools.javac.file.RelativePath$RelativeFile.<init>: 0,26% (8 inclusive)
        4: source.SourceComposed.strFromMatches: 0,1% (3 inclusive)
        4: com.sun.tools.javac.file.RegularFileObject.inferBinaryName: 0,1% (3 inclusive)
        4: grammar.ExpressionTreeCleaner.visit: 0,1% (3 inclusive)
        4: sun.nio.fs.WindowsPathParser.normalize: 0,07% (2 inclusive)
        4: java.net.URLStreamHandler.parseURL: 0,07% (2 inclusive)
        4: sun.net.www.protocol.jar.Handler.parseURL: 0,07% (2 inclusive)
        4: com.sun.tools.javac.util.JCDiagnostic$Factory.qualify: 0,03% (1 inclusive)
        4: sun.net.www.protocol.jar.Handler.parseContextSpec: 0,03% (1 inclusive)
        4: util.StringUtils.escape: 0,03% (1 inclusive)
      3: java.lang.StringBuffer.toString: 0,29% (9 inclusive)
        4: java.io.StringWriter.toString: 0,13% (4 inclusive)
        4: java.io.Win32FileSystem.normalize: 0,13% (4 inclusive)
        4: java.net.URLStreamHandler.toExternalForm: 0,03% (1 inclusive)
      3: sun.net.www.ParseUtil.encodePath: 0,03% (1 inclusive)
        4: sun.misc.URLClassPath$JarLoader.checkResource: 0,03% (1 inclusive)
  1: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.buildIndex: 1,01% (31 inclusive)
  1: java.util.HashMap$Entry.<init>: 1,01% (31 inclusive)
    2: java.util.HashMap.addEntry: 0,98% (30 inclusive)
      3: java.util.HashMap.put: 0,98% (30 inclusive)
    2: java.util.LinkedHashMap$Entry.<init>: 0,03% (1 inclusive)
      3: java.util.LinkedHashMap.createEntry: 0,03% (1 inclusive)
  1: java.util.HashMap.put: 1,01% (31 inclusive)
  1: java.util.HashMap.addEntry: 1,01% (31 inclusive)
    2: java.util.HashMap.put: 1,01% (31 inclusive)
  1: parser.LimitedMemo$Memoed.<init>: 0,98% (30 inclusive)
    2: parser.LimitedMemo.get: 0,98% (30 inclusive)
      3: parser.Matcher.visitChild: 0,52% (16 inclusive)
  1: java.net.URLClassLoader.defineClass: 0,72% (22 inclusive)
    2: java.net.URLClassLoader.access$100: 0,33% (10 inclusive)
      3: java.net.URLClassLoader$1.run: 0,03% (1 inclusive)
  1: com.sun.tools.javac.file.RelativePath.<init>: 0,72% (22 inclusive)
    2: com.sun.tools.javac.file.RelativePath$RelativeFile.<init>: 0,49% (15 inclusive)
      3: com.sun.tools.javac.file.RelativePath$RelativeFile.<init>: 0,49% (15 inclusive)
    2: com.sun.tools.javac.file.RelativePath$RelativeDirectory.<init>: 0,23% (7 inclusive)
      3: com.sun.tools.javac.file.RelativePath$RelativeFile.dirname: 0,13% (4 inclusive)
      3: com.sun.tools.javac.file.RelativePath$RelativeDirectory.dirname: 0,1% (3 inclusive)
  1: java.lang.AbstractStringBuilder.append: 0,62% (19 inclusive)
  1: java.lang.AbstractStringBuilder.expandCapacity: 0,62% (19 inclusive)
    2: java.lang.AbstractStringBuilder.ensureCapacityInternal: 0,62% (19 inclusive)
      3: java.lang.AbstractStringBuilder.append: 0,62% (19 inclusive)
  1: java.lang.AbstractStringBuilder.ensureCapacityInternal: 0,62% (19 inclusive)
    2: java.lang.AbstractStringBuilder.append: 0,62% (19 inclusive)
  1: java.lang.String.replace: 0,62% (19 inclusive)
    2: com.sun.tools.javac.file.ZipFileIndexArchive$ZipFileIndexFileObject.inferBinaryName: 0,36% (11 inclusive)
      3: com.sun.tools.javac.file.JavacFileManager.inferBinaryName: 0,2% (6 inclusive)
        4: compiler.java.CollectingJavaFileManager.inferBinaryName: 0,2% (6 inclusive)
    2: java.net.URLClassLoader$1.run: 0,13% (4 inclusive)
      3: java.net.URLClassLoader$1.run: 0,07% (2 inclusive)
        4: java.security.AccessController.doPrivileged: 0,07% (2 inclusive)
    2: sun.misc.URLClassPath$FileLoader.getResource: 0,1% (3 inclusive)
    2: com.sun.tools.javac.file.RegularFileObject.inferBinaryName: 0,03% (1 inclusive)
      3: com.sun.tools.javac.file.JavacFileManager.inferBinaryName: 0,03% (1 inclusive)
        4: compiler.java.CollectingJavaFileManager.inferBinaryName: 0,03% (1 inclusive)
  1: com.sun.tools.javac.file.ZipFileIndex$Entry.<init>: 0,59% (18 inclusive)
    2: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.readEntry: 0,52% (16 inclusive)
      3: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.buildIndex: 0,52% (16 inclusive)
    2: com.sun.tools.javac.file.ZipFileIndex$DirectoryEntry.getEntry: 0,07% (2 inclusive)
      3: com.sun.tools.javac.file.ZipFileIndex$DirectoryEntry.access$100: 0,07% (2 inclusive)
  1: parser.Matcher.visitChild: 0,52% (16 inclusive)
  1: java.util.ArrayList.grow: 0,49% (15 inclusive)
    2: java.util.ArrayList.ensureCapacityInternal: 0,49% (15 inclusive)
  1: java.util.ArrayList.ensureCapacityInternal: 0,49% (15 inclusive)
  1: java.io.WinNTFileSystem.getBooleanAttributes: 0,46% (14 inclusive)
    2: java.io.File.isDirectory: 0,26% (8 inclusive)
      3: com.sun.tools.javac.file.FSInfo.isDirectory: 0,1% (3 inclusive)
        4: com.sun.tools.javac.file.JavacFileManager.listContainer: 0,1% (3 inclusive)
      3: com.sun.tools.javac.file.JavacFileManager.listDirectory: 0,1% (3 inclusive)
        4: com.sun.tools.javac.file.JavacFileManager.listContainer: 0,1% (3 inclusive)
      3: com.sun.tools.javac.file.RegularFileObject.<init>: 0,07% (2 inclusive)
        4: com.sun.tools.javac.file.JavacFileManager.listDirectory: 0,07% (2 inclusive)
    2: java.io.File.exists: 0,2% (6 inclusive)
      3: sun.misc.URLClassPath$FileLoader.getResource: 0,16% (5 inclusive)
        4: sun.misc.URLClassPath.getResource: 0,16% (5 inclusive)
      3: com.sun.tools.javac.file.FSInfo.exists: 0,03% (1 inclusive)
        4: com.sun.tools.javac.file.Paths$Path.addFile: 0,03% (1 inclusive)
  1: java.io.File.<init>: 0,46% (14 inclusive)
    2: com.sun.tools.javac.file.RegularFileObject.inferBinaryName: 0,1% (3 inclusive)
      3: com.sun.tools.javac.file.JavacFileManager.inferBinaryName: 0,1% (3 inclusive)
    2: com.sun.tools.javac.file.JavacFileManager.listDirectory: 0,1% (3 inclusive)
      3: com.sun.tools.javac.file.JavacFileManager.listContainer: 0,1% (3 inclusive)
    2: sun.misc.URLClassPath$FileLoader.getResource: 0,03% (1 inclusive)
      3: sun.misc.URLClassPath.getResource: 0,03% (1 inclusive)
    2: java.io.File.listFiles: 0,03% (1 inclusive)
      3: com.sun.tools.javac.file.JavacFileManager.listDirectory: 0,03% (1 inclusive)
  1: java.lang.StringCoding.decode: 0,42% (13 inclusive)
    2: java.lang.String.<init>: 0,42% (13 inclusive)
      3: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.readEntry: 0,42% (13 inclusive)
  1: sun.misc.URLClassPath$FileLoader.getResource: 0,42% (13 inclusive)
    2: sun.misc.URLClassPath.getResource: 0,23% (7 inclusive)
      3: java.net.URLClassLoader$1.run: 0,03% (1 inclusive)
  1: java.lang.StringCoding$StringDecoder.decode: 0,42% (13 inclusive)
    2: java.lang.StringCoding.decode: 0,42% (13 inclusive)
      3: java.lang.String.<init>: 0,42% (13 inclusive)
        4: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.readEntry: 0,42% (13 inclusive)
  1: java.net.URLStreamHandler.parseURL: 0,42% (13 inclusive)
    2: sun.net.www.protocol.file.Handler.parseURL: 0,1% (3 inclusive)
      3: java.net.URL.<init>: 0,03% (1 inclusive)
        4: java.net.URL.<init>: 0,03% (1 inclusive)
  1: com.sun.tools.javac.file.ZipFileIndex$Entry.getName: 0,39% (12 inclusive)
  1: com.sun.tools.javac.file.RegularFileObject.inferBinaryName: 0,39% (12 inclusive)
    2: com.sun.tools.javac.file.JavacFileManager.inferBinaryName: 0,16% (5 inclusive)
      3: compiler.java.CollectingJavaFileManager.inferBinaryName: 0,03% (1 inclusive)
  1: com.sun.tools.javac.file.ZipFileIndexArchive$ZipFileIndexFileObject.inferBinaryName: 0,36% (11 inclusive)
    2: com.sun.tools.javac.file.JavacFileManager.inferBinaryName: 0,2% (6 inclusive)
      3: compiler.java.CollectingJavaFileManager.inferBinaryName: 0,2% (6 inclusive)
  1: java.lang.ClassLoader.defineClass: 0,36% (11 inclusive)
    2: java.security.SecureClassLoader.defineClass: 0,36% (11 inclusive)
      3: java.net.URLClassLoader.defineClass: 0,36% (11 inclusive)
  1: java.lang.ClassLoader.defineClass1: 0,36% (11 inclusive)
    2: java.lang.ClassLoader.defineClass: 0,36% (11 inclusive)
      3: java.security.SecureClassLoader.defineClass: 0,36% (11 inclusive)
        4: java.net.URLClassLoader.defineClass: 0,36% (11 inclusive)
  1: com.sun.tools.javac.file.JavacFileManager.inferBinaryName: 0,36% (11 inclusive)
    2: compiler.java.CollectingJavaFileManager.inferBinaryName: 0,23% (7 inclusive)
  1: java.security.SecureClassLoader.defineClass: 0,36% (11 inclusive)
    2: java.net.URLClassLoader.defineClass: 0,36% (11 inclusive)
  1: java.net.URLClassLoader.access$100: 0,33% (10 inclusive)
    2: java.net.URLClassLoader$1.run: 0,03% (1 inclusive)
  1: com.sun.tools.javac.file.JavacFileManager.listDirectory: 0,33% (10 inclusive)
    2: com.sun.tools.javac.file.JavacFileManager.listContainer: 0,2% (6 inclusive)
  1: com.sun.tools.javac.code.Symbol$ClassSymbol.<init>: 0,33% (10 inclusive)
  1: com.sun.tools.javac.util.Name.<init>: 0,33% (10 inclusive)
    2: com.sun.tools.javac.util.SharedNameTable$NameImpl.<init>: 0,33% (10 inclusive)
      3: com.sun.tools.javac.util.SharedNameTable.fromUtf: 0,26% (8 inclusive)
      3: com.sun.tools.javac.util.SharedNameTable.fromChars: 0,07% (2 inclusive)
  1: java.net.URLClassLoader$1.run: 0,33% (10 inclusive)
    2: java.security.AccessController.doPrivileged: 0,13% (4 inclusive)
      3: java.net.URLClassLoader.findClass: 0,03% (1 inclusive)
        4: java.lang.ClassLoader.loadClass: 0,03% (1 inclusive)
  1: com.sun.tools.javac.util.SharedNameTable$NameImpl.<init>: 0,33% (10 inclusive)
    2: com.sun.tools.javac.util.SharedNameTable.fromUtf: 0,26% (8 inclusive)
    2: com.sun.tools.javac.util.SharedNameTable.fromChars: 0,07% (2 inclusive)
  1: com.sun.tools.javac.file.RelativePath$RelativeDirectory.<init>: 0,29% (9 inclusive)
    2: com.sun.tools.javac.file.RelativePath$RelativeFile.dirname: 0,13% (4 inclusive)
    2: com.sun.tools.javac.file.RelativePath$RelativeDirectory.dirname: 0,1% (3 inclusive)
  1: com.sun.tools.javac.code.Type.<init>: 0,29% (9 inclusive)
    2: com.sun.tools.javac.code.Type$ClassType.<init>: 0,13% (4 inclusive)
      3: com.sun.tools.javac.code.Symbol$ClassSymbol.<init>: 0,1% (3 inclusive)
      3: com.sun.tools.javac.code.Symbol$ClassSymbol.erasure: 0,03% (1 inclusive)
    2: com.sun.tools.javac.code.Type$MethodType.<init>: 0,1% (3 inclusive)
      3: com.sun.tools.javac.jvm.ClassReader.sigToType: 0,1% (3 inclusive)
    2: com.sun.tools.javac.code.Type$ArrayType.<init>: 0,07% (2 inclusive)
      3: com.sun.tools.javac.jvm.ClassReader.sigToType: 0,07% (2 inclusive)
  1: java.io.Win32FileSystem.resolve: 0,29% (9 inclusive)
    2: java.io.File.<init>: 0,29% (9 inclusive)
      3: sun.misc.URLClassPath$FileLoader.getResource: 0,03% (1 inclusive)
        4: sun.misc.URLClassPath.getResource: 0,03% (1 inclusive)
      3: java.io.File.listFiles: 0,03% (1 inclusive)
        4: com.sun.tools.javac.file.JavacFileManager.listDirectory: 0,03% (1 inclusive)
      3: com.sun.tools.javac.file.JavacFileManager.listDirectory: 0,03% (1 inclusive)
        4: com.sun.tools.javac.file.JavacFileManager.listContainer: 0,03% (1 inclusive)
  1: java.lang.StringBuffer.toString: 0,29% (9 inclusive)
    2: java.io.StringWriter.toString: 0,13% (4 inclusive)
    2: java.io.Win32FileSystem.normalize: 0,13% (4 inclusive)
    2: java.net.URLStreamHandler.toExternalForm: 0,03% (1 inclusive)
  1: com.sun.tools.javac.file.JavacFileManager.listContainer: 0,29% (9 inclusive)
  1: java.lang.ClassLoader.loadClass: 0,29% (9 inclusive)
    2: java.net.FactoryURLClassLoader.loadClass: 0,03% (1 inclusive)
    2: sun.misc.Launcher$AppClassLoader.loadClass: 0,03% (1 inclusive)
  1: com.sun.tools.javac.file.BaseFileObject.removeExtension: 0,29% (9 inclusive)
  1: java.io.Win32FileSystem.normalize: 0,29% (9 inclusive)
  1: com.sun.tools.javac.util.SharedNameTable.fromUtf: 0,26% (8 inclusive)
  1: sun.misc.URLClassPath.getResource: 0,26% (8 inclusive)
    2: java.net.URLClassLoader$1.run: 0,03% (1 inclusive)
  1: java.lang.String.toCharArray: 0,26% (8 inclusive)
    2: com.sun.tools.javac.util.Name$Table.fromString: 0,16% (5 inclusive)
      3: com.sun.tools.javac.util.Names.fromString: 0,16% (5 inclusive)
        4: com.sun.tools.javac.util.Names.<init>: 0,07% (2 inclusive)
        4: com.sun.tools.javac.jvm.ClassReader.includeClassFile: 0,03% (1 inclusive)
        4: com.sun.tools.javac.tree.TreeInfo.<init>: 0,03% (1 inclusive)
        4: com.sun.tools.javac.code.Symtab.enterBinop: 0,03% (1 inclusive)
    2: java.util.zip.ZipCoder.getBytes: 0,1% (3 inclusive)
      3: java.util.zip.ZipFile.getEntry: 0,1% (3 inclusive)
        4: java.util.jar.JarFile.getEntry: 0,1% (3 inclusive)
  1: com.sun.tools.javac.util.List.of: 0,26% (8 inclusive)
  1: com.sun.tools.javac.util.Name.append: 0,26% (8 inclusive)
    2: com.sun.tools.javac.code.Symbol$TypeSymbol.formFlatName: 0,16% (5 inclusive)
      3: com.sun.tools.javac.code.Symbol$ClassSymbol.<init>: 0,1% (3 inclusive)
        4: com.sun.tools.javac.code.Symbol$ClassSymbol.<init>: 0,1% (3 inclusive)
      3: com.sun.tools.javac.jvm.ClassReader.enterClass: 0,03% (1 inclusive)
        4: com.sun.tools.javac.jvm.ClassReader.includeClassFile: 0,03% (1 inclusive)
    2: com.sun.tools.javac.code.Symbol$TypeSymbol.formFullName: 0,1% (3 inclusive)
      3: com.sun.tools.javac.code.Symbol$ClassSymbol.<init>: 0,07% (2 inclusive)
        4: com.sun.tools.javac.code.Symbol$ClassSymbol.<init>: 0,07% (2 inclusive)
      3: com.sun.tools.javac.jvm.ClassReader.enterClass: 0,03% (1 inclusive)
        4: com.sun.tools.javac.jvm.ClassReader.readInnerClasses: 0,03% (1 inclusive)
  1: java.io.File.isDirectory: 0,26% (8 inclusive)
    2: com.sun.tools.javac.file.FSInfo.isDirectory: 0,1% (3 inclusive)
      3: com.sun.tools.javac.file.JavacFileManager.listContainer: 0,1% (3 inclusive)
    2: com.sun.tools.javac.file.JavacFileManager.listDirectory: 0,1% (3 inclusive)
      3: com.sun.tools.javac.file.JavacFileManager.listContainer: 0,1% (3 inclusive)
    2: com.sun.tools.javac.file.RegularFileObject.<init>: 0,07% (2 inclusive)
      3: com.sun.tools.javac.file.JavacFileManager.listDirectory: 0,07% (2 inclusive)
  1: sun.misc.Resource.getBytes: 0,26% (8 inclusive)
    2: java.net.URLClassLoader.defineClass: 0,23% (7 inclusive)
      3: java.net.URLClassLoader.access$100: 0,23% (7 inclusive)
  1: java.io.StringWriter.<init>: 0,23% (7 inclusive)
    2: util.apache.CharSequenceTranslator.translate: 0,2% (6 inclusive)
  1: com.sun.tools.javac.code.Scope$Entry.<init>: 0,23% (7 inclusive)
    2: com.sun.tools.javac.code.Scope.makeEntry: 0,2% (6 inclusive)
      3: com.sun.tools.javac.code.Scope.enter: 0,2% (6 inclusive)
    2: com.sun.tools.javac.code.Scope$ImportScope$ImportEntry.<init>: 0,03% (1 inclusive)
      3: com.sun.tools.javac.code.Scope$ImportScope.makeEntry: 0,03% (1 inclusive)
  1: compiler.java.CollectingJavaFileManager.inferBinaryName: 0,23% (7 inclusive)
  1: java.util.ArrayList.toArray: 0,23% (7 inclusive)
    2: java.util.Collections$UnmodifiableCollection.toArray: 0,16% (5 inclusive)
    2: compiler.util.MatchCreator.new_match: 0,03% (1 inclusive)
  1: java.util.zip.ZipCoder.getBytes: 0,23% (7 inclusive)
    2: java.util.zip.ZipFile.getEntry: 0,2% (6 inclusive)
      3: java.util.jar.JarFile.getEntry: 0,2% (6 inclusive)
        4: java.util.jar.JarFile.getJarEntry: 0,03% (1 inclusive)
    2: java.util.zip.ZipFile.getInputStream: 0,03% (1 inclusive)
      3: java.util.jar.JarFile.getInputStream: 0,03% (1 inclusive)
        4: sun.misc.URLClassPath$JarLoader$2.getInputStream: 0,03% (1 inclusive)
  1: com.sun.tools.javac.code.Scope.enter: 0,23% (7 inclusive)
  1: sun.net.www.protocol.jar.Handler.parseURL: 0,23% (7 inclusive)
    2: java.net.URL.<init>: 0,03% (1 inclusive)
  1: grammar.ExpressionTreeCleaner.visit: 0,23% (7 inclusive)
    2: grammar.Expression$Not.accept: 0,03% (1 inclusive)
    2: grammar.Expression$Plus.accept: 0,03% (1 inclusive)
  1: com.sun.tools.javac.jvm.ClassReader.sigToType: 0,2% (6 inclusive)
    2: com.sun.tools.javac.jvm.ClassReader.readType: 0,03% (1 inclusive)
      3: com.sun.tools.javac.jvm.ClassReader$11.read: 0,03% (1 inclusive)
  1: source.SourceComposed.strFromMatches: 0,2% (6 inclusive)
    2: source.SourceComposed.<init>: 0,07% (2 inclusive)
  1: java.io.Writer.<init>: 0,2% (6 inclusive)
    2: java.io.StringWriter.<init>: 0,2% (6 inclusive)
      3: util.apache.CharSequenceTranslator.translate: 0,2% (6 inclusive)
  1: java.util.zip.ZipFile.getEntry: 0,2% (6 inclusive)
    2: java.util.jar.JarFile.getEntry: 0,2% (6 inclusive)
      3: java.util.jar.JarFile.getJarEntry: 0,03% (1 inclusive)
  1: com.sun.tools.javac.util.List.prepend: 0,2% (6 inclusive)
  1: com.sun.tools.javac.code.Scope.makeEntry: 0,2% (6 inclusive)
    2: com.sun.tools.javac.code.Scope.enter: 0,2% (6 inclusive)
  1: com.sun.tools.javac.file.ZipFileIndexArchive.getFileObject: 0,2% (6 inclusive)
  1: java.util.jar.JarFile.getEntry: 0,2% (6 inclusive)
    2: java.util.jar.JarFile.getJarEntry: 0,03% (1 inclusive)
  1: java.io.File.exists: 0,2% (6 inclusive)
    2: sun.misc.URLClassPath$FileLoader.getResource: 0,16% (5 inclusive)
      3: sun.misc.URLClassPath.getResource: 0,16% (5 inclusive)
    2: com.sun.tools.javac.file.FSInfo.exists: 0,03% (1 inclusive)
      3: com.sun.tools.javac.file.Paths$Path.addFile: 0,03% (1 inclusive)
  1: trees.MatchFinder.find: 0,2% (6 inclusive)
    2: parser.Match.first: 0,03% (1 inclusive)
      3: compiler.QuotationMacroImplem.applyUnquotation: 0,03% (1 inclusive)
  1: java.io.FileInputStream.<init>: 0,2% (6 inclusive)
    2: sun.misc.URLClassPath$FileLoader$1.getInputStream: 0,16% (5 inclusive)
      3: sun.misc.Resource.cachedInputStream: 0,1% (3 inclusive)
    2: com.sun.tools.javac.file.RegularFileObject.openInputStream: 0,03% (1 inclusive)
      3: com.sun.tools.javac.jvm.ClassReader.fillIn: 0,03% (1 inclusive)
  1: java.io.FileOutputStream.<init>: 0,16% (5 inclusive)
    2: compiler.java.CompiledClass.dump: 0,1% (3 inclusive)
    2: util.FileUtils.write: 0,07% (2 inclusive)
  1: java.lang.StringBuffer.<init>: 0,16% (5 inclusive)
    2: java.io.Win32FileSystem.normalize: 0,1% (3 inclusive)
    2: java.net.URLStreamHandler.toExternalForm: 0,03% (1 inclusive)
    2: java.io.StringWriter.<init>: 0,03% (1 inclusive)
  1: java.io.FileOutputStream.open: 0,16% (5 inclusive)
    2: java.io.FileOutputStream.<init>: 0,16% (5 inclusive)
      3: java.io.FileOutputStream.<init>: 0,16% (5 inclusive)
        4: compiler.java.CompiledClass.dump: 0,1% (3 inclusive)
        4: util.FileUtils.write: 0,07% (2 inclusive)
  1: java.net.URLClassLoader.findClass: 0,16% (5 inclusive)
    2: java.lang.ClassLoader.loadClass: 0,16% (5 inclusive)
      3: java.net.FactoryURLClassLoader.loadClass: 0,03% (1 inclusive)
  1: com.sun.tools.javac.util.Name$Table.fromString: 0,16% (5 inclusive)
    2: com.sun.tools.javac.util.Names.fromString: 0,16% (5 inclusive)
      3: com.sun.tools.javac.util.Names.<init>: 0,07% (2 inclusive)
      3: com.sun.tools.javac.jvm.ClassReader.includeClassFile: 0,03% (1 inclusive)
      3: com.sun.tools.javac.tree.TreeInfo.<init>: 0,03% (1 inclusive)
      3: com.sun.tools.javac.code.Symtab.enterBinop: 0,03% (1 inclusive)
  1: trees.MatchIterator.<init>: 0,16% (5 inclusive)
    2: trees.MatchFinder.trace: 0,1% (3 inclusive)
      3: trees.MatchFinder.find: 0,1% (3 inclusive)
    2: trees.BoundedMatchIterator.<init>: 0,07% (2 inclusive)
      3: trees.MatchFinder.find: 0,07% (2 inclusive)
  1: com.sun.tools.javac.util.Names.fromString: 0,16% (5 inclusive)
    2: com.sun.tools.javac.util.Names.<init>: 0,07% (2 inclusive)
    2: com.sun.tools.javac.jvm.ClassReader.includeClassFile: 0,03% (1 inclusive)
    2: com.sun.tools.javac.tree.TreeInfo.<init>: 0,03% (1 inclusive)
    2: com.sun.tools.javac.code.Symtab.enterBinop: 0,03% (1 inclusive)
  1: java.security.AccessController.doPrivileged: 0,16% (5 inclusive)
    2: java.net.URLClassLoader.findClass: 0,07% (2 inclusive)
      3: java.lang.ClassLoader.loadClass: 0,07% (2 inclusive)
        4: java.net.FactoryURLClassLoader.loadClass: 0,03% (1 inclusive)
  1: java.util.Collections$UnmodifiableCollection.toArray: 0,16% (5 inclusive)
  1: com.sun.tools.javac.file.RelativePath$RelativeFile.dirname: 0,16% (5 inclusive)
  1: com.sun.tools.javac.code.Symbol$TypeSymbol.formFlatName: 0,16% (5 inclusive)
    2: com.sun.tools.javac.code.Symbol$ClassSymbol.<init>: 0,1% (3 inclusive)
      3: com.sun.tools.javac.code.Symbol$ClassSymbol.<init>: 0,1% (3 inclusive)
    2: com.sun.tools.javac.jvm.ClassReader.enterClass: 0,03% (1 inclusive)
      3: com.sun.tools.javac.jvm.ClassReader.includeClassFile: 0,03% (1 inclusive)
  1: compiler.java.CompiledClass.dump: 0,16% (5 inclusive)
    2: driver.CompilationDriver.dumpAndOrLoadClass: 0,03% (1 inclusive)
      3: driver.CompilationDriver.dumpAndOrLoadClass: 0,03% (1 inclusive)
  1: sun.misc.URLClassPath$JarLoader.checkResource: 0,16% (5 inclusive)
    2: sun.misc.URLClassPath$JarLoader.getResource: 0,03% (1 inclusive)
      3: sun.misc.URLClassPath.getResource: 0,03% (1 inclusive)
  1: java.util.Vector.<init>: 0,16% (5 inclusive)
  1: source.SourceFileText.<init>: 0,16% (5 inclusive)
  1: sun.misc.URLClassPath$FileLoader$1.getInputStream: 0,16% (5 inclusive)
    2: sun.misc.Resource.cachedInputStream: 0,1% (3 inclusive)
  1: com.sun.tools.javac.main.JavaCompiler.<init>: 0,16% (5 inclusive)
    2: com.sun.tools.javac.main.JavaCompiler.instance: 0,13% (4 inclusive)
      3: com.sun.tools.javac.main.Main.compile: 0,07% (2 inclusive)
        4: com.sun.tools.javac.api.JavacTaskImpl.call: 0,07% (2 inclusive)
  1: com.sun.tools.javac.util.JCDiagnostic$Factory.qualify: 0,16% (5 inclusive)
  1: java.net.URL.<init>: 0,16% (5 inclusive)
    2: sun.misc.URLClassPath$FileLoader.getResource: 0,1% (3 inclusive)
  1: java.lang.ref.Reference.<init>: 0,16% (5 inclusive)
    2: java.lang.ref.FinalReference.<init>: 0,07% (2 inclusive)
      3: java.lang.ref.Finalizer.<init>: 0,07% (2 inclusive)
    2: java.lang.ref.WeakReference.<init>: 0,03% (1 inclusive)
      3: java.util.WeakHashMap$Entry.<init>: 0,03% (1 inclusive)
    2: java.lang.ref.SoftReference.<init>: 0,03% (1 inclusive)
    2: java.lang.ref.PhantomReference.<init>: 0,03% (1 inclusive)
      3: sun.misc.Cleaner.<init>: 0,03% (1 inclusive)
  1: com.sun.tools.javac.code.Symbol.<init>: 0,16% (5 inclusive)
    2: com.sun.tools.javac.code.Symbol$MethodSymbol.<init>: 0,1% (3 inclusive)
      3: com.sun.tools.javac.jvm.ClassReader.readMethod: 0,07% (2 inclusive)
      3: com.sun.tools.javac.code.Symbol$OperatorSymbol.<init>: 0,03% (1 inclusive)
    2: com.sun.tools.javac.code.Symbol$TypeSymbol.<init>: 0,07% (2 inclusive)
      3: com.sun.tools.javac.code.Symbol$ClassSymbol.<init>: 0,07% (2 inclusive)
  1: com.sun.tools.javac.util.Names.<init>: 0,13% (4 inclusive)
  1: com.sun.tools.javac.file.RelativePath$RelativeDirectory.dirname: 0,13% (4 inclusive)
  1: java.io.StringWriter.toString: 0,13% (4 inclusive)
  1: com.sun.tools.javac.jvm.ClassReader.<init>: 0,13% (4 inclusive)
    2: com.sun.tools.javac.jvm.ClassReader.instance: 0,13% (4 inclusive)
      3: com.sun.tools.javac.main.JavaCompiler.<init>: 0,07% (2 inclusive)
        4: com.sun.tools.javac.main.JavaCompiler.instance: 0,03% (1 inclusive)
  1: com.sun.tools.javac.code.Type$ClassType.<init>: 0,13% (4 inclusive)
    2: com.sun.tools.javac.code.Symbol$ClassSymbol.<init>: 0,1% (3 inclusive)
    2: com.sun.tools.javac.code.Symbol$ClassSymbol.erasure: 0,03% (1 inclusive)
  1: com.sun.tools.javac.jvm.ClassReader.instance: 0,13% (4 inclusive)
    2: com.sun.tools.javac.main.JavaCompiler.<init>: 0,07% (2 inclusive)
      3: com.sun.tools.javac.main.JavaCompiler.instance: 0,03% (1 inclusive)
  1: java.lang.String.concat: 0,13% (4 inclusive)
    2: java.net.URLClassLoader$1.run: 0,1% (3 inclusive)
      3: java.net.URLClassLoader$1.run: 0,03% (1 inclusive)
        4: java.security.AccessController.doPrivileged: 0,03% (1 inclusive)
    2: java.net.URLClassLoader.isSealed: 0,03% (1 inclusive)
  1: com.sun.tools.javac.main.JavaCompiler.instance: 0,13% (4 inclusive)
    2: com.sun.tools.javac.main.Main.compile: 0,07% (2 inclusive)
      3: com.sun.tools.javac.api.JavacTaskImpl.call: 0,07% (2 inclusive)
  1: sun.net.www.ParseUtil.encodePath: 0,13% (4 inclusive)
    2: sun.misc.URLClassPath$JarLoader.checkResource: 0,1% (3 inclusive)
      3: sun.misc.URLClassPath$JarLoader.getResource: 0,03% (1 inclusive)
        4: sun.misc.URLClassPath.getResource: 0,03% (1 inclusive)
    2: sun.misc.URLClassPath$FileLoader.getResource: 0,03% (1 inclusive)
      3: sun.misc.URLClassPath.getResource: 0,03% (1 inclusive)
        4: java.net.URLClassLoader$1.run: 0,03% (1 inclusive)
  1: com.sun.tools.javac.file.FSInfo.isDirectory: 0,1% (3 inclusive)
    2: com.sun.tools.javac.file.JavacFileManager.listContainer: 0,1% (3 inclusive)
  1: java.io.File.hashCode: 0,1% (3 inclusive)
    2: java.util.HashMap.get: 0,1% (3 inclusive)
  1: java.util.HashMap.get: 0,1% (3 inclusive)
  1: java.lang.System.arraycopy: 0,1% (3 inclusive)
    2: com.sun.tools.javac.util.Name.getBytes: 0,03% (1 inclusive)
      3: com.sun.tools.javac.util.Name.append: 0,03% (1 inclusive)
        4: com.sun.tools.javac.code.Symbol$TypeSymbol.formFlatName: 0,03% (1 inclusive)
    2: java.util.ComparableTimSort.binarySort: 0,03% (1 inclusive)
      3: java.util.ComparableTimSort.sort: 0,03% (1 inclusive)
        4: java.util.ComparableTimSort.sort: 0,03% (1 inclusive)
    2: java.lang.AbstractStringBuilder.replace: 0,03% (1 inclusive)
      3: java.lang.StringBuffer.replace: 0,03% (1 inclusive)
        4: compiler.util.Quoter$DynamicQuoteMethod.dynamicQuote: 0,03% (1 inclusive)
  1: com.sun.tools.javac.tree.JCTree.<init>: 0,1% (3 inclusive)
    2: com.sun.tools.javac.tree.JCTree$JCExpression.<init>: 0,1% (3 inclusive)
      3: com.sun.tools.javac.tree.JCTree$JCIdent.<init>: 0,07% (2 inclusive)
      3: com.sun.tools.javac.tree.JCTree$JCLiteral.<init>: 0,03% (1 inclusive)
  1: com.sun.tools.javac.tree.JCTree$JCExpression.<init>: 0,1% (3 inclusive)
    2: com.sun.tools.javac.tree.JCTree$JCIdent.<init>: 0,07% (2 inclusive)
    2: com.sun.tools.javac.tree.JCTree$JCLiteral.<init>: 0,03% (1 inclusive)
  1: com.sun.tools.javac.main.RecognizedOptions.getAll: 0,1% (3 inclusive)
    2: com.sun.tools.javac.main.RecognizedOptions.getOptions: 0,07% (2 inclusive)
      3: com.sun.tools.javac.main.RecognizedOptions.getJavaCompilerOptions: 0,03% (1 inclusive)
        4: com.sun.tools.javac.main.Main.<init>: 0,03% (1 inclusive)
  1: trees.MatchFinder.trace: 0,1% (3 inclusive)
    2: trees.MatchFinder.find: 0,1% (3 inclusive)
  1: java.lang.String.toLowerCase: 0,1% (3 inclusive)
    2: java.io.Win32FileSystem.hashCode: 0,1% (3 inclusive)
      3: java.io.File.hashCode: 0,1% (3 inclusive)
        4: java.util.HashMap.get: 0,1% (3 inclusive)
  1: java.io.FileInputStream.open: 0,1% (3 inclusive)
    2: java.io.FileInputStream.<init>: 0,1% (3 inclusive)
      3: sun.misc.URLClassPath$FileLoader$1.getInputStream: 0,07% (2 inclusive)
        4: sun.misc.Resource.cachedInputStream: 0,07% (2 inclusive)
      3: com.sun.tools.javac.file.RegularFileObject.openInputStream: 0,03% (1 inclusive)
        4: com.sun.tools.javac.jvm.ClassReader.fillIn: 0,03% (1 inclusive)
  1: com.sun.tools.javac.jvm.ClassReader.enterClass: 0,1% (3 inclusive)
    2: com.sun.tools.javac.jvm.ClassReader.readInnerClasses: 0,07% (2 inclusive)
      3: com.sun.tools.javac.jvm.ClassReader$6.read: 0,03% (1 inclusive)
        4: com.sun.tools.javac.jvm.ClassReader.readAttrs: 0,03% (1 inclusive)
    2: com.sun.tools.javac.jvm.ClassReader.includeClassFile: 0,03% (1 inclusive)
  1: util.FileUtils.write: 0,1% (3 inclusive)
  1: java.io.Win32FileSystem.hashCode: 0,1% (3 inclusive)
    2: java.io.File.hashCode: 0,1% (3 inclusive)
      3: java.util.HashMap.get: 0,1% (3 inclusive)
  1: compiler.util.MatchCreator.new_match: 0,1% (3 inclusive)
    2: compiler.MatchTreeTransformer.transformChilds: 0,07% (2 inclusive)
      3: compiler.MacroExpander.transform: 0,07% (2 inclusive)
        4: compiler.MatchTreeTransformer.transformChilds: 0,07% (2 inclusive)
  1: com.sun.tools.javac.code.Types$DefaultTypeVisitor.<init>: 0,1% (3 inclusive)
    2: com.sun.tools.javac.code.Types$SimpleVisitor.<init>: 0,1% (3 inclusive)
      3: com.sun.tools.javac.code.Types$UnaryVisitor.<init>: 0,1% (3 inclusive)
  1: com.sun.tools.javac.file.ZipFileIndex$DirectoryEntry.getEntry: 0,1% (3 inclusive)
    2: com.sun.tools.javac.file.ZipFileIndex$DirectoryEntry.access$100: 0,1% (3 inclusive)
  1: sun.net.www.protocol.file.Handler.parseURL: 0,1% (3 inclusive)
    2: java.net.URL.<init>: 0,03% (1 inclusive)
      3: java.net.URL.<init>: 0,03% (1 inclusive)
  1: com.sun.tools.javac.code.Symbol$MethodSymbol.<init>: 0,1% (3 inclusive)
    2: com.sun.tools.javac.jvm.ClassReader.readMethod: 0,07% (2 inclusive)
    2: com.sun.tools.javac.code.Symbol$OperatorSymbol.<init>: 0,03% (1 inclusive)
  1: com.sun.tools.javac.file.BaseFileObject.<init>: 0,1% (3 inclusive)
    2: com.sun.tools.javac.file.ZipFileIndexArchive$ZipFileIndexFileObject.<init>: 0,1% (3 inclusive)
      3: com.sun.tools.javac.file.ZipFileIndexArchive.getFileObject: 0,1% (3 inclusive)
  1: com.sun.tools.javac.code.Symbol$TypeSymbol.formFullName: 0,1% (3 inclusive)
    2: com.sun.tools.javac.code.Symbol$ClassSymbol.<init>: 0,07% (2 inclusive)
      3: com.sun.tools.javac.code.Symbol$ClassSymbol.<init>: 0,07% (2 inclusive)
    2: com.sun.tools.javac.jvm.ClassReader.enterClass: 0,03% (1 inclusive)
      3: com.sun.tools.javac.jvm.ClassReader.readInnerClasses: 0,03% (1 inclusive)
  1: java.net.URLClassLoader$1.<init>: 0,1% (3 inclusive)
    2: java.net.URLClassLoader.findClass: 0,1% (3 inclusive)
      3: java.lang.ClassLoader.loadClass: 0,1% (3 inclusive)
  1: sun.misc.Resource.cachedInputStream: 0,1% (3 inclusive)
  1: com.sun.tools.javac.file.ZipFileIndexArchive$ZipFileIndexFileObject.<init>: 0,1% (3 inclusive)
    2: com.sun.tools.javac.file.ZipFileIndexArchive.getFileObject: 0,1% (3 inclusive)
  1: com.sun.tools.javac.util.ListBuffer.append: 0,1% (3 inclusive)
  1: com.sun.tools.javac.code.Types$UnaryVisitor.<init>: 0,1% (3 inclusive)
  1: com.sun.tools.javac.file.ZipFileIndex$DirectoryEntry.access$100: 0,1% (3 inclusive)
  1: com.sun.tools.javac.code.Type$MethodType.<init>: 0,1% (3 inclusive)
    2: com.sun.tools.javac.jvm.ClassReader.sigToType: 0,1% (3 inclusive)
  1: com.sun.tools.javac.code.Types$SimpleVisitor.<init>: 0,1% (3 inclusive)
    2: com.sun.tools.javac.code.Types$UnaryVisitor.<init>: 0,1% (3 inclusive)
  1: compiler.MacroExpander.transform: 0,1% (3 inclusive)
    2: compiler.MatchTreeTransformer.transformChilds: 0,07% (2 inclusive)
  1: com.sun.tools.javac.util.SharedNameTable.fromChars: 0,07% (2 inclusive)
  1: java.lang.ClassLoader.checkCerts: 0,07% (2 inclusive)
  1: com.sun.tools.javac.util.ListBuffer.<init>: 0,07% (2 inclusive)
  1: com.sun.tools.javac.util.Names.createTable: 0,07% (2 inclusive)
    2: com.sun.tools.javac.util.Names.<init>: 0,07% (2 inclusive)
  1: java.util.concurrent.atomic.AtomicInteger.compareAndSet: 0,07% (2 inclusive)
    2: java.util.concurrent.atomic.AtomicInteger.decrementAndGet: 0,07% (2 inclusive)
      3: java.io.FileDescriptor.decrementAndGetUseCount: 0,07% (2 inclusive)
  1: com.sun.tools.javac.jvm.ClassReader.readMethod: 0,07% (2 inclusive)
  1: java.lang.ClassLoader.findBootstrapClass: 0,07% (2 inclusive)
    2: java.lang.ClassLoader.findBootstrapClassOrNull: 0,07% (2 inclusive)
      3: java.lang.ClassLoader.loadClass: 0,07% (2 inclusive)
        4: java.lang.ClassLoader.loadClass: 0,07% (2 inclusive)
  1: sun.misc.Unsafe.compareAndSwapInt: 0,07% (2 inclusive)
    2: java.util.concurrent.atomic.AtomicInteger.compareAndSet: 0,07% (2 inclusive)
      3: java.util.concurrent.atomic.AtomicInteger.decrementAndGet: 0,07% (2 inclusive)
        4: java.io.FileDescriptor.decrementAndGetUseCount: 0,07% (2 inclusive)
  1: java.lang.Throwable.<init>: 0,07% (2 inclusive)
    2: java.lang.Exception.<init>: 0,07% (2 inclusive)
      3: java.security.PrivilegedActionException.<init>: 0,03% (1 inclusive)
  1: com.sun.tools.javac.comp.Resolve.selectBest: 0,07% (2 inclusive)
    2: com.sun.tools.javac.comp.Resolve.findMethod: 0,07% (2 inclusive)
      3: com.sun.tools.javac.comp.Resolve.findMethod: 0,03% (1 inclusive)
  1: java.lang.Class.getComponentType: 0,07% (2 inclusive)
    2: java.util.Arrays.copyOf: 0,07% (2 inclusive)
      3: java.util.ArrayList.toArray: 0,07% (2 inclusive)
        4: java.util.Collections$UnmodifiableCollection.toArray: 0,03% (1 inclusive)
        4: compiler.util.MatchCreator.new_match: 0,03% (1 inclusive)
  1: java.lang.Exception.<init>: 0,07% (2 inclusive)
    2: java.security.PrivilegedActionException.<init>: 0,03% (1 inclusive)
  1: java.io.FileDescriptor.decrementAndGetUseCount: 0,07% (2 inclusive)
  1: sun.misc.Launcher$AppClassLoader.loadClass: 0,07% (2 inclusive)
    2: java.lang.ClassLoader.loadClass: 0,03% (1 inclusive)
  1: com.sun.tools.javac.util.ListBuffer.iterator: 0,07% (2 inclusive)
    2: com.sun.tools.javac.code.DeferredLintHandler.flush: 0,07% (2 inclusive)
  1: java.io.FileDescriptor.<init>: 0,07% (2 inclusive)
    2: java.io.FileInputStream.<init>: 0,07% (2 inclusive)
      3: sun.misc.URLClassPath$FileLoader$1.getInputStream: 0,07% (2 inclusive)
  1: com.sun.tools.javac.file.RegularFileObject.<init>: 0,07% (2 inclusive)
    2: com.sun.tools.javac.file.JavacFileManager.listDirectory: 0,07% (2 inclusive)
  1: com.sun.tools.javac.code.Types$ImplementationCache.implementationInternal: 0,07% (2 inclusive)
  1: com.sun.tools.javac.tree.JCTree$JCIdent.<init>: 0,07% (2 inclusive)
  1: sun.nio.fs.WindowsPathParser.normalize: 0,07% (2 inclusive)
  1: com.sun.tools.javac.api.JavacTaskImpl.call: 0,07% (2 inclusive)
  1: java.util.AbstractQueue.<init>: 0,07% (2 inclusive)
    2: com.sun.tools.javac.util.ListBuffer.<init>: 0,07% (2 inclusive)
  1: com.sun.tools.javac.jvm.ClassReader.includeClassFile: 0,07% (2 inclusive)
  1: com.sun.tools.javac.jvm.Code.emitop0: 0,07% (2 inclusive)
  1: java.lang.String.trim: 0,07% (2 inclusive)
  1: java.lang.ref.Finalizer.<init>: 0,07% (2 inclusive)
  1: grammar.java._B_Expressions.<init>: 0,07% (2 inclusive)
    2: grammar.java._C_Statements.<init>: 0,03% (1 inclusive)
      3: grammar.java._D_Requires.<init>: 0,03% (1 inclusive)
  1: com.sun.tools.javac.comp.Resolve.findMethod: 0,07% (2 inclusive)
  1: java.net.URLStreamHandler.toExternalForm: 0,07% (2 inclusive)
  1: com.sun.tools.javac.code.Type$ArrayType.<init>: 0,07% (2 inclusive)
    2: com.sun.tools.javac.jvm.ClassReader.sigToType: 0,07% (2 inclusive)
  1: com.sun.tools.javac.jvm.ClassReader.readInnerClasses: 0,07% (2 inclusive)
    2: com.sun.tools.javac.jvm.ClassReader$6.read: 0,03% (1 inclusive)
      3: com.sun.tools.javac.jvm.ClassReader.readAttrs: 0,03% (1 inclusive)
  1: java.security.CodeSource.<init>: 0,07% (2 inclusive)
    2: java.net.URLClassLoader.defineClass: 0,07% (2 inclusive)
      3: java.net.URLClassLoader.access$100: 0,07% (2 inclusive)
  1: sun.misc.URLClassPath$JarLoader$2.<init>: 0,07% (2 inclusive)
    2: sun.misc.URLClassPath$JarLoader.checkResource: 0,07% (2 inclusive)
  1: com.sun.tools.javac.util.ListBuffer$1.<init>: 0,07% (2 inclusive)
    2: com.sun.tools.javac.util.ListBuffer.iterator: 0,07% (2 inclusive)
      3: com.sun.tools.javac.code.DeferredLintHandler.flush: 0,07% (2 inclusive)
  1: com.sun.tools.javac.main.RecognizedOptions.getOptions: 0,07% (2 inclusive)
    2: com.sun.tools.javac.main.RecognizedOptions.getJavaCompilerOptions: 0,03% (1 inclusive)
      3: com.sun.tools.javac.main.Main.<init>: 0,03% (1 inclusive)
  1: sun.misc.Resource.<init>: 0,07% (2 inclusive)
    2: sun.misc.URLClassPath$JarLoader$2.<init>: 0,07% (2 inclusive)
      3: sun.misc.URLClassPath$JarLoader.checkResource: 0,07% (2 inclusive)
  1: com.sun.tools.javac.util.SharedNameTable.<init>: 0,07% (2 inclusive)
    2: com.sun.tools.javac.util.Names.createTable: 0,07% (2 inclusive)
      3: com.sun.tools.javac.util.Names.<init>: 0,07% (2 inclusive)
  1: java.lang.ClassLoader.findBootstrapClassOrNull: 0,07% (2 inclusive)
    2: java.lang.ClassLoader.loadClass: 0,07% (2 inclusive)
      3: java.lang.ClassLoader.loadClass: 0,07% (2 inclusive)
  1: com.sun.tools.javac.main.Main.compile: 0,07% (2 inclusive)
    2: com.sun.tools.javac.api.JavacTaskImpl.call: 0,07% (2 inclusive)
  1: grammar.Expression.<init>: 0,07% (2 inclusive)
    2: grammar.Expression$Star.<init>: 0,03% (1 inclusive)
      3: grammar.GrammarDSL.star: 0,03% (1 inclusive)
    2: grammar.Expression$StringLiteral.<init>: 0,03% (1 inclusive)
      3: grammar.GrammarDSL.str: 0,03% (1 inclusive)
  1: java.util.EnumSet.of: 0,07% (2 inclusive)
    2: com.sun.tools.javac.jvm.ClassReader.<init>: 0,03% (1 inclusive)
      3: com.sun.tools.javac.jvm.ClassReader.instance: 0,03% (1 inclusive)
    2: com.sun.tools.javac.main.RecognizedOptions.<clinit>: 0,03% (1 inclusive)
  1: java.io.File.listFiles: 0,07% (2 inclusive)
    2: com.sun.tools.javac.file.JavacFileManager.listDirectory: 0,07% (2 inclusive)
  1: java.util.concurrent.atomic.AtomicInteger.decrementAndGet: 0,07% (2 inclusive)
    2: java.io.FileDescriptor.decrementAndGetUseCount: 0,07% (2 inclusive)
  1: trees.MatchSpec.<init>: 0,07% (2 inclusive)
    2: trees.MatchSpec$RuleSpec.<init>: 0,03% (1 inclusive)
      3: trees.MatchSpec.rule: 0,03% (1 inclusive)
    2: trees.MatchSpec$PositionSpec.<init>: 0,03% (1 inclusive)
      3: trees.MatchSpec.at: 0,03% (1 inclusive)
  1: java.lang.ref.FinalReference.<init>: 0,07% (2 inclusive)
    2: java.lang.ref.Finalizer.<init>: 0,07% (2 inclusive)
  1: com.sun.tools.javac.jvm.Code.emitop: 0,07% (2 inclusive)
    2: com.sun.tools.javac.jvm.Code.emitop0: 0,07% (2 inclusive)
  1: source.SourceComposed.<init>: 0,07% (2 inclusive)
  1: trees.BoundedMatchIterator.<init>: 0,07% (2 inclusive)
    2: trees.MatchFinder.find: 0,07% (2 inclusive)
  1: com.sun.tools.javac.code.DeferredLintHandler.flush: 0,07% (2 inclusive)
  1: com.sun.tools.javac.code.Symbol$TypeSymbol.<init>: 0,07% (2 inclusive)
    2: com.sun.tools.javac.code.Symbol$ClassSymbol.<init>: 0,07% (2 inclusive)
  1: com.sun.tools.javac.api.JavacTaskImpl.<init>: 0,07% (2 inclusive)
    2: com.sun.tools.javac.api.JavacTool.getTask: 0,03% (1 inclusive)
  1: java.util.HashMap.<init>: 0,07% (2 inclusive)
    2: com.sun.tools.javac.code.Types.<init>: 0,03% (1 inclusive)
    2: java.util.LinkedHashMap.<init>: 0,03% (1 inclusive)
      3: java.util.ServiceLoader.<init>: 0,03% (1 inclusive)
        4: java.util.ServiceLoader.load: 0,03% (1 inclusive)
  1: com.sun.tools.javac.comp.Resolve.rawInstantiate: 0,07% (2 inclusive)
    2: com.sun.tools.javac.comp.Resolve.selectBest: 0,07% (2 inclusive)
      3: com.sun.tools.javac.comp.Resolve.findMethod: 0,07% (2 inclusive)
        4: com.sun.tools.javac.comp.Resolve.findMethod: 0,03% (1 inclusive)
  1: compiler.MatchTreeTransformer.transformChilds: 0,07% (2 inclusive)
  1: com.sun.tools.javac.util.ListBuffer.clear: 0,07% (2 inclusive)
  1: com.sun.tools.javac.parser.JavacParser.variableDeclaratorId: 0,03% (1 inclusive)
    2: com.sun.tools.javac.parser.JavacParser.formalParameter: 0,03% (1 inclusive)
      3: com.sun.tools.javac.parser.JavacParser.formalParameters: 0,03% (1 inclusive)
  1: util.FileUtils.create: 0,03% (1 inclusive)
    2: util.FileUtils.write: 0,03% (1 inclusive)
  1: trees.MatchFinder$Finder.find: 0,03% (1 inclusive)
    2: trees.MatchFinder.find: 0,03% (1 inclusive)
      3: parser.Match.first: 0,03% (1 inclusive)
        4: compiler.QuotationMacroImplem.applyUnquotation: 0,03% (1 inclusive)
  1: java.lang.Class.getDeclaredConstructors0: 0,03% (1 inclusive)
    2: java.lang.Class.privateGetDeclaredConstructors: 0,03% (1 inclusive)
      3: java.lang.Class.getConstructor0: 0,03% (1 inclusive)
        4: java.lang.Class.newInstance0: 0,03% (1 inclusive)
  1: java.util.ServiceLoader.load: 0,03% (1 inclusive)
  1: grammar.Expression$StringLiteral.<init>: 0,03% (1 inclusive)
    2: grammar.GrammarDSL.str: 0,03% (1 inclusive)
  1: com.sun.tools.javac.util.Options.isSet: 0,03% (1 inclusive)
  1: com.sun.tools.javac.code.Scope.getElementsByName: 0,03% (1 inclusive)
    2: com.sun.tools.javac.code.Scope$CompoundScope$2$1.nextIterator: 0,03% (1 inclusive)
  1: com.sun.tools.javac.tree.JCTree$Visitor.<init>: 0,03% (1 inclusive)
    2: com.sun.tools.javac.comp.Check$Validator.<init>: 0,03% (1 inclusive)
      3: com.sun.tools.javac.comp.Check.validate: 0,03% (1 inclusive)
  1: java.io.FilterOutputStream.close: 0,03% (1 inclusive)
    2: compiler.java.CompiledClass.dump: 0,03% (1 inclusive)
  1: com.sun.tools.javac.main.Main.<init>: 0,03% (1 inclusive)
  1: java.io.FileOutputStream.close0: 0,03% (1 inclusive)
    2: java.io.FileOutputStream.close: 0,03% (1 inclusive)
      3: java.io.FilterOutputStream.close: 0,03% (1 inclusive)
        4: compiler.java.CompiledClass.dump: 0,03% (1 inclusive)
  1: com.sun.tools.javac.comp.TransTypes.addBridges: 0,03% (1 inclusive)
  1: java.util.WeakHashMap$Entry.<init>: 0,03% (1 inclusive)
  1: driver.Context.<clinit>: 0,03% (1 inclusive)
    2: driver.DependencyResolver.<init>: 0,03% (1 inclusive)
      3: driver.DependencyResolver.resolve: 0,03% (1 inclusive)
  1: sun.misc.URLClassPath$JarLoader$2.getInputStream: 0,03% (1 inclusive)
  1: java.util.concurrent.ConcurrentHashMap.putIfAbsent: 0,03% (1 inclusive)
  1: parser.Match.first: 0,03% (1 inclusive)
    2: compiler.QuotationMacroImplem.applyUnquotation: 0,03% (1 inclusive)
  1: sun.misc.Cleaner.<init>: 0,03% (1 inclusive)
  1: java.net.URLClassLoader.isSealed: 0,03% (1 inclusive)
  1: com.sun.tools.javac.comp.Check$CycleChecker.checkClass: 0,03% (1 inclusive)
    2: com.sun.tools.javac.comp.Check$CycleChecker.visitClassDef: 0,03% (1 inclusive)
  1: com.sun.tools.javac.jvm.ClassReader.fillIn: 0,03% (1 inclusive)
  1: java.util.ComparableTimSort.sort: 0,03% (1 inclusive)
  1: java.util.concurrent.atomic.AtomicBoolean.<clinit>: 0,03% (1 inclusive)
    2: com.sun.tools.javac.api.JavacTaskImpl.<init>: 0,03% (1 inclusive)
      3: com.sun.tools.javac.api.JavacTaskImpl.<init>: 0,03% (1 inclusive)
        4: com.sun.tools.javac.api.JavacTool.getTask: 0,03% (1 inclusive)
  1: com.sun.tools.javac.comp.Check$ConversionWarner.<init>: 0,03% (1 inclusive)
    2: com.sun.tools.javac.comp.Check.convertWarner: 0,03% (1 inclusive)
      3: com.sun.tools.javac.comp.Attr.checkMethod: 0,03% (1 inclusive)
  1: java.io.WinNTFileSystem.canonicalize0: 0,03% (1 inclusive)
    2: java.io.Win32FileSystem.canonicalize: 0,03% (1 inclusive)
      3: java.io.File.getCanonicalPath: 0,03% (1 inclusive)
        4: com.sun.tools.javac.file.JavacFileManager.caseMapCheck: 0,03% (1 inclusive)
  1: sun.misc.URLClassPath$JarLoader$2.getManifest: 0,03% (1 inclusive)
    2: java.net.URLClassLoader.defineClass: 0,03% (1 inclusive)
  1: java.lang.ref.SoftReference.<init>: 0,03% (1 inclusive)
  1: com.sun.tools.javac.jvm.Code.emitStackMap: 0,03% (1 inclusive)
    2: com.sun.tools.javac.jvm.Code.emitop: 0,03% (1 inclusive)
      3: com.sun.tools.javac.jvm.Code.emitop0: 0,03% (1 inclusive)
  1: compiler.QuotationMacroImplem.applyUnquotation: 0,03% (1 inclusive)
  1: com.sun.tools.javac.code.Scope$CompoundScope$2$1.nextIterator: 0,03% (1 inclusive)
  1: java.util.jar.JarFile.getJarEntry: 0,03% (1 inclusive)
  1: java.util.jar.JarFile.hasClassPathAttribute: 0,03% (1 inclusive)
    2: java.util.jar.JavaUtilJarAccessImpl.jarFileHasClassPathAttribute: 0,03% (1 inclusive)
      3: sun.misc.URLClassPath$JarLoader.getClassPath: 0,03% (1 inclusive)
        4: sun.misc.URLClassPath.getLoader: 0,03% (1 inclusive)
  1: com.sun.tools.javac.comp.Check.convertWarner: 0,03% (1 inclusive)
    2: com.sun.tools.javac.comp.Attr.checkMethod: 0,03% (1 inclusive)
  1: com.sun.tools.javac.code.Scope.lookup: 0,03% (1 inclusive)
    2: com.sun.tools.javac.code.Types$ImplementationCache.implementationInternal: 0,03% (1 inclusive)
  1: com.sun.tools.javac.jvm.ClassReader.readType: 0,03% (1 inclusive)
    2: com.sun.tools.javac.jvm.ClassReader$11.read: 0,03% (1 inclusive)
  1: com.sun.tools.javac.parser.JavacParser.parseCompilationUnit: 0,03% (1 inclusive)
    2: com.sun.tools.javac.parser.EndPosParser.parseCompilationUnit: 0,03% (1 inclusive)
  1: com.sun.tools.javac.code.Symbol$MethodSymbol.implementation: 0,03% (1 inclusive)
    2: com.sun.tools.javac.comp.TransTypes.addBridgeIfNeeded: 0,03% (1 inclusive)
      3: com.sun.tools.javac.comp.TransTypes.addBridges: 0,03% (1 inclusive)
  1: com.sun.tools.javac.code.Types.<init>: 0,03% (1 inclusive)
  1: com.sun.tools.javac.code.Symbol$OperatorSymbol.<init>: 0,03% (1 inclusive)
  1: com.sun.tools.javac.tree.TreeMaker.VarDef: 0,03% (1 inclusive)
    2: com.sun.tools.javac.parser.JavacParser.variableDeclaratorId: 0,03% (1 inclusive)
      3: com.sun.tools.javac.parser.JavacParser.formalParameter: 0,03% (1 inclusive)
        4: com.sun.tools.javac.parser.JavacParser.formalParameters: 0,03% (1 inclusive)
  1: java.io.FileOutputStream.close: 0,03% (1 inclusive)
    2: java.io.FilterOutputStream.close: 0,03% (1 inclusive)
      3: compiler.java.CompiledClass.dump: 0,03% (1 inclusive)
  1: com.sun.tools.javac.tree.TreeInfo.<init>: 0,03% (1 inclusive)
  1: com.sun.tools.javac.comp.Enter.<init>: 0,03% (1 inclusive)
    2: com.sun.tools.javac.comp.Enter.instance: 0,03% (1 inclusive)
      3: com.sun.tools.javac.comp.Check.<init>: 0,03% (1 inclusive)
        4: com.sun.tools.javac.comp.Check.instance: 0,03% (1 inclusive)
  1: com.sun.tools.javac.tree.TreeMaker.<init>: 0,03% (1 inclusive)
    2: com.sun.tools.javac.tree.TreeMaker.forToplevel: 0,03% (1 inclusive)
  1: com.sun.tools.javac.parser.Scanner.getLineMap: 0,03% (1 inclusive)
    2: com.sun.tools.javac.parser.JavacParser.parseCompilationUnit: 0,03% (1 inclusive)
      3: com.sun.tools.javac.parser.EndPosParser.parseCompilationUnit: 0,03% (1 inclusive)
  1: java.util.Arrays$ArrayList.<init>: 0,03% (1 inclusive)
  1: java.util.ServiceLoader.<init>: 0,03% (1 inclusive)
    2: java.util.ServiceLoader.load: 0,03% (1 inclusive)
  1: java.lang.Class.getConstructor0: 0,03% (1 inclusive)
    2: java.lang.Class.newInstance0: 0,03% (1 inclusive)
  1: java.lang.AbstractStringBuilder.replace: 0,03% (1 inclusive)
    2: java.lang.StringBuffer.replace: 0,03% (1 inclusive)
      3: compiler.util.Quoter$DynamicQuoteMethod.dynamicQuote: 0,03% (1 inclusive)
  1: java.util.zip.ZipFile.getInputStream: 0,03% (1 inclusive)
    2: java.util.jar.JarFile.getInputStream: 0,03% (1 inclusive)
      3: sun.misc.URLClassPath$JarLoader$2.getInputStream: 0,03% (1 inclusive)
  1: com.sun.tools.javac.comp.Infer.<init>: 0,03% (1 inclusive)
    2: com.sun.tools.javac.comp.Infer.instance: 0,03% (1 inclusive)
  1: java.util.concurrent.ConcurrentHashMap.setEntryAt: 0,03% (1 inclusive)
    2: java.util.concurrent.ConcurrentHashMap$Segment.put: 0,03% (1 inclusive)
      3: java.util.concurrent.ConcurrentHashMap.putIfAbsent: 0,03% (1 inclusive)
  1: com.sun.tools.javac.api.JavacTool.getTask: 0,03% (1 inclusive)
  1: sun.misc.Unsafe.putOrderedObject: 0,03% (1 inclusive)
    2: java.util.concurrent.ConcurrentHashMap.setEntryAt: 0,03% (1 inclusive)
      3: java.util.concurrent.ConcurrentHashMap$Segment.put: 0,03% (1 inclusive)
        4: java.util.concurrent.ConcurrentHashMap.putIfAbsent: 0,03% (1 inclusive)
  1: java.util.concurrent.locks.AbstractOwnableSynchronizer.<init>: 0,03% (1 inclusive)
    2: java.util.concurrent.locks.AbstractQueuedSynchronizer.<init>: 0,03% (1 inclusive)
      3: java.util.concurrent.locks.ReentrantLock$Sync.<init>: 0,03% (1 inclusive)
  1: com.sun.tools.javac.code.Scope$CompoundScope$CompoundScopeIterator.<init>: 0,03% (1 inclusive)
    2: com.sun.tools.javac.code.Scope$CompoundScope$2$1.<init>: 0,03% (1 inclusive)
      3: com.sun.tools.javac.code.Scope$CompoundScope$2.iterator: 0,03% (1 inclusive)
  1: sun.misc.URLClassPath$JarLoader.getResource: 0,03% (1 inclusive)
    2: sun.misc.URLClassPath.getResource: 0,03% (1 inclusive)
  1: java.util.LinkedHashMap.createEntry: 0,03% (1 inclusive)
  1: java.lang.reflect.Array.newArray: 0,03% (1 inclusive)
    2: java.lang.reflect.Array.newInstance: 0,03% (1 inclusive)
      3: java.util.Arrays.copyOf: 0,03% (1 inclusive)
        4: java.util.ArrayList.toArray: 0,03% (1 inclusive)
  1: java.util.jar.Manifest.read: 0,03% (1 inclusive)
  1: trees.MatchSpec$RuleSpec.<init>: 0,03% (1 inclusive)
    2: trees.MatchSpec.rule: 0,03% (1 inclusive)
  1: com.sun.tools.javac.util.RichDiagnosticFormatter.<init>: 0,03% (1 inclusive)
  1: java.lang.Class.privateGetDeclaredConstructors: 0,03% (1 inclusive)
    2: java.lang.Class.getConstructor0: 0,03% (1 inclusive)
      3: java.lang.Class.newInstance0: 0,03% (1 inclusive)
  1: com.sun.tools.javac.main.RecognizedOptions$17.<init>: 0,03% (1 inclusive)
    2: com.sun.tools.javac.main.RecognizedOptions.getAll: 0,03% (1 inclusive)
  1: java.io.File.createNewFile: 0,03% (1 inclusive)
    2: util.FileUtils.create: 0,03% (1 inclusive)
      3: util.FileUtils.write: 0,03% (1 inclusive)
  1: java.util.regex.Pattern$CharPropertyNames.<clinit>: 0,03% (1 inclusive)
    2: java.util.regex.Pattern.charPropertyNodeFor: 0,03% (1 inclusive)
      3: java.util.regex.Pattern.family: 0,03% (1 inclusive)
        4: java.util.regex.Pattern.sequence: 0,03% (1 inclusive)
  1: java.lang.Throwable.fillInStackTrace: 0,03% (1 inclusive)
    2: java.lang.Throwable.<init>: 0,03% (1 inclusive)
      3: java.lang.Exception.<init>: 0,03% (1 inclusive)
  1: com.sun.tools.javac.code.Scope$3.<init>: 0,03% (1 inclusive)
    2: com.sun.tools.javac.code.Scope.getElementsByName: 0,03% (1 inclusive)
      3: com.sun.tools.javac.code.Scope$CompoundScope$2$1.nextIterator: 0,03% (1 inclusive)
  1: java.util.LinkedHashMap$Entry.<init>: 0,03% (1 inclusive)
    2: java.util.LinkedHashMap.createEntry: 0,03% (1 inclusive)
  1: grammar.Expression$Star.<init>: 0,03% (1 inclusive)
    2: grammar.GrammarDSL.star: 0,03% (1 inclusive)
  1: java.lang.String.matches: 0,03% (1 inclusive)
  1: com.sun.tools.javac.util.ForwardingDiagnosticFormatter.<init>: 0,03% (1 inclusive)
    2: com.sun.tools.javac.util.RichDiagnosticFormatter.<init>: 0,03% (1 inclusive)
  1: java.util.RegularEnumSet.add: 0,03% (1 inclusive)
    2: java.util.EnumSet.of: 0,03% (1 inclusive)
      3: com.sun.tools.javac.main.RecognizedOptions.<clinit>: 0,03% (1 inclusive)
  1: java.lang.StringBuffer.replace: 0,03% (1 inclusive)
    2: compiler.util.Quoter$DynamicQuoteMethod.dynamicQuote: 0,03% (1 inclusive)
  1: util.StringUtils.unescape: 0,03% (1 inclusive)
  1: com.sun.tools.javac.parser.JavacParser.variableDeclarators: 0,03% (1 inclusive)
    2: com.sun.tools.javac.parser.JavacParser.blockStatements: 0,03% (1 inclusive)
  1: java.security.PrivilegedActionException.<init>: 0,03% (1 inclusive)
  1: com.sun.tools.javac.code.Scope$CompoundScope$2$1.<init>: 0,03% (1 inclusive)
    2: com.sun.tools.javac.code.Scope$CompoundScope$2.iterator: 0,03% (1 inclusive)
  1: com.sun.tools.javac.comp.Attr.checkMethod: 0,03% (1 inclusive)
  1: com.sun.tools.javac.comp.Infer.instance: 0,03% (1 inclusive)
  1: compiler.MacroExpander.expandMacro: 0,03% (1 inclusive)
    2: compiler.MacroExpander.transform: 0,03% (1 inclusive)
  1: grammar.GrammarDSL.star: 0,03% (1 inclusive)
  1: com.sun.tools.javac.code.Symbol.isStatic: 0,03% (1 inclusive)
    2: com.sun.tools.javac.comp.MemberEnter$3.importFrom: 0,03% (1 inclusive)
      3: com.sun.tools.javac.comp.MemberEnter.importNamedStatic: 0,03% (1 inclusive)
        4: com.sun.tools.javac.comp.MemberEnter.visitImport: 0,03% (1 inclusive)
  1: com.sun.tools.javac.comp.MemberEnter$3.importFrom: 0,03% (1 inclusive)
    2: com.sun.tools.javac.comp.MemberEnter.importNamedStatic: 0,03% (1 inclusive)
      3: com.sun.tools.javac.comp.MemberEnter.visitImport: 0,03% (1 inclusive)
  1: java.util.concurrent.atomic.AtomicBoolean.<init>: 0,03% (1 inclusive)
    2: com.sun.tools.javac.api.JavacTaskImpl.<init>: 0,03% (1 inclusive)
      3: com.sun.tools.javac.api.JavacTaskImpl.<init>: 0,03% (1 inclusive)
  1: java.util.zip.ZipFile.access$1400: 0,03% (1 inclusive)
    2: java.util.zip.ZipFile$ZipFileInputStream.read: 0,03% (1 inclusive)
      3: sun.misc.Resource.getBytes: 0,03% (1 inclusive)
  1: com.sun.tools.javac.comp.Check$Validator.<init>: 0,03% (1 inclusive)
    2: com.sun.tools.javac.comp.Check.validate: 0,03% (1 inclusive)
  1: java.lang.Enum.getDeclaringClass: 0,03% (1 inclusive)
    2: java.util.EnumSet.of: 0,03% (1 inclusive)
      3: com.sun.tools.javac.jvm.ClassReader.<init>: 0,03% (1 inclusive)
        4: com.sun.tools.javac.jvm.ClassReader.instance: 0,03% (1 inclusive)
  1: grammar.java._A_Lexical.keyword: 0,03% (1 inclusive)
    2: grammar.java._A_Lexical.<init>: 0,03% (1 inclusive)
      3: grammar.java._B_Expressions.<init>: 0,03% (1 inclusive)
  1: java.net.FactoryURLClassLoader.loadClass: 0,03% (1 inclusive)
  1: java.lang.ref.PhantomReference.<init>: 0,03% (1 inclusive)
    2: sun.misc.Cleaner.<init>: 0,03% (1 inclusive)
  1: com.sun.tools.javac.code.Types.implementation: 0,03% (1 inclusive)
    2: com.sun.tools.javac.code.Symbol$MethodSymbol.implementation: 0,03% (1 inclusive)
      3: com.sun.tools.javac.comp.TransTypes.addBridgeIfNeeded: 0,03% (1 inclusive)
        4: com.sun.tools.javac.comp.TransTypes.addBridges: 0,03% (1 inclusive)
  1: sun.launcher.LauncherHelper.checkAndLoadMain: 0,03% (1 inclusive)
  1: java.util.jar.JarFile.getInputStream: 0,03% (1 inclusive)
    2: sun.misc.URLClassPath$JarLoader$2.getInputStream: 0,03% (1 inclusive)
  1: com.sun.tools.javac.comp.Check.validate: 0,03% (1 inclusive)
  1: com.sun.tools.javac.parser.JavacParser.blockStatements: 0,03% (1 inclusive)
  1: com.sun.tools.javac.parser.JavacParser.variableDeclaratorRest: 0,03% (1 inclusive)
    2: com.sun.tools.javac.parser.JavacParser.variableDeclaratorsRest: 0,03% (1 inclusive)
      3: com.sun.tools.javac.parser.JavacParser.variableDeclarators: 0,03% (1 inclusive)
        4: com.sun.tools.javac.parser.JavacParser.blockStatements: 0,03% (1 inclusive)
  1: com.sun.tools.javac.main.JavacOption$Option.<init>: 0,03% (1 inclusive)
    2: com.sun.tools.javac.main.RecognizedOptions$17.<init>: 0,03% (1 inclusive)
      3: com.sun.tools.javac.main.RecognizedOptions.getAll: 0,03% (1 inclusive)
  1: driver.CompilationDriver.compileFile: 0,03% (1 inclusive)
  1: com.sun.tools.javac.code.Symbol$MethodSymbol.overrides: 0,03% (1 inclusive)
    2: com.sun.tools.javac.code.Types$ImplementationCache.implementationInternal: 0,03% (1 inclusive)
  1: sun.net.www.ParseUtil.<init>: 0,03% (1 inclusive)
    2: sun.net.www.protocol.jar.Handler.parseURL: 0,03% (1 inclusive)
      3: java.net.URL.<init>: 0,03% (1 inclusive)
  1: sun.net.www.protocol.jar.Handler.parseContextSpec: 0,03% (1 inclusive)
  1: com.sun.tools.javac.code.Types$8.visitType: 0,03% (1 inclusive)
    2: com.sun.tools.javac.code.Type.accept: 0,03% (1 inclusive)
      3: com.sun.tools.javac.code.Types$DefaultTypeVisitor.visit: 0,03% (1 inclusive)
  1: com.sun.tools.javac.jvm.Items.makeImmediateItem: 0,03% (1 inclusive)
  1: com.sun.tools.javac.code.Scope.dble: 0,03% (1 inclusive)
    2: com.sun.tools.javac.code.Scope.enter: 0,03% (1 inclusive)
      3: com.sun.tools.javac.code.Scope.enter: 0,03% (1 inclusive)
        4: com.sun.tools.javac.code.Scope.enter: 0,03% (1 inclusive)
  1: com.sun.tools.javac.code.Symtab.initType: 0,03% (1 inclusive)
  1: compiler.macros.LambdaMacro.expand: 0,03% (1 inclusive)
    2: compiler.Macro.expand: 0,03% (1 inclusive)
      3: compiler.MacroExpander.expandMacro: 0,03% (1 inclusive)
        4: compiler.MacroExpander.transform: 0,03% (1 inclusive)
  1: java.util.concurrent.ConcurrentHashMap$Segment.put: 0,03% (1 inclusive)
    2: java.util.concurrent.ConcurrentHashMap.putIfAbsent: 0,03% (1 inclusive)
  1: java.util.jar.JarFile.getManifestFromReference: 0,03% (1 inclusive)
    2: java.util.jar.JarFile.getManifest: 0,03% (1 inclusive)
      3: sun.misc.URLClassPath$JarLoader$2.getManifest: 0,03% (1 inclusive)
        4: java.net.URLClassLoader.defineClass: 0,03% (1 inclusive)
  1: java.io.File.getCanonicalPath: 0,03% (1 inclusive)
    2: com.sun.tools.javac.file.JavacFileManager.caseMapCheck: 0,03% (1 inclusive)
  1: com.sun.tools.javac.main.RecognizedOptions.getXLintChoices: 0,03% (1 inclusive)
    2: com.sun.tools.javac.main.RecognizedOptions.getAll: 0,03% (1 inclusive)
      3: com.sun.tools.javac.main.RecognizedOptions.getOptions: 0,03% (1 inclusive)
  1: java.util.regex.Pattern.charPropertyNodeFor: 0,03% (1 inclusive)
    2: java.util.regex.Pattern.family: 0,03% (1 inclusive)
      3: java.util.regex.Pattern.sequence: 0,03% (1 inclusive)
  1: java.util.AbstractSet.<init>: 0,03% (1 inclusive)
    2: java.util.EnumSet.<init>: 0,03% (1 inclusive)
  1: java.util.concurrent.locks.AbstractQueuedSynchronizer.<init>: 0,03% (1 inclusive)
    2: java.util.concurrent.locks.ReentrantLock$Sync.<init>: 0,03% (1 inclusive)
  1: driver.CompilationDriver.dumpAndOrLoadClass: 0,03% (1 inclusive)
  1: com.sun.demo.jvmti.hprof.Tracker.ObjectInit: 0,03% (1 inclusive)
    2: java.lang.Object.<init>: 0,03% (1 inclusive)
      3: java.lang.AbstractStringBuilder.<init>: 0,03% (1 inclusive)
  1: com.sun.tools.javac.parser.EndPosParser.parseCompilationUnit: 0,03% (1 inclusive)
  1: java.util.EnumSet.<init>: 0,03% (1 inclusive)
  1: trees.MatchSpec.rule: 0,03% (1 inclusive)
  1: java.util.concurrent.locks.ReentrantLock$Sync.<init>: 0,03% (1 inclusive)
  1: java.util.regex.Matcher.<init>: 0,03% (1 inclusive)
    2: java.util.regex.Pattern.matcher: 0,03% (1 inclusive)
      3: java.util.regex.Pattern.matches: 0,03% (1 inclusive)
        4: java.lang.String.matches: 0,03% (1 inclusive)
  1: com.sun.tools.javac.parser.JavacParser.variableDeclaratorsRest: 0,03% (1 inclusive)
    2: com.sun.tools.javac.parser.JavacParser.variableDeclarators: 0,03% (1 inclusive)
      3: com.sun.tools.javac.parser.JavacParser.blockStatements: 0,03% (1 inclusive)
  1: com.sun.tools.javac.code.Types$DefaultTypeVisitor.visit: 0,03% (1 inclusive)
  1: com.sun.tools.javac.code.Scope$ImportScope.makeEntry: 0,03% (1 inclusive)
  1: com.sun.tools.javac.code.Scope$ImportScope$ImportEntry.<init>: 0,03% (1 inclusive)
    2: com.sun.tools.javac.code.Scope$ImportScope.makeEntry: 0,03% (1 inclusive)
  1: java.io.File.getParent: 0,03% (1 inclusive)
  1: com.sun.tools.javac.jvm.Code.markStatBegin: 0,03% (1 inclusive)
    2: com.sun.tools.javac.jvm.Code.emitop: 0,03% (1 inclusive)
      3: com.sun.tools.javac.jvm.Code.emitop0: 0,03% (1 inclusive)
  1: com.sun.tools.javac.code.Symtab.enterBinop: 0,03% (1 inclusive)
  1: java.util.ComparableTimSort.binarySort: 0,03% (1 inclusive)
    2: java.util.ComparableTimSort.sort: 0,03% (1 inclusive)
      3: java.util.ComparableTimSort.sort: 0,03% (1 inclusive)
  1: java.util.regex.Pattern.family: 0,03% (1 inclusive)
    2: java.util.regex.Pattern.sequence: 0,03% (1 inclusive)
  1: grammar.java._D_Requires.<init>: 0,03% (1 inclusive)
  1: java.lang.ClassLoader.getClassLoadingLock: 0,03% (1 inclusive)
    2: java.lang.ClassLoader.loadClass: 0,03% (1 inclusive)
      3: sun.misc.Launcher$AppClassLoader.loadClass: 0,03% (1 inclusive)
  1: com.sun.tools.javac.code.Type.accept: 0,03% (1 inclusive)
    2: com.sun.tools.javac.code.Types$DefaultTypeVisitor.visit: 0,03% (1 inclusive)
  1: java.lang.ref.WeakReference.<init>: 0,03% (1 inclusive)
    2: java.util.WeakHashMap$Entry.<init>: 0,03% (1 inclusive)
  1: com.sun.tools.javac.tree.TreeMaker$AnnotationBuilder.<init>: 0,03% (1 inclusive)
    2: com.sun.tools.javac.tree.TreeMaker.<init>: 0,03% (1 inclusive)
      3: com.sun.tools.javac.tree.TreeMaker.forToplevel: 0,03% (1 inclusive)
  1: com.sun.tools.javac.comp.Check$CycleChecker.visitClassDef: 0,03% (1 inclusive)
  1: trees.MatchSpec$PositionSpec.<init>: 0,03% (1 inclusive)
    2: trees.MatchSpec.at: 0,03% (1 inclusive)
  1: com.sun.tools.javac.comp.Check.<init>: 0,03% (1 inclusive)
    2: com.sun.tools.javac.comp.Check.instance: 0,03% (1 inclusive)
  1: driver.DependencyResolver.<init>: 0,03% (1 inclusive)
    2: driver.DependencyResolver.resolve: 0,03% (1 inclusive)
  1: com.sun.tools.javac.comp.Infer$3.<init>: 0,03% (1 inclusive)
    2: com.sun.tools.javac.comp.Infer.<init>: 0,03% (1 inclusive)
      3: com.sun.tools.javac.comp.Infer.instance: 0,03% (1 inclusive)
  1: java.util.zip.ZipFile.read: 0,03% (1 inclusive)
    2: java.util.zip.ZipFile.access$1400: 0,03% (1 inclusive)
      3: java.util.zip.ZipFile$ZipFileInputStream.read: 0,03% (1 inclusive)
        4: sun.misc.Resource.getBytes: 0,03% (1 inclusive)
  1: java.lang.System.nanoTime: 0,03% (1 inclusive)
    2: java.net.URLClassLoader.defineClass: 0,03% (1 inclusive)
      3: java.net.URLClassLoader.access$100: 0,03% (1 inclusive)
        4: java.net.URLClassLoader$1.run: 0,03% (1 inclusive)
  1: com.sun.tools.javac.jvm.Items$ImmediateItem.<init>: 0,03% (1 inclusive)
    2: com.sun.tools.javac.jvm.Items.makeImmediateItem: 0,03% (1 inclusive)
  1: java.lang.reflect.Array.newInstance: 0,03% (1 inclusive)
    2: java.util.Arrays.copyOf: 0,03% (1 inclusive)
      3: java.util.ArrayList.toArray: 0,03% (1 inclusive)
  1: com.sun.tools.javac.file.JavacFileManager.caseMapCheck: 0,03% (1 inclusive)
  1: com.sun.tools.javac.file.FSInfo.exists: 0,03% (1 inclusive)
    2: com.sun.tools.javac.file.Paths$Path.addFile: 0,03% (1 inclusive)
  1: com.sun.tools.javac.util.Position.makeLineMap: 0,03% (1 inclusive)
    2: com.sun.tools.javac.parser.Scanner.getLineMap: 0,03% (1 inclusive)
      3: com.sun.tools.javac.parser.JavacParser.parseCompilationUnit: 0,03% (1 inclusive)
        4: com.sun.tools.javac.parser.EndPosParser.parseCompilationUnit: 0,03% (1 inclusive)
  1: com.sun.tools.javac.parser.JavacParser.formalParameters: 0,03% (1 inclusive)
  1: com.sun.tools.javac.tree.JCTree$JCLiteral.<init>: 0,03% (1 inclusive)
  1: grammar.Expression$Plus.accept: 0,03% (1 inclusive)
  1: parser.Matcher.visit: 0,03% (1 inclusive)
  1: java.io.BufferedOutputStream.<init>: 0,03% (1 inclusive)
    2: compiler.java.CompiledClass.dump: 0,03% (1 inclusive)
      3: driver.CompilationDriver.dumpAndOrLoadClass: 0,03% (1 inclusive)
        4: driver.CompilationDriver.dumpAndOrLoadClass: 0,03% (1 inclusive)
  1: java.util.jar.JarFile.getManifest: 0,03% (1 inclusive)
    2: sun.misc.URLClassPath$JarLoader$2.getManifest: 0,03% (1 inclusive)
      3: java.net.URLClassLoader.defineClass: 0,03% (1 inclusive)
  1: com.sun.tools.javac.comp.TransTypes.addBridgeIfNeeded: 0,03% (1 inclusive)
    2: com.sun.tools.javac.comp.TransTypes.addBridges: 0,03% (1 inclusive)
  1: grammar.java._A_Lexical.<init>: 0,03% (1 inclusive)
    2: grammar.java._B_Expressions.<init>: 0,03% (1 inclusive)
  1: java.util.regex.Pattern.sequence: 0,03% (1 inclusive)
  1: com.sun.tools.javac.file.Paths$Path.addFile: 0,03% (1 inclusive)
  1: com.sun.tools.javac.code.Lint$LintCategory.<clinit>: 0,03% (1 inclusive)
    2: com.sun.tools.javac.main.RecognizedOptions.getXLintChoices: 0,03% (1 inclusive)
      3: com.sun.tools.javac.main.RecognizedOptions.getAll: 0,03% (1 inclusive)
        4: com.sun.tools.javac.main.RecognizedOptions.getOptions: 0,03% (1 inclusive)
  1: com.sun.tools.javac.parser.ParserFactory.<init>: 0,03% (1 inclusive)
    2: com.sun.tools.javac.parser.ParserFactory.instance: 0,03% (1 inclusive)
      3: com.sun.tools.javac.main.JavaCompiler.<init>: 0,03% (1 inclusive)
        4: com.sun.tools.javac.main.JavaCompiler.instance: 0,03% (1 inclusive)
  1: trees.MatchSpec.at: 0,03% (1 inclusive)
  1: com.sun.tools.javac.jvm.Items$Item.<init>: 0,03% (1 inclusive)
    2: com.sun.tools.javac.jvm.Items$ImmediateItem.<init>: 0,03% (1 inclusive)
      3: com.sun.tools.javac.jvm.Items.makeImmediateItem: 0,03% (1 inclusive)
  1: source.SourceStream.get: 0,03% (1 inclusive)
    2: parser.Matcher.visit: 0,03% (1 inclusive)
  1: com.sun.tools.javac.comp.MemberEnter.importNamedStatic: 0,03% (1 inclusive)
    2: com.sun.tools.javac.comp.MemberEnter.visitImport: 0,03% (1 inclusive)
  1: grammar.java._C_Statements.<init>: 0,03% (1 inclusive)
    2: grammar.java._D_Requires.<init>: 0,03% (1 inclusive)
  1: java.util.HashMap.resize: 0,03% (1 inclusive)
    2: java.util.HashMap.addEntry: 0,03% (1 inclusive)
      3: java.util.HashMap.put: 0,03% (1 inclusive)
  1: java.io.Win32FileSystem.canonicalize: 0,03% (1 inclusive)
    2: java.io.File.getCanonicalPath: 0,03% (1 inclusive)
      3: com.sun.tools.javac.file.JavacFileManager.caseMapCheck: 0,03% (1 inclusive)
  1: com.sun.tools.javac.comp.Enter.instance: 0,03% (1 inclusive)
    2: com.sun.tools.javac.comp.Check.<init>: 0,03% (1 inclusive)
      3: com.sun.tools.javac.comp.Check.instance: 0,03% (1 inclusive)
  1: com.sun.tools.javac.code.Symbol$ClassSymbol.erasure: 0,03% (1 inclusive)
  1: com.sun.tools.javac.jvm.ClassReader$6.read: 0,03% (1 inclusive)
    2: com.sun.tools.javac.jvm.ClassReader.readAttrs: 0,03% (1 inclusive)
  1: util.StringUtils.escape: 0,03% (1 inclusive)
  1: driver.DependencyResolver.resolve: 0,03% (1 inclusive)
  1: com.sun.tools.javac.jvm.Code.emitStackMapFrame: 0,03% (1 inclusive)
    2: com.sun.tools.javac.jvm.Code.emitStackMap: 0,03% (1 inclusive)
      3: com.sun.tools.javac.jvm.Code.emitop: 0,03% (1 inclusive)
        4: com.sun.tools.javac.jvm.Code.emitop0: 0,03% (1 inclusive)
  1: grammar.Expression$Not.accept: 0,03% (1 inclusive)
  1: sun.launcher.LauncherHelper.getMainMethod: 0,03% (1 inclusive)
    2: sun.launcher.LauncherHelper.checkAndLoadMain: 0,03% (1 inclusive)
  1: java.util.jar.Attributes.read: 0,03% (1 inclusive)
    2: java.util.jar.Manifest.read: 0,03% (1 inclusive)
  1: com.sun.tools.javac.jvm.ClassReader$11.read: 0,03% (1 inclusive)
  1: grammar.Grammar.<init>: 0,03% (1 inclusive)
    2: driver.Context.<clinit>: 0,03% (1 inclusive)
      3: driver.DependencyResolver.<init>: 0,03% (1 inclusive)
        4: driver.DependencyResolver.resolve: 0,03% (1 inclusive)
  1: java.util.regex.Pattern.matches: 0,03% (1 inclusive)
    2: java.lang.String.matches: 0,03% (1 inclusive)
  1: java.util.regex.Pattern.matcher: 0,03% (1 inclusive)
    2: java.util.regex.Pattern.matches: 0,03% (1 inclusive)
      3: java.lang.String.matches: 0,03% (1 inclusive)
  1: java.util.LinkedHashMap.<init>: 0,03% (1 inclusive)
    2: java.util.ServiceLoader.<init>: 0,03% (1 inclusive)
      3: java.util.ServiceLoader.load: 0,03% (1 inclusive)
  1: com.sun.tools.javac.tree.TreeMaker.forToplevel: 0,03% (1 inclusive)
  1: com.sun.tools.javac.parser.ParserFactory.instance: 0,03% (1 inclusive)
    2: com.sun.tools.javac.main.JavaCompiler.<init>: 0,03% (1 inclusive)
      3: com.sun.tools.javac.main.JavaCompiler.instance: 0,03% (1 inclusive)
  1: com.sun.tools.javac.code.Symtab.instance: 0,03% (1 inclusive)
    2: com.sun.tools.javac.jvm.ClassReader.<init>: 0,03% (1 inclusive)
      3: com.sun.tools.javac.jvm.ClassReader.instance: 0,03% (1 inclusive)
  1: com.sun.tools.javac.main.RecognizedOptions.getJavaCompilerOptions: 0,03% (1 inclusive)
    2: com.sun.tools.javac.main.Main.<init>: 0,03% (1 inclusive)
  1: grammar.GrammarDSL.str: 0,03% (1 inclusive)
  1: java.util.jar.JavaUtilJarAccessImpl.jarFileHasClassPathAttribute: 0,03% (1 inclusive)
    2: sun.misc.URLClassPath$JarLoader.getClassPath: 0,03% (1 inclusive)
      3: sun.misc.URLClassPath.getLoader: 0,03% (1 inclusive)
  1: java.lang.Class.newInstance0: 0,03% (1 inclusive)
  1: java.util.HashMap.transfer: 0,03% (1 inclusive)
    2: java.util.HashMap.resize: 0,03% (1 inclusive)
      3: java.util.HashMap.addEntry: 0,03% (1 inclusive)
        4: java.util.HashMap.put: 0,03% (1 inclusive)
  1: com.sun.tools.javac.code.Scope$CompoundScope$2.iterator: 0,03% (1 inclusive)
  1: compiler.util.Quoter$DynamicQuoteMethod.dynamicQuote: 0,03% (1 inclusive)
  1: compiler.java.StringJavaFileObject.<init>: 0,03% (1 inclusive)
    2: driver.CompilationDriver.compileFile: 0,03% (1 inclusive)
  1: java.util.Collections.indexedBinarySearch: 0,03% (1 inclusive)
    2: java.util.Collections.binarySearch: 0,03% (1 inclusive)
      3: com.sun.tools.javac.file.ZipFileIndex$DirectoryEntry.getEntry: 0,03% (1 inclusive)
        4: com.sun.tools.javac.file.ZipFileIndex$DirectoryEntry.access$100: 0,03% (1 inclusive)
  1: com.sun.tools.javac.file.RegularFileObject.openInputStream: 0,03% (1 inclusive)
    2: com.sun.tools.javac.jvm.ClassReader.fillIn: 0,03% (1 inclusive)
  1: com.sun.tools.javac.util.Warner.<init>: 0,03% (1 inclusive)
    2: com.sun.tools.javac.comp.Check$ConversionWarner.<init>: 0,03% (1 inclusive)
      3: com.sun.tools.javac.comp.Check.convertWarner: 0,03% (1 inclusive)
        4: com.sun.tools.javac.comp.Attr.checkMethod: 0,03% (1 inclusive)
  1: com.sun.tools.javac.comp.Check.instance: 0,03% (1 inclusive)
  1: java.io.File.list: 0,03% (1 inclusive)
    2: java.io.File.listFiles: 0,03% (1 inclusive)
      3: com.sun.tools.javac.file.JavacFileManager.listDirectory: 0,03% (1 inclusive)
  1: sun.misc.URLClassPath$JarLoader.getClassPath: 0,03% (1 inclusive)
    2: sun.misc.URLClassPath.getLoader: 0,03% (1 inclusive)
  1: com.sun.tools.javac.parser.JavacParser.formalParameter: 0,03% (1 inclusive)
    2: com.sun.tools.javac.parser.JavacParser.formalParameters: 0,03% (1 inclusive)
  1: com.sun.tools.javac.util.Position$LineMapImpl.getLineNumber: 0,03% (1 inclusive)
    2: com.sun.tools.javac.jvm.Code.markStatBegin: 0,03% (1 inclusive)
      3: com.sun.tools.javac.jvm.Code.emitop: 0,03% (1 inclusive)
        4: com.sun.tools.javac.jvm.Code.emitop0: 0,03% (1 inclusive)
  1: java.util.AbstractMap.<init>: 0,03% (1 inclusive)
    2: java.util.HashMap.<init>: 0,03% (1 inclusive)
      3: com.sun.tools.javac.code.Types.<init>: 0,03% (1 inclusive)
  1: compiler.Macro.expand: 0,03% (1 inclusive)
    2: compiler.MacroExpander.expandMacro: 0,03% (1 inclusive)
      3: compiler.MacroExpander.transform: 0,03% (1 inclusive)
  1: com.sun.tools.javac.comp.MemberEnter.visitImport: 0,03% (1 inclusive)
  1: com.sun.tools.javac.comp.Resolve.checkRawArgumentsAcceptable: 0,03% (1 inclusive)
    2: com.sun.tools.javac.comp.Resolve.rawInstantiate: 0,03% (1 inclusive)
      3: com.sun.tools.javac.comp.Resolve.selectBest: 0,03% (1 inclusive)
        4: com.sun.tools.javac.comp.Resolve.findMethod: 0,03% (1 inclusive)
  1: com.sun.tools.javac.main.RecognizedOptions.<clinit>: 0,03% (1 inclusive)
  1: com.sun.tools.javac.code.Scope.<init>: 0,03% (1 inclusive)
    2: com.sun.tools.javac.jvm.ClassReader.<init>: 0,03% (1 inclusive)
      3: com.sun.tools.javac.jvm.ClassReader.instance: 0,03% (1 inclusive)
        4: com.sun.tools.javac.main.JavaCompiler.<init>: 0,03% (1 inclusive)
  1: java.io.WinNTFileSystem.list: 0,03% (1 inclusive)
    2: java.io.File.list: 0,03% (1 inclusive)
      3: java.io.File.listFiles: 0,03% (1 inclusive)
        4: com.sun.tools.javac.file.JavacFileManager.listDirectory: 0,03% (1 inclusive)
  1: com.sun.tools.javac.util.Name.getBytes: 0,03% (1 inclusive)
    2: com.sun.tools.javac.util.Name.append: 0,03% (1 inclusive)
      3: com.sun.tools.javac.code.Symbol$TypeSymbol.formFlatName: 0,03% (1 inclusive)
  1: com.sun.tools.javac.jvm.ClassReader.readAttrs: 0,03% (1 inclusive)
  1: com.sun.tools.javac.comp.TransTypes$1.accepts: 0,03% (1 inclusive)
    2: com.sun.tools.javac.code.Scope.lookup: 0,03% (1 inclusive)
      3: com.sun.tools.javac.code.Types$ImplementationCache.implementationInternal: 0,03% (1 inclusive)
  1: java.util.Collections.binarySearch: 0,03% (1 inclusive)
    2: com.sun.tools.javac.file.ZipFileIndex$DirectoryEntry.getEntry: 0,03% (1 inclusive)
      3: com.sun.tools.javac.file.ZipFileIndex$DirectoryEntry.access$100: 0,03% (1 inclusive)
  1: com.sun.tools.javac.tree.TreeScanner.scan: 0,03% (1 inclusive)
    2: com.sun.tools.javac.comp.Check$CycleChecker.checkClass: 0,03% (1 inclusive)
      3: com.sun.tools.javac.comp.Check$CycleChecker.visitClassDef: 0,03% (1 inclusive)
  1: java.io.WinNTFileSystem.createFileExclusively: 0,03% (1 inclusive)
    2: java.io.File.createNewFile: 0,03% (1 inclusive)
      3: util.FileUtils.create: 0,03% (1 inclusive)
        4: util.FileUtils.write: 0,03% (1 inclusive)
  1: java.util.zip.ZipFile$ZipFileInputStream.read: 0,03% (1 inclusive)
    2: sun.misc.Resource.getBytes: 0,03% (1 inclusive)
  1: com.sun.tools.javac.code.Types.isSubSignature: 0,03% (1 inclusive)
    2: com.sun.tools.javac.code.Symbol$MethodSymbol.overrides: 0,03% (1 inclusive)
      3: com.sun.tools.javac.code.Types$ImplementationCache.implementationInternal: 0,03% (1 inclusive)
  1: com.sun.tools.javac.file.Paths.getPathEntries: 0,03% (1 inclusive)
  1: com.sun.tools.javac.util.ForwardingDiagnosticFormatter$ForwardingConfiguration.<init>: 0,03% (1 inclusive)
    2: com.sun.tools.javac.util.ForwardingDiagnosticFormatter.<init>: 0,03% (1 inclusive)
      3: com.sun.tools.javac.util.RichDiagnosticFormatter.<init>: 0,03% (1 inclusive)
  1: java.lang.String.split: 0,03% (1 inclusive)
  1: com.sun.tools.javac.code.Symtab.<init>: 0,03% (1 inclusive)
    2: com.sun.tools.javac.code.Symtab.instance: 0,03% (1 inclusive)
      3: com.sun.tools.javac.jvm.ClassReader.<init>: 0,03% (1 inclusive)
        4: com.sun.tools.javac.jvm.ClassReader.instance: 0,03% (1 inclusive)
  1: sun.misc.URLClassPath.getLoader: 0,03% (1 inclusive)
  1: grammar.GrammarDSL.rule_seq: 0,03% (1 inclusive)
    2: grammar.java._B_Expressions.<init>: 0,03% (1 inclusive)
      3: grammar.java._C_Statements.<init>: 0,03% (1 inclusive)
        4: grammar.java._D_Requires.<init>: 0,03% (1 inclusive)
  1: java.lang.Thread.currentThread: 0,03% (1 inclusive)
    2: com.sun.demo.jvmti.hprof.Tracker.ObjectInit: 0,03% (1 inclusive)
      3: java.lang.Object.<init>: 0,03% (1 inclusive)
        4: java.lang.AbstractStringBuilder.<init>: 0,03% (1 inclusive)

Method Times by Line Number (times exclusive): 3076 ticks
  1: java.lang.Object.<init>: 71,23% (2191 exclusive)
    2: (Object.java:37): 71,23% (2191 exclusive)
  1: java.util.ArrayList.<init>: 13,62% (419 exclusive)
    2: (ArrayList.java:132): 13,62% (419 exclusive)
    2: (ArrayList.java:128): 0% (0 exclusive)
    2: (ArrayList.java:139): 0% (0 exclusive)
    2: (ArrayList.java:150): 0% (0 exclusive)
  1: java.lang.Character.toChars: 6,11% (188 exclusive)
    2: (Character.java:4976): 6,11% (188 exclusive)
  1: java.util.Arrays.copyOf: 1,59% (49 exclusive)
    2: (Arrays.java:2367): 0,68% (21 exclusive)
    2: (Arrays.java:2245): 0,62% (19 exclusive)
    2: (Arrays.java:2271): 0,29% (9 exclusive)
    2: (Arrays.java:2219): 0% (0 exclusive)
  1: java.util.Arrays.copyOfRange: 1,17% (36 exclusive)
    2: (Arrays.java:2694): 1,17% (36 exclusive)
  1: java.lang.AbstractStringBuilder.<init>: 0,75% (23 exclusive)
    2: (AbstractStringBuilder.java:64): 0,75% (23 exclusive)
    2: (AbstractStringBuilder.java:63): 0% (0 exclusive)
  1: parser.LimitedMemo$Memoed.<init>: 0,52% (16 exclusive)
    2: (LimitedMemo.java:33): 0,29% (9 exclusive)
    2: (LimitedMemo.java:32): 0,23% (7 exclusive)
    2: (LimitedMemo.java:30): 0% (0 exclusive)
  1: java.io.WinNTFileSystem.getBooleanAttributes: 0,46% (14 exclusive)
    2: (WinNTFileSystem.java:Unknown line): 0,46% (14 exclusive)
  1: java.lang.StringCoding$StringDecoder.decode: 0,42% (13 exclusive)
    2: (StringCoding.java:149): 0,42% (13 exclusive)
  1: java.lang.ClassLoader.defineClass1: 0,36% (11 exclusive)
    2: (ClassLoader.java:Unknown line): 0,36% (11 exclusive)
  1: java.lang.String.replace: 0,29% (9 exclusive)
    2: (String.java:2069): 0,29% (9 exclusive)
    2: (String.java:2078): 0% (0 exclusive)
  1: java.lang.String.toCharArray: 0,26% (8 exclusive)
    2: (String.java:2801): 0,26% (8 exclusive)
  1: com.sun.tools.javac.util.Name.append: 0,23% (7 exclusive)
    2: (Name.java:88): 0,23% (7 exclusive)
    2: (Name.java:89): 0% (0 exclusive)
  1: java.io.FileOutputStream.open: 0,16% (5 exclusive)
    2: (FileOutputStream.java:Unknown line): 0,16% (5 exclusive)
  1: java.lang.System.arraycopy: 0,1% (3 exclusive)
    2: (System.java:Unknown line): 0,1% (3 exclusive)
  1: java.lang.String.toLowerCase: 0,1% (3 exclusive)
    2: (String.java:2486): 0,1% (3 exclusive)
  1: java.io.FileInputStream.open: 0,1% (3 exclusive)
    2: (FileInputStream.java:Unknown line): 0,1% (3 exclusive)
  1: java.io.Win32FileSystem.resolve: 0,1% (3 exclusive)
    2: (Win32FileSystem.java:254): 0,1% (3 exclusive)
    2: (Win32FileSystem.java:259): 0% (0 exclusive)
  1: java.lang.ClassLoader.findBootstrapClass: 0,07% (2 exclusive)
    2: (ClassLoader.java:Unknown line): 0,07% (2 exclusive)
  1: sun.misc.Unsafe.compareAndSwapInt: 0,07% (2 exclusive)
    2: (Unsafe.java:Unknown line): 0,07% (2 exclusive)
  1: java.lang.Class.getComponentType: 0,07% (2 exclusive)
    2: (Class.java:Unknown line): 0,07% (2 exclusive)
  1: compiler.util.MatchCreator.new_match: 0,07% (2 exclusive)
    2: (MatchCreator.java:54): 0,07% (2 exclusive)
  1: com.sun.tools.javac.main.JavaCompiler.<init>: 0,07% (2 exclusive)
    2: (JavaCompiler.java:353): 0,03% (1 exclusive)
    2: (JavaCompiler.java:355): 0,03% (1 exclusive)
    2: (JavaCompiler.java:331): 0% (0 exclusive)
    2: (JavaCompiler.java:338): 0% (0 exclusive)
  1: com.sun.tools.javac.util.SharedNameTable.<init>: 0,07% (2 exclusive)
    2: (SharedNameTable.java:84): 0,03% (1 exclusive)
    2: (SharedNameTable.java:85): 0,03% (1 exclusive)
    2: (SharedNameTable.java:90): 0% (0 exclusive)
  1: sun.net.www.ParseUtil.encodePath: 0,07% (2 exclusive)
    2: (ParseUtil.java:105): 0,07% (2 exclusive)
    2: (ParseUtil.java:146): 0% (0 exclusive)
  1: java.util.zip.ZipCoder.getBytes: 0,07% (2 exclusive)
    2: (ZipCoder.java:80): 0,07% (2 exclusive)
    2: (ZipCoder.java:78): 0% (0 exclusive)
    2: (ZipCoder.java:89): 0% (0 exclusive)
  1: com.sun.tools.javac.jvm.ClassReader.sigToType: 0,03% (1 exclusive)
    2: (ClassReader.java:678): 0,03% (1 exclusive)
    2: (ClassReader.java:589): 0% (0 exclusive)
    2: (ClassReader.java:663): 0% (0 exclusive)
    2: (ClassReader.java:673): 0% (0 exclusive)
  1: trees.MatchFinder$Finder.find: 0,03% (1 exclusive)
    2: (MatchFinder.java:149): 0,03% (1 exclusive)
  1: java.lang.Class.getDeclaredConstructors0: 0,03% (1 exclusive)
    2: (Class.java:Unknown line): 0,03% (1 exclusive)
  1: java.io.FileOutputStream.close0: 0,03% (1 exclusive)
    2: (FileOutputStream.java:Unknown line): 0,03% (1 exclusive)
  1: java.util.concurrent.atomic.AtomicBoolean.<clinit>: 0,03% (1 exclusive)
    2: (AtomicBoolean.java:58): 0,03% (1 exclusive)
  1: java.io.WinNTFileSystem.canonicalize0: 0,03% (1 exclusive)
    2: (WinNTFileSystem.java:Unknown line): 0,03% (1 exclusive)
  1: java.util.jar.JarFile.hasClassPathAttribute: 0,03% (1 exclusive)
    2: (JarFile.java:483): 0,03% (1 exclusive)
  1: com.sun.tools.javac.tree.TreeMaker.VarDef: 0,03% (1 exclusive)
    2: (TreeMaker.java:186): 0,03% (1 exclusive)
  1: com.sun.tools.javac.comp.Enter.<init>: 0,03% (1 exclusive)
    2: (Enter.java:126): 0,03% (1 exclusive)
  1: sun.misc.Unsafe.putOrderedObject: 0,03% (1 exclusive)
    2: (Unsafe.java:Unknown line): 0,03% (1 exclusive)
  1: com.sun.tools.javac.main.RecognizedOptions.getAll: 0,03% (1 exclusive)
    2: (RecognizedOptions.java:257): 0,03% (1 exclusive)
  1: java.lang.reflect.Array.newArray: 0,03% (1 exclusive)
    2: (Array.java:Unknown line): 0,03% (1 exclusive)
  1: java.util.regex.Pattern$CharPropertyNames.<clinit>: 0,03% (1 exclusive)
    2: (Pattern.java:5595): 0,03% (1 exclusive)
  1: java.lang.Throwable.fillInStackTrace: 0,03% (1 exclusive)
    2: (Throwable.java:Unknown line): 0,03% (1 exclusive)
    2: (Throwable.java:782): 0% (0 exclusive)
  1: java.util.RegularEnumSet.add: 0,03% (1 exclusive)
    2: (RegularEnumSet.java:163): 0,03% (1 exclusive)
    2: (RegularEnumSet.java:36): 0% (0 exclusive)
  1: com.sun.tools.javac.jvm.ClassReader.enterClass: 0,03% (1 exclusive)
    2: (ClassReader.java:2073): 0,03% (1 exclusive)
    2: (ClassReader.java:2065): 0% (0 exclusive)
    2: (ClassReader.java:2076): 0% (0 exclusive)
  1: java.security.AccessController.doPrivileged: 0,03% (1 exclusive)
    2: (AccessController.java:Unknown line): 0,03% (1 exclusive)
  1: com.sun.tools.javac.code.Symbol.isStatic: 0,03% (1 exclusive)
    2: (Symbol.java:195): 0,03% (1 exclusive)
  1: java.lang.Enum.getDeclaringClass: 0,03% (1 exclusive)
    2: (Enum.java:199): 0,03% (1 exclusive)
  1: grammar.java._A_Lexical.keyword: 0,03% (1 exclusive)
    2: (_A_Lexical.java:61): 0,03% (1 exclusive)
    2: (_A_Lexical.java:68): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Types.implementation: 0,03% (1 exclusive)
    2: (Types.java:2096): 0,03% (1 exclusive)
  1: com.sun.tools.javac.parser.JavacParser.variableDeclaratorRest: 0,03% (1 exclusive)
    2: (JavacParser.java:2205): 0,03% (1 exclusive)
  1: com.sun.tools.javac.code.Types$8.visitType: 0,03% (1 exclusive)
    2: (Types.java:871): 0,03% (1 exclusive)
    2: (Types.java:846): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Scope.dble: 0,03% (1 exclusive)
    2: (Scope.java:172): 0,03% (1 exclusive)
  1: compiler.macros.LambdaMacro.expand: 0,03% (1 exclusive)
    2: (LambdaMacro.java:17): 0,03% (1 exclusive)
  1: java.util.jar.JarFile.getManifestFromReference: 0,03% (1 exclusive)
    2: (JarFile.java:181): 0,03% (1 exclusive)
  1: java.net.URLClassLoader$1.run: 0,03% (1 exclusive)
    2: (URLClassLoader.java:355): 0,03% (1 exclusive)
    2: (URLClassLoader.java:357): 0% (0 exclusive)
    2: (URLClassLoader.java:358): 0% (0 exclusive)
    2: (URLClassLoader.java:361): 0% (0 exclusive)
  1: java.util.regex.Matcher.<init>: 0,03% (1 exclusive)
    2: (Matcher.java:224): 0,03% (1 exclusive)
  1: java.lang.String.substring: 0,03% (1 exclusive)
    2: (String.java:1960): 0,03% (1 exclusive)
    2: (String.java:1925): 0% (0 exclusive)
  1: com.sun.tools.javac.jvm.ClassReader.<init>: 0,03% (1 exclusive)
    2: (ClassReader.java:264): 0,03% (1 exclusive)
    2: (ClassReader.java:263): 0% (0 exclusive)
    2: (ClassReader.java:291): 0% (0 exclusive)
    2: (ClassReader.java:925): 0% (0 exclusive)
  1: parser.ParseErrors.<init>: 0,03% (1 exclusive)
    2: (ParseErrors.java:81): 0,03% (1 exclusive)
    2: (ParseErrors.java:89): 0% (0 exclusive)
  1: java.util.zip.ZipFile.read: 0,03% (1 exclusive)
    2: (ZipFile.java:Unknown line): 0,03% (1 exclusive)
  1: java.lang.System.nanoTime: 0,03% (1 exclusive)
    2: (System.java:Unknown line): 0,03% (1 exclusive)
  1: com.sun.tools.javac.util.Position.makeLineMap: 0,03% (1 exclusive)
    2: (Position.java:75): 0,03% (1 exclusive)
  1: java.lang.String.concat: 0,03% (1 exclusive)
    2: (String.java:2021): 0,03% (1 exclusive)
    2: (String.java:2024): 0% (0 exclusive)
  1: java.io.BufferedOutputStream.<init>: 0,03% (1 exclusive)
    2: (BufferedOutputStream.java:76): 0,03% (1 exclusive)
  1: com.sun.tools.javac.code.Lint$LintCategory.<clinit>: 0,03% (1 exclusive)
    2: (Lint.java:175): 0,03% (1 exclusive)
  1: com.sun.tools.javac.parser.ParserFactory.<init>: 0,03% (1 exclusive)
    2: (ParserFactory.java:73): 0,03% (1 exclusive)
  1: java.lang.ClassLoader.loadClass: 0,03% (1 exclusive)
    2: (ClassLoader.java:435): 0,03% (1 exclusive)
    2: (ClassLoader.java:403): 0% (0 exclusive)
    2: (ClassLoader.java:410): 0% (0 exclusive)
    2: (ClassLoader.java:412): 0% (0 exclusive)
    2: (ClassLoader.java:423): 0% (0 exclusive)
  1: java.net.URLStreamHandler.parseURL: 0,03% (1 exclusive)
    2: (URLStreamHandler.java:249): 0,03% (1 exclusive)
    2: (URLStreamHandler.java:302): 0% (0 exclusive)
  1: com.sun.tools.javac.jvm.Code.emitStackMapFrame: 0,03% (1 exclusive)
    2: (Code.java:1308): 0,03% (1 exclusive)
  1: sun.launcher.LauncherHelper.getMainMethod: 0,03% (1 exclusive)
    2: (LauncherHelper.java:501): 0,03% (1 exclusive)
  1: grammar.Grammar.<init>: 0,03% (1 exclusive)
    2: (Grammar.java:23): 0,03% (1 exclusive)
  1: java.util.HashMap.transfer: 0,03% (1 exclusive)
    2: (HashMap.java:489): 0,03% (1 exclusive)
  1: java.util.Collections.indexedBinarySearch: 0,03% (1 exclusive)
    2: (Collections.java:268): 0,03% (1 exclusive)
  1: com.sun.tools.javac.util.Warner.<init>: 0,03% (1 exclusive)
    2: (Warner.java:46): 0,03% (1 exclusive)
  1: com.sun.tools.javac.util.Position$LineMapImpl.getLineNumber: 0,03% (1 exclusive)
    2: (Position.java:203): 0,03% (1 exclusive)
  1: com.sun.tools.javac.comp.Resolve.checkRawArgumentsAcceptable: 0,03% (1 exclusive)
    2: (Resolve.java:450): 0,03% (1 exclusive)
  1: com.sun.tools.javac.code.Scope.<init>: 0,03% (1 exclusive)
    2: (Scope.java:113): 0,03% (1 exclusive)
  1: java.io.WinNTFileSystem.list: 0,03% (1 exclusive)
    2: (WinNTFileSystem.java:Unknown line): 0,03% (1 exclusive)
  1: com.sun.tools.javac.comp.TransTypes$1.accepts: 0,03% (1 exclusive)
    2: (TransTypes.java:331): 0,03% (1 exclusive)
    2: (TransTypes.java:329): 0% (0 exclusive)
  1: com.sun.tools.javac.tree.TreeScanner.scan: 0,03% (1 exclusive)
    2: (TreeScanner.java:49): 0,03% (1 exclusive)
    2: (TreeScanner.java:57): 0% (0 exclusive)
  1: java.io.WinNTFileSystem.createFileExclusively: 0,03% (1 exclusive)
    2: (WinNTFileSystem.java:Unknown line): 0,03% (1 exclusive)
  1: com.sun.tools.javac.code.Types.isSubSignature: 0,03% (1 exclusive)
    2: (Types.java:2006): 0,03% (1 exclusive)
    2: (Types.java:2002): 0% (0 exclusive)
  1: java.util.HashMap.<init>: 0,03% (1 exclusive)
    2: (HashMap.java:226): 0,03% (1 exclusive)
    2: (HashMap.java:223): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Symtab.<init>: 0,03% (1 exclusive)
    2: (Symtab.java:452): 0,03% (1 exclusive)
  1: com.sun.tools.javac.comp.Resolve.rawInstantiate: 0,03% (1 exclusive)
    2: (Resolve.java:336): 0,03% (1 exclusive)
    2: (Resolve.java:395): 0% (0 exclusive)
  1: grammar.GrammarDSL.rule_seq: 0,03% (1 exclusive)
    2: (GrammarDSL.java:269): 0,03% (1 exclusive)
  1: java.lang.Thread.currentThread: 0,03% (1 exclusive)
    2: (Thread.java:Unknown line): 0,03% (1 exclusive)
  1: com.sun.tools.javac.parser.JavacParser.variableDeclaratorId: 0% (0 exclusive)
    2: (JavacParser.java:2224): 0% (0 exclusive)
  1: util.FileUtils.create: 0% (0 exclusive)
    2: (FileUtils.java:58): 0% (0 exclusive)
  1: com.sun.tools.javac.file.ZipFileIndex$Entry.getName: 0% (0 exclusive)
    2: (ZipFileIndex.java:1089): 0% (0 exclusive)
  1: com.sun.tools.javac.util.SharedNameTable.fromChars: 0% (0 exclusive)
    2: (SharedNameTable.java:112): 0% (0 exclusive)
  1: java.util.Collections$UnmodifiableRandomAccessList.<init>: 0% (0 exclusive)
    2: (Collections.java:1282): 0% (0 exclusive)
  1: java.util.ServiceLoader.load: 0% (0 exclusive)
    2: (ServiceLoader.java:466): 0% (0 exclusive)
  1: java.io.StringWriter.<init>: 0% (0 exclusive)
    2: (StringWriter.java:65): 0% (0 exclusive)
    2: (StringWriter.java:69): 0% (0 exclusive)
  1: grammar.Expression$StringLiteral.<init>: 0% (0 exclusive)
    2: (Expression.java:303): 0% (0 exclusive)
  1: java.net.URLClassLoader.access$100: 0% (0 exclusive)
    2: (URLClassLoader.java:71): 0% (0 exclusive)
  1: util.ArrayIterator.<init>: 0% (0 exclusive)
    2: (ArrayIterator.java:23): 0% (0 exclusive)
    2: (ArrayIterator.java:37): 0% (0 exclusive)
  1: com.sun.tools.javac.util.Options.isSet: 0% (0 exclusive)
    2: (Options.java:112): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Scope.getElementsByName: 0% (0 exclusive)
    2: (Scope.java:418): 0% (0 exclusive)
  1: com.sun.tools.javac.tree.JCTree$Visitor.<init>: 0% (0 exclusive)
    2: (JCTree.java:2187): 0% (0 exclusive)
  1: java.io.FilterOutputStream.close: 0% (0 exclusive)
    2: (FilterOutputStream.java:160): 0% (0 exclusive)
  1: java.lang.ClassLoader.checkCerts: 0% (0 exclusive)
    2: (ClassLoader.java:924): 0% (0 exclusive)
  1: parser.ParseData.succeed: 0% (0 exclusive)
    2: (ParseData.java:83): 0% (0 exclusive)
  1: com.sun.tools.javac.main.Main.<init>: 0% (0 exclusive)
    2: (Main.java:86): 0% (0 exclusive)
  1: com.sun.tools.javac.util.ListBuffer.<init>: 0% (0 exclusive)
    2: (ListBuffer.java:71): 0% (0 exclusive)
  1: com.sun.tools.javac.comp.TransTypes.addBridges: 0% (0 exclusive)
    2: (TransTypes.java:389): 0% (0 exclusive)
  1: java.io.FileOutputStream.<init>: 0% (0 exclusive)
    2: (FileOutputStream.java:165): 0% (0 exclusive)
    2: (FileOutputStream.java:212): 0% (0 exclusive)
  1: java.util.WeakHashMap$Entry.<init>: 0% (0 exclusive)
    2: (WeakHashMap.java:691): 0% (0 exclusive)
  1: driver.Context.<clinit>: 0% (0 exclusive)
    2: (Context.java:20): 0% (0 exclusive)
  1: sun.misc.URLClassPath$JarLoader$2.getInputStream: 0% (0 exclusive)
    2: (URLClassPath.java:752): 0% (0 exclusive)
  1: java.lang.StringBuffer.<init>: 0% (0 exclusive)
    2: (StringBuffer.java:108): 0% (0 exclusive)
  1: java.util.concurrent.ConcurrentHashMap.putIfAbsent: 0% (0 exclusive)
    2: (ConcurrentHashMap.java:1084): 0% (0 exclusive)
  1: java.util.AbstractList.iterator: 0% (0 exclusive)
    2: (AbstractList.java:288): 0% (0 exclusive)
  1: parser.Match.first: 0% (0 exclusive)
    2: (Match.java:253): 0% (0 exclusive)
  1: util.apache.CharSequenceTranslator.translate: 0% (0 exclusive)
    2: (CharSequenceTranslator.java:58): 0% (0 exclusive)
    2: (CharSequenceTranslator.java:59): 0% (0 exclusive)
    2: (CharSequenceTranslator.java:87): 0% (0 exclusive)
  1: sun.misc.Cleaner.<init>: 0% (0 exclusive)
    2: (Cleaner.java:115): 0% (0 exclusive)
  1: java.net.URLClassLoader.findClass: 0% (0 exclusive)
    2: (URLClassLoader.java:354): 0% (0 exclusive)
  1: java.net.URLClassLoader.isSealed: 0% (0 exclusive)
    2: (URLClassLoader.java:523): 0% (0 exclusive)
  1: com.sun.tools.javac.comp.Check$CycleChecker.checkClass: 0% (0 exclusive)
    2: (Check.java:1904): 0% (0 exclusive)
  1: com.sun.tools.javac.util.Names.createTable: 0% (0 exclusive)
    2: (Names.java:276): 0% (0 exclusive)
  1: java.util.concurrent.atomic.AtomicInteger.compareAndSet: 0% (0 exclusive)
    2: (AtomicInteger.java:135): 0% (0 exclusive)
  1: com.sun.tools.javac.file.FSInfo.isDirectory: 0% (0 exclusive)
    2: (FSInfo.java:58): 0% (0 exclusive)
  1: com.sun.tools.javac.jvm.ClassReader.fillIn: 0% (0 exclusive)
    2: (ClassReader.java:2207): 0% (0 exclusive)
  1: source.SourceComposed.strFromMatches: 0% (0 exclusive)
    2: (SourceComposed.java:23): 0% (0 exclusive)
    2: (SourceComposed.java:29): 0% (0 exclusive)
  1: java.util.ComparableTimSort.sort: 0% (0 exclusive)
    2: (ComparableTimSort.java:146): 0% (0 exclusive)
    2: (ComparableTimSort.java:176): 0% (0 exclusive)
  1: com.sun.tools.javac.util.Names.<init>: 0% (0 exclusive)
    2: (Names.java:157): 0% (0 exclusive)
    2: (Names.java:188): 0% (0 exclusive)
    2: (Names.java:201): 0% (0 exclusive)
  1: com.sun.tools.javac.comp.Check$ConversionWarner.<init>: 0% (0 exclusive)
    2: (Check.java:2757): 0% (0 exclusive)
  1: com.sun.tools.javac.file.RelativePath$RelativeDirectory.dirname: 0% (0 exclusive)
    2: (RelativePath.java:120): 0% (0 exclusive)
  1: sun.misc.URLClassPath$JarLoader$2.getManifest: 0% (0 exclusive)
    2: (URLClassPath.java:756): 0% (0 exclusive)
  1: java.lang.ref.SoftReference.<init>: 0% (0 exclusive)
    2: (SoftReference.java:85): 0% (0 exclusive)
  1: com.sun.tools.javac.jvm.Code.emitStackMap: 0% (0 exclusive)
    2: (Code.java:1215): 0% (0 exclusive)
  1: java.io.File.hashCode: 0% (0 exclusive)
    2: (File.java:1985): 0% (0 exclusive)
  1: java.net.URLClassLoader.defineClass: 0% (0 exclusive)
    2: (URLClassLoader.java:410): 0% (0 exclusive)
    2: (URLClassLoader.java:416): 0% (0 exclusive)
    2: (URLClassLoader.java:444): 0% (0 exclusive)
    2: (URLClassLoader.java:447): 0% (0 exclusive)
    2: (URLClassLoader.java:449): 0% (0 exclusive)
  1: compiler.QuotationMacroImplem.applyUnquotation: 0% (0 exclusive)
    2: (QuotationMacro.java:189): 0% (0 exclusive)
  1: com.sun.tools.javac.file.ZipFileIndex$Entry.<init>: 0% (0 exclusive)
    2: (ZipFileIndex.java:1083): 0% (0 exclusive)
  1: java.lang.Integer.valueOf: 0% (0 exclusive)
    2: (Integer.java:642): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Scope$CompoundScope$2$1.nextIterator: 0% (0 exclusive)
    2: (Scope.java:665): 0% (0 exclusive)
  1: java.util.jar.JarFile.getJarEntry: 0% (0 exclusive)
    2: (JarFile.java:208): 0% (0 exclusive)
  1: com.sun.tools.javac.comp.Check.convertWarner: 0% (0 exclusive)
    2: (Check.java:2791): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Scope.lookup: 0% (0 exclusive)
    2: (Scope.java:322): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Scope$Entry.<init>: 0% (0 exclusive)
    2: (Scope.java:477): 0% (0 exclusive)
  1: java.util.AbstractList.<init>: 0% (0 exclusive)
    2: (AbstractList.java:76): 0% (0 exclusive)
  1: com.sun.tools.javac.jvm.ClassReader.readMethod: 0% (0 exclusive)
    2: (ClassReader.java:1742): 0% (0 exclusive)
  1: com.sun.tools.javac.jvm.ClassReader.readType: 0% (0 exclusive)
    2: (ClassReader.java:533): 0% (0 exclusive)
  1: com.sun.tools.javac.util.Name$Table.fromString: 0% (0 exclusive)
    2: (Name.java:203): 0% (0 exclusive)
  1: com.sun.tools.javac.parser.JavacParser.parseCompilationUnit: 0% (0 exclusive)
    2: (JavacParser.java:2310): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Symbol$MethodSymbol.implementation: 0% (0 exclusive)
    2: (Symbol.java:1226): 0% (0 exclusive)
  1: trees.MatchIterator$NodeState.<init>: 0% (0 exclusive)
    2: (MatchIterator.java:31): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Types.<init>: 0% (0 exclusive)
    2: (Types.java:2655): 0% (0 exclusive)
  1: java.util.HashMap.get: 0% (0 exclusive)
    2: (HashMap.java:317): 0% (0 exclusive)
  1: com.sun.tools.javac.file.ZipFileIndexArchive$ZipFileIndexFileObject.inferBinaryName: 0% (0 exclusive)
    2: (ZipFileIndexArchive.java:212): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Symbol$OperatorSymbol.<init>: 0% (0 exclusive)
    2: (Symbol.java:1342): 0% (0 exclusive)
  1: java.io.FileOutputStream.close: 0% (0 exclusive)
    2: (FileOutputStream.java:362): 0% (0 exclusive)
  1: java.io.StringWriter.toString: 0% (0 exclusive)
    2: (StringWriter.java:210): 0% (0 exclusive)
  1: com.sun.tools.javac.tree.TreeInfo.<init>: 0% (0 exclusive)
    2: (TreeInfo.java:69): 0% (0 exclusive)
  1: com.sun.tools.javac.tree.TreeMaker.<init>: 0% (0 exclusive)
    2: (TreeMaker.java:762): 0% (0 exclusive)
  1: com.sun.tools.javac.parser.Scanner.getLineMap: 0% (0 exclusive)
    2: (Scanner.java:1137): 0% (0 exclusive)
  1: com.sun.tools.javac.tree.JCTree.<init>: 0% (0 exclusive)
    2: (JCTree.java:79): 0% (0 exclusive)
  1: java.io.Writer.<init>: 0% (0 exclusive)
    2: (Writer.java:75): 0% (0 exclusive)
  1: java.util.Arrays$ArrayList.<init>: 0% (0 exclusive)
    2: (Arrays.java:2840): 0% (0 exclusive)
  1: java.lang.ClassLoader.defineClass: 0% (0 exclusive)
    2: (ClassLoader.java:791): 0% (0 exclusive)
  1: com.sun.tools.javac.file.RelativePath$RelativeDirectory.<init>: 0% (0 exclusive)
    2: (RelativePath.java:104): 0% (0 exclusive)
  1: java.util.ServiceLoader.<init>: 0% (0 exclusive)
    2: (ServiceLoader.java:194): 0% (0 exclusive)
  1: java.lang.Class.getConstructor0: 0% (0 exclusive)
    2: (Class.java:2714): 0% (0 exclusive)
  1: java.lang.AbstractStringBuilder.append: 0% (0 exclusive)
    2: (AbstractStringBuilder.java:415): 0% (0 exclusive)
  1: java.lang.AbstractStringBuilder.replace: 0% (0 exclusive)
    2: (AbstractStringBuilder.java:801): 0% (0 exclusive)
  1: trees.MatchIterator.<init>: 0% (0 exclusive)
    2: (MatchIterator.java:65): 0% (0 exclusive)
  1: java.util.zip.ZipFile.getInputStream: 0% (0 exclusive)
    2: (ZipFile.java:349): 0% (0 exclusive)
  1: com.sun.tools.javac.tree.JCTree$JCExpression.<init>: 0% (0 exclusive)
    2: (JCTree.java:543): 0% (0 exclusive)
  1: com.sun.tools.javac.comp.Infer.<init>: 0% (0 exclusive)
    2: (Infer.java:245): 0% (0 exclusive)
  1: com.sun.tools.javac.file.JavacFileManager.listDirectory: 0% (0 exclusive)
    2: (JavacFileManager.java:286): 0% (0 exclusive)
    2: (JavacFileManager.java:295): 0% (0 exclusive)
    2: (JavacFileManager.java:305): 0% (0 exclusive)
  1: java.util.concurrent.ConcurrentHashMap.setEntryAt: 0% (0 exclusive)
    2: (ConcurrentHashMap.java:258): 0% (0 exclusive)
  1: com.sun.tools.javac.api.JavacTool.getTask: 0% (0 exclusive)
    2: (JavacTool.java:201): 0% (0 exclusive)
  1: java.util.concurrent.locks.AbstractOwnableSynchronizer.<init>: 0% (0 exclusive)
    2: (AbstractOwnableSynchronizer.java:59): 0% (0 exclusive)
  1: java.lang.Throwable.<init>: 0% (0 exclusive)
    2: (Throwable.java:287): 0% (0 exclusive)
    2: (Throwable.java:309): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Scope$CompoundScope$CompoundScopeIterator.<init>: 0% (0 exclusive)
    2: (Scope.java:677): 0% (0 exclusive)
  1: sun.misc.URLClassPath$JarLoader.getResource: 0% (0 exclusive)
    2: (URLClassPath.java:819): 0% (0 exclusive)
  1: java.util.LinkedHashMap.createEntry: 0% (0 exclusive)
    2: (LinkedHashMap.java:441): 0% (0 exclusive)
  1: java.util.ArrayList.iterator: 0% (0 exclusive)
    2: (ArrayList.java:774): 0% (0 exclusive)
  1: java.util.ArrayList.grow: 0% (0 exclusive)
    2: (ArrayList.java:213): 0% (0 exclusive)
  1: com.sun.tools.javac.util.SharedNameTable.fromUtf: 0% (0 exclusive)
    2: (SharedNameTable.java:143): 0% (0 exclusive)
  1: trees.MatchFinder.trace: 0% (0 exclusive)
    2: (MatchFinder.java:75): 0% (0 exclusive)
  1: trees.MatchIterator.next: 0% (0 exclusive)
    2: (MatchIterator.java:80): 0% (0 exclusive)
  1: java.util.jar.Manifest.read: 0% (0 exclusive)
    2: (Manifest.java:251): 0% (0 exclusive)
  1: trees.MatchSpec$RuleSpec.<init>: 0% (0 exclusive)
    2: (MatchSpec.java:62): 0% (0 exclusive)
  1: com.sun.tools.javac.util.RichDiagnosticFormatter.<init>: 0% (0 exclusive)
    2: (RichDiagnosticFormatter.java:93): 0% (0 exclusive)
  1: java.lang.Class.privateGetDeclaredConstructors: 0% (0 exclusive)
    2: (Class.java:2404): 0% (0 exclusive)
  1: com.sun.tools.javac.main.RecognizedOptions$17.<init>: 0% (0 exclusive)
    2: (RecognizedOptions.java:445): 0% (0 exclusive)
  1: java.io.File.createNewFile: 0% (0 exclusive)
    2: (File.java:947): 0% (0 exclusive)
  1: sun.misc.URLClassPath.getResource: 0% (0 exclusive)
    2: (URLClassPath.java:195): 0% (0 exclusive)
  1: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.buildIndex: 0% (0 exclusive)
    2: (ZipFileIndex.java:579): 0% (0 exclusive)
  1: java.util.zip.ZipFile.getEntry: 0% (0 exclusive)
    2: (ZipFile.java:304): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Scope$3.<init>: 0% (0 exclusive)
    2: (Scope.java:418): 0% (0 exclusive)
  1: com.sun.tools.javac.util.Names.fromString: 0% (0 exclusive)
    2: (Names.java:288): 0% (0 exclusive)
  1: java.util.LinkedHashMap$Entry.<init>: 0% (0 exclusive)
    2: (LinkedHashMap.java:321): 0% (0 exclusive)
  1: grammar.Expression$Star.<init>: 0% (0 exclusive)
    2: (Expression.java:275): 0% (0 exclusive)
  1: java.lang.String.matches: 0% (0 exclusive)
    2: (String.java:2111): 0% (0 exclusive)
  1: compiler.java.CollectingJavaFileManager.inferBinaryName: 0% (0 exclusive)
    2: (CollectingJavaFileManager.java:174): 0% (0 exclusive)
  1: com.sun.tools.javac.util.ForwardingDiagnosticFormatter.<init>: 0% (0 exclusive)
    2: (ForwardingDiagnosticFormatter.java:61): 0% (0 exclusive)
  1: com.sun.tools.javac.comp.Resolve.selectBest: 0% (0 exclusive)
    2: (Resolve.java:687): 0% (0 exclusive)
  1: java.util.ArrayList.toArray: 0% (0 exclusive)
    2: (ArrayList.java:329): 0% (0 exclusive)
    2: (ArrayList.java:360): 0% (0 exclusive)
  1: java.lang.StringBuffer.replace: 0% (0 exclusive)
    2: (StringBuffer.java:387): 0% (0 exclusive)
  1: util.StringUtils.unescape: 0% (0 exclusive)
    2: (StringUtils.java:85): 0% (0 exclusive)
  1: com.sun.tools.javac.parser.JavacParser.variableDeclarators: 0% (0 exclusive)
    2: (JavacParser.java:2159): 0% (0 exclusive)
  1: java.lang.Exception.<init>: 0% (0 exclusive)
    2: (Exception.java:102): 0% (0 exclusive)
    2: (Exception.java:84): 0% (0 exclusive)
  1: java.security.PrivilegedActionException.<init>: 0% (0 exclusive)
    2: (PrivilegedActionException.java:66): 0% (0 exclusive)
  1: util.FileUtils.write: 0% (0 exclusive)
    2: (FileUtils.java:97): 0% (0 exclusive)
    2: (FileUtils.java:99): 0% (0 exclusive)
  1: source.SourceString.<init>: 0% (0 exclusive)
    2: (SourceString.java:57): 0% (0 exclusive)
  1: java.util.Collections$UnmodifiableCollection.toArray: 0% (0 exclusive)
    2: (Collections.java:1058): 0% (0 exclusive)
    2: (Collections.java:1059): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Scope$CompoundScope$2$1.<init>: 0% (0 exclusive)
    2: (Scope.java:663): 0% (0 exclusive)
  1: com.sun.tools.javac.comp.Attr.checkMethod: 0% (0 exclusive)
    2: (Attr.java:2767): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Type.<init>: 0% (0 exclusive)
    2: (Type.java:118): 0% (0 exclusive)
  1: java.io.Win32FileSystem.hashCode: 0% (0 exclusive)
    2: (Win32FileSystem.java:598): 0% (0 exclusive)
  1: com.sun.tools.javac.file.RelativePath$RelativeFile.<init>: 0% (0 exclusive)
    2: (RelativePath.java:157): 0% (0 exclusive)
    2: (RelativePath.java:166): 0% (0 exclusive)
  1: com.sun.tools.javac.comp.Infer.instance: 0% (0 exclusive)
    2: (Infer.java:64): 0% (0 exclusive)
  1: compiler.MacroExpander.expandMacro: 0% (0 exclusive)
    2: (MacroExpander.java:45): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Types$DefaultTypeVisitor.<init>: 0% (0 exclusive)
    2: (Types.java:3711): 0% (0 exclusive)
  1: grammar.GrammarDSL.star: 0% (0 exclusive)
    2: (GrammarDSL.java:80): 0% (0 exclusive)
  1: com.sun.tools.javac.comp.MemberEnter$3.importFrom: 0% (0 exclusive)
    2: (MemberEnter.java:272): 0% (0 exclusive)
  1: java.io.FileDescriptor.decrementAndGetUseCount: 0% (0 exclusive)
    2: (FileDescriptor.java:178): 0% (0 exclusive)
  1: sun.misc.Launcher$AppClassLoader.loadClass: 0% (0 exclusive)
    2: (Launcher.java:308): 0% (0 exclusive)
  1: java.util.concurrent.atomic.AtomicBoolean.<init>: 0% (0 exclusive)
    2: (AtomicBoolean.java:77): 0% (0 exclusive)
  1: com.sun.tools.javac.util.ListBuffer.iterator: 0% (0 exclusive)
    2: (ListBuffer.java:205): 0% (0 exclusive)
  1: java.util.zip.ZipFile.access$1400: 0% (0 exclusive)
    2: (ZipFile.java:56): 0% (0 exclusive)
  1: com.sun.tools.javac.util.List.prepend: 0% (0 exclusive)
    2: (List.java:174): 0% (0 exclusive)
  1: com.sun.tools.javac.comp.Check$Validator.<init>: 0% (0 exclusive)
    2: (Check.java:1050): 0% (0 exclusive)
  1: java.net.FactoryURLClassLoader.loadClass: 0% (0 exclusive)
    2: (URLClassLoader.java:789): 0% (0 exclusive)
  1: java.lang.ref.PhantomReference.<init>: 0% (0 exclusive)
    2: (PhantomReference.java:80): 0% (0 exclusive)
  1: java.lang.StringBuffer.toString: 0% (0 exclusive)
    2: (StringBuffer.java:561): 0% (0 exclusive)
  1: sun.launcher.LauncherHelper.checkAndLoadMain: 0% (0 exclusive)
    2: (LauncherHelper.java:480): 0% (0 exclusive)
  1: com.sun.tools.javac.file.ZipFileIndex$DirectoryEntry.getEntry: 0% (0 exclusive)
    2: (ZipFileIndex.java:769): 0% (0 exclusive)
  1: java.util.jar.JarFile.getInputStream: 0% (0 exclusive)
    2: (JarFile.java:403): 0% (0 exclusive)
  1: java.io.FileDescriptor.<init>: 0% (0 exclusive)
    2: (FileDescriptor.java:60): 0% (0 exclusive)
  1: com.sun.tools.javac.file.RelativePath$RelativeFile.dirname: 0% (0 exclusive)
    2: (RelativePath.java:176): 0% (0 exclusive)
  1: com.sun.tools.javac.comp.Check.validate: 0% (0 exclusive)
    2: (Check.java:1033): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Symbol$ClassSymbol.<init>: 0% (0 exclusive)
    2: (Symbol.java:733): 0% (0 exclusive)
    2: (Symbol.java:735): 0% (0 exclusive)
    2: (Symbol.java:736): 0% (0 exclusive)
    2: (Symbol.java:743): 0% (0 exclusive)
  1: com.sun.tools.javac.parser.JavacParser.blockStatements: 0% (0 exclusive)
    2: (JavacParser.java:1656): 0% (0 exclusive)
  1: com.sun.tools.javac.file.RegularFileObject.<init>: 0% (0 exclusive)
    2: (RegularFileObject.java:67): 0% (0 exclusive)
  1: com.sun.tools.javac.file.JavacFileManager.listContainer: 0% (0 exclusive)
    2: (JavacFileManager.java:357): 0% (0 exclusive)
    2: (JavacFileManager.java:358): 0% (0 exclusive)
  1: com.sun.tools.javac.main.JavacOption$Option.<init>: 0% (0 exclusive)
    2: (JavacOption.java:114): 0% (0 exclusive)
  1: driver.CompilationDriver.compileFile: 0% (0 exclusive)
    2: (CompilationDriver.java:84): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Symbol$MethodSymbol.overrides: 0% (0 exclusive)
    2: (Symbol.java:1167): 0% (0 exclusive)
  1: sun.net.www.ParseUtil.<init>: 0% (0 exclusive)
    2: (ParseUtil.java:48): 0% (0 exclusive)
  1: sun.net.www.protocol.jar.Handler.parseContextSpec: 0% (0 exclusive)
    2: (Handler.java:206): 0% (0 exclusive)
  1: com.sun.tools.javac.jvm.Items.makeImmediateItem: 0% (0 exclusive)
    2: (Items.java:156): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Types$ImplementationCache.implementationInternal: 0% (0 exclusive)
    2: (Types.java:2081): 0% (0 exclusive)
    2: (Types.java:2084): 0% (0 exclusive)
  1: java.lang.AbstractStringBuilder.expandCapacity: 0% (0 exclusive)
    2: (AbstractStringBuilder.java:130): 0% (0 exclusive)
  1: com.sun.tools.javac.tree.JCTree$JCIdent.<init>: 0% (0 exclusive)
    2: (JCTree.java:1700): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Symtab.initType: 0% (0 exclusive)
    2: (Symtab.java:208): 0% (0 exclusive)
  1: sun.nio.fs.WindowsPathParser.normalize: 0% (0 exclusive)
    2: (WindowsPathParser.java:190): 0% (0 exclusive)
  1: java.util.concurrent.ConcurrentHashMap$Segment.put: 0% (0 exclusive)
    2: (ConcurrentHashMap.java:396): 0% (0 exclusive)
  1: util.AbstractBiIterator.<init>: 0% (0 exclusive)
    2: (AbstractBiIterator.java:7): 0% (0 exclusive)
  1: com.sun.tools.javac.api.JavacTaskImpl.call: 0% (0 exclusive)
    2: (JavacTaskImpl.java:132): 0% (0 exclusive)
  1: java.lang.Integer.<init>: 0% (0 exclusive)
    2: (Integer.java:659): 0% (0 exclusive)
  1: parser.Match.<init>: 0% (0 exclusive)
    2: (Match.java:87): 0% (0 exclusive)
  1: java.io.File.getCanonicalPath: 0% (0 exclusive)
    2: (File.java:589): 0% (0 exclusive)
  1: java.util.AbstractQueue.<init>: 0% (0 exclusive)
    2: (AbstractQueue.java:71): 0% (0 exclusive)
  1: sun.net.www.protocol.file.Handler.parseURL: 0% (0 exclusive)
    2: (Handler.java:67): 0% (0 exclusive)
  1: source.SourceFileText.at: 0% (0 exclusive)
    2: (SourceFileText.java:143): 0% (0 exclusive)
  1: com.sun.tools.javac.main.RecognizedOptions.getXLintChoices: 0% (0 exclusive)
    2: (RecognizedOptions.java:635): 0% (0 exclusive)
  1: java.util.regex.Pattern.charPropertyNodeFor: 0% (0 exclusive)
    2: (Pattern.java:2728): 0% (0 exclusive)
  1: java.util.AbstractSet.<init>: 0% (0 exclusive)
    2: (AbstractSet.java:63): 0% (0 exclusive)
  1: com.sun.tools.javac.jvm.ClassReader.includeClassFile: 0% (0 exclusive)
    2: (ClassReader.java:2377): 0% (0 exclusive)
    2: (ClassReader.java:2383): 0% (0 exclusive)
  1: com.sun.tools.javac.jvm.Code.emitop0: 0% (0 exclusive)
    2: (Code.java:475): 0% (0 exclusive)
  1: java.util.ArrayList$Itr.<init>: 0% (0 exclusive)
    2: (ArrayList.java:780): 0% (0 exclusive)
  1: java.util.concurrent.locks.AbstractQueuedSynchronizer.<init>: 0% (0 exclusive)
    2: (AbstractQueuedSynchronizer.java:299): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Scope.makeEntry: 0% (0 exclusive)
    2: (Scope.java:230): 0% (0 exclusive)
  1: driver.CompilationDriver.dumpAndOrLoadClass: 0% (0 exclusive)
    2: (CompilationDriver.java:109): 0% (0 exclusive)
    2: (CompilationDriver.java:118): 0% (0 exclusive)
  1: java.util.HashMap$Entry.<init>: 0% (0 exclusive)
    2: (HashMap.java:696): 0% (0 exclusive)
  1: com.sun.demo.jvmti.hprof.Tracker.ObjectInit: 0% (0 exclusive)
    2: (Tracker.java:57): 0% (0 exclusive)
  1: com.sun.tools.javac.util.Name.<init>: 0% (0 exclusive)
    2: (Name.java:41): 0% (0 exclusive)
  1: com.sun.tools.javac.parser.EndPosParser.parseCompilationUnit: 0% (0 exclusive)
    2: (EndPosParser.java:83): 0% (0 exclusive)
  1: java.lang.String.trim: 0% (0 exclusive)
    2: (String.java:2781): 0% (0 exclusive)
  1: java.lang.StringCoding.decode: 0% (0 exclusive)
    2: (StringCoding.java:193): 0% (0 exclusive)
  1: source.SourceString.at: 0% (0 exclusive)
    2: (SourceString.java:86): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Symbol$MethodSymbol.<init>: 0% (0 exclusive)
    2: (Symbol.java:1043): 0% (0 exclusive)
  1: java.util.EnumSet.<init>: 0% (0 exclusive)
    2: (EnumSet.java:95): 0% (0 exclusive)
  1: com.sun.tools.javac.file.ZipFileIndexArchive.getFileObject: 0% (0 exclusive)
    2: (ZipFileIndexArchive.java:74): 0% (0 exclusive)
    2: (ZipFileIndexArchive.java:76): 0% (0 exclusive)
  1: trees.MatchSpec.rule: 0% (0 exclusive)
    2: (MatchSpec.java:87): 0% (0 exclusive)
  1: java.lang.ref.Finalizer.<init>: 0% (0 exclusive)
    2: (Finalizer.java:84): 0% (0 exclusive)
  1: java.util.AbstractCollection.<init>: 0% (0 exclusive)
    2: (AbstractCollection.java:66): 0% (0 exclusive)
  1: java.util.concurrent.locks.ReentrantLock$Sync.<init>: 0% (0 exclusive)
    2: (ReentrantLock.java:119): 0% (0 exclusive)
  1: java.io.File.<init>: 0% (0 exclusive)
    2: (File.java:236): 0% (0 exclusive)
    2: (File.java:249): 0% (0 exclusive)
    2: (File.java:332): 0% (0 exclusive)
    2: (File.java:341): 0% (0 exclusive)
  1: java.lang.Number.<init>: 0% (0 exclusive)
    2: (Number.java:49): 0% (0 exclusive)
  1: com.sun.tools.javac.file.JavacFileManager.inferBinaryName: 0% (0 exclusive)
    2: (JavacFileManager.java:658): 0% (0 exclusive)
  1: com.sun.tools.javac.parser.JavacParser.variableDeclaratorsRest: 0% (0 exclusive)
    2: (JavacParser.java:2176): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Types$DefaultTypeVisitor.visit: 0% (0 exclusive)
    2: (Types.java:3712): 0% (0 exclusive)
  1: grammar.java._B_Expressions.<init>: 0% (0 exclusive)
    2: (_B_Expressions.java:12): 0% (0 exclusive)
    2: (_B_Expressions.java:412): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Scope$ImportScope.makeEntry: 0% (0 exclusive)
    2: (Scope.java:515): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Scope$ImportScope$ImportEntry.<init>: 0% (0 exclusive)
    2: (Scope.java:522): 0% (0 exclusive)
  1: trees.MatchIterator.forward: 0% (0 exclusive)
    2: (MatchIterator.java:105): 0% (0 exclusive)
    2: (MatchIterator.java:90): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Symbol$TypeSymbol.formFlatName: 0% (0 exclusive)
    2: (Symbol.java:547): 0% (0 exclusive)
  1: com.sun.tools.javac.comp.Resolve.findMethod: 0% (0 exclusive)
    2: (Resolve.java:910): 0% (0 exclusive)
    2: (Resolve.java:949): 0% (0 exclusive)
  1: java.io.File.getParent: 0% (0 exclusive)
    2: (File.java:453): 0% (0 exclusive)
  1: com.sun.tools.javac.jvm.Code.markStatBegin: 0% (0 exclusive)
    2: (Code.java:1576): 0% (0 exclusive)
  1: com.sun.tools.javac.util.List.of: 0% (0 exclusive)
    2: (List.java:89): 0% (0 exclusive)
    2: (List.java:95): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Symtab.enterBinop: 0% (0 exclusive)
    2: (Symtab.java:240): 0% (0 exclusive)
  1: java.util.ComparableTimSort.binarySort: 0% (0 exclusive)
    2: (ComparableTimSort.java:252): 0% (0 exclusive)
  1: java.util.regex.Pattern.family: 0% (0 exclusive)
    2: (Pattern.java:2685): 0% (0 exclusive)
  1: java.net.URLStreamHandler.toExternalForm: 0% (0 exclusive)
    2: (URLStreamHandler.java:490): 0% (0 exclusive)
    2: (URLStreamHandler.java:508): 0% (0 exclusive)
  1: com.sun.tools.javac.file.BaseFileObject.<init>: 0% (0 exclusive)
    2: (BaseFileObject.java:51): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Type$ClassType.<init>: 0% (0 exclusive)
    2: (Type.java:564): 0% (0 exclusive)
  1: grammar.java._D_Requires.<init>: 0% (0 exclusive)
    2: (_D_Requires.java:16): 0% (0 exclusive)
  1: compiler.java.CompiledClass.dump: 0% (0 exclusive)
    2: (CompiledClass.java:73): 0% (0 exclusive)
    2: (CompiledClass.java:74): 0% (0 exclusive)
    2: (CompiledClass.java:76): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Symbol$TypeSymbol.formFullName: 0% (0 exclusive)
    2: (Symbol.java:532): 0% (0 exclusive)
  1: parser.ParseData.<init>: 0% (0 exclusive)
    2: (ParseData.java:38): 0% (0 exclusive)
    2: (ParseData.java:44): 0% (0 exclusive)
    2: (ParseData.java:47): 0% (0 exclusive)
  1: sun.misc.URLClassPath$JarLoader.checkResource: 0% (0 exclusive)
    2: (URLClassPath.java:734): 0% (0 exclusive)
    2: (URLClassPath.java:747): 0% (0 exclusive)
  1: java.util.Vector.<init>: 0% (0 exclusive)
    2: (Vector.java:127): 0% (0 exclusive)
  1: com.sun.tools.javac.util.List.reverse: 0% (0 exclusive)
    2: (List.java:210): 0% (0 exclusive)
  1: java.lang.ClassLoader.getClassLoadingLock: 0% (0 exclusive)
    2: (ClassLoader.java:461): 0% (0 exclusive)
  1: source.SourceFileText.<init>: 0% (0 exclusive)
    2: (SourceFileText.java:118): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Type.accept: 0% (0 exclusive)
    2: (Type.java:114): 0% (0 exclusive)
  1: java.lang.ref.WeakReference.<init>: 0% (0 exclusive)
    2: (WeakReference.java:69): 0% (0 exclusive)
  1: com.sun.tools.javac.tree.TreeMaker$AnnotationBuilder.<init>: 0% (0 exclusive)
    2: (TreeMaker.java:722): 0% (0 exclusive)
  1: com.sun.tools.javac.comp.Check$CycleChecker.visitClassDef: 0% (0 exclusive)
    2: (Check.java:1890): 0% (0 exclusive)
  1: trees.MatchSpec$PositionSpec.<init>: 0% (0 exclusive)
    2: (MatchSpec.java:262): 0% (0 exclusive)
  1: sun.misc.URLClassPath$FileLoader$1.getInputStream: 0% (0 exclusive)
    2: (URLClassPath.java:1063): 0% (0 exclusive)
  1: java.lang.String.<init>: 0% (0 exclusive)
    2: (String.java:193): 0% (0 exclusive)
    2: (String.java:197): 0% (0 exclusive)
    2: (String.java:221): 0% (0 exclusive)
    2: (String.java:234): 0% (0 exclusive)
    2: (String.java:346): 0% (0 exclusive)
    2: (String.java:448): 0% (0 exclusive)
    2: (String.java:452): 0% (0 exclusive)
    2: (String.java:645): 0% (0 exclusive)
  1: com.sun.tools.javac.comp.Check.<init>: 0% (0 exclusive)
    2: (Check.java:96): 0% (0 exclusive)
  1: driver.DependencyResolver.<init>: 0% (0 exclusive)
    2: (DependencyResolver.java:65): 0% (0 exclusive)
  1: com.sun.tools.javac.comp.Infer$3.<init>: 0% (0 exclusive)
    2: (Infer.java:245): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Type$ArrayType.<init>: 0% (0 exclusive)
    2: (Type.java:784): 0% (0 exclusive)
  1: com.sun.tools.javac.jvm.ClassReader.readInnerClasses: 0% (0 exclusive)
    2: (ClassReader.java:1967): 0% (0 exclusive)
  1: sun.misc.URLClassPath$FileLoader.getResource: 0% (0 exclusive)
    2: (URLClassPath.java:1034): 0% (0 exclusive)
    2: (URLClassPath.java:1035): 0% (0 exclusive)
    2: (URLClassPath.java:1054): 0% (0 exclusive)
    2: (URLClassPath.java:1057): 0% (0 exclusive)
  1: java.security.CodeSource.<init>: 0% (0 exclusive)
    2: (CodeSource.java:103): 0% (0 exclusive)
  1: com.sun.tools.javac.jvm.Items$ImmediateItem.<init>: 0% (0 exclusive)
    2: (Items.java:530): 0% (0 exclusive)
  1: java.lang.reflect.Array.newInstance: 0% (0 exclusive)
    2: (Array.java:70): 0% (0 exclusive)
  1: com.sun.tools.javac.file.JavacFileManager.caseMapCheck: 0% (0 exclusive)
    2: (JavacFileManager.java:400): 0% (0 exclusive)
  1: com.sun.tools.javac.file.FSInfo.exists: 0% (0 exclusive)
    2: (FSInfo.java:54): 0% (0 exclusive)
  1: sun.misc.URLClassPath$JarLoader$2.<init>: 0% (0 exclusive)
    2: (URLClassPath.java:747): 0% (0 exclusive)
  1: java.security.SecureClassLoader.defineClass: 0% (0 exclusive)
    2: (SecureClassLoader.java:142): 0% (0 exclusive)
  1: java.util.jar.JarFile.getEntry: 0% (0 exclusive)
    2: (JarFile.java:225): 0% (0 exclusive)
  1: java.util.Collections$UnmodifiableList.<init>: 0% (0 exclusive)
    2: (Collections.java:1204): 0% (0 exclusive)
  1: com.sun.tools.javac.util.ListBuffer$1.<init>: 0% (0 exclusive)
    2: (ListBuffer.java:205): 0% (0 exclusive)
  1: com.sun.tools.javac.jvm.ClassReader.instance: 0% (0 exclusive)
    2: (ClassReader.java:226): 0% (0 exclusive)
  1: com.sun.tools.javac.parser.JavacParser.formalParameters: 0% (0 exclusive)
    2: (JavacParser.java:2782): 0% (0 exclusive)
  1: com.sun.tools.javac.tree.JCTree$JCLiteral.<init>: 0% (0 exclusive)
    2: (JCTree.java:1725): 0% (0 exclusive)
  1: parser.Matcher.succeed: 0% (0 exclusive)
    2: (Matcher.java:160): 0% (0 exclusive)
  1: java.lang.AbstractStringBuilder.ensureCapacityInternal: 0% (0 exclusive)
    2: (AbstractStringBuilder.java:114): 0% (0 exclusive)
  1: grammar.Expression$Plus.accept: 0% (0 exclusive)
    2: (Expression.java:265): 0% (0 exclusive)
  1: com.sun.tools.javac.util.SharedNameTable$NameImpl.<init>: 0% (0 exclusive)
    2: (SharedNameTable.java:176): 0% (0 exclusive)
  1: parser.Matcher.visit: 0% (0 exclusive)
    2: (Matcher.java:254): 0% (0 exclusive)
  1: com.sun.tools.javac.main.RecognizedOptions.getOptions: 0% (0 exclusive)
    2: (RecognizedOptions.java:245): 0% (0 exclusive)
  1: java.lang.StringBuilder.toString: 0% (0 exclusive)
    2: (StringBuilder.java:405): 0% (0 exclusive)
  1: java.util.Collections$UnmodifiableCollection.<init>: 0% (0 exclusive)
    2: (Collections.java:1049): 0% (0 exclusive)
  1: sun.misc.Resource.<init>: 0% (0 exclusive)
    2: (Resource.java:46): 0% (0 exclusive)
  1: java.util.jar.JarFile.getManifest: 0% (0 exclusive)
    2: (JarFile.java:165): 0% (0 exclusive)
  1: java.net.URLClassLoader$1.<init>: 0% (0 exclusive)
    2: (URLClassLoader.java:355): 0% (0 exclusive)
  1: com.sun.tools.javac.comp.TransTypes.addBridgeIfNeeded: 0% (0 exclusive)
    2: (TransTypes.java:290): 0% (0 exclusive)
  1: com.sun.tools.javac.util.JCDiagnostic$Factory.qualify: 0% (0 exclusive)
    2: (JCDiagnostic.java:234): 0% (0 exclusive)
  1: grammar.java._A_Lexical.<init>: 0% (0 exclusive)
    2: (_A_Lexical.java:180): 0% (0 exclusive)
  1: java.util.regex.Pattern.sequence: 0% (0 exclusive)
    2: (Pattern.java:2043): 0% (0 exclusive)
  1: com.sun.tools.javac.file.Paths$Path.addFile: 0% (0 exclusive)
    2: (Paths.java:302): 0% (0 exclusive)
  1: java.net.URL.<init>: 0% (0 exclusive)
    2: (URL.java:480): 0% (0 exclusive)
    2: (URL.java:505): 0% (0 exclusive)
    2: (URL.java:612): 0% (0 exclusive)
  1: com.sun.tools.javac.util.List.<init>: 0% (0 exclusive)
    2: (List.java:65): 0% (0 exclusive)
  1: java.lang.ClassLoader.findBootstrapClassOrNull: 0% (0 exclusive)
    2: (ClassLoader.java:1061): 0% (0 exclusive)
  1: trees.MatchSpec.at: 0% (0 exclusive)
    2: (MatchSpec.java:285): 0% (0 exclusive)
  1: com.sun.tools.javac.jvm.Items$Item.<init>: 0% (0 exclusive)
    2: (Items.java:192): 0% (0 exclusive)
  1: source.SourceStream.get: 0% (0 exclusive)
    2: (SourceStream.java:68): 0% (0 exclusive)
  1: com.sun.tools.javac.comp.MemberEnter.importNamedStatic: 0% (0 exclusive)
    2: (MemberEnter.java:257): 0% (0 exclusive)
  1: com.sun.tools.javac.main.Main.compile: 0% (0 exclusive)
    2: (Main.java:404): 0% (0 exclusive)
  1: grammar.java._C_Statements.<init>: 0% (0 exclusive)
    2: (_C_Statements.java:11): 0% (0 exclusive)
  1: java.util.HashMap.resize: 0% (0 exclusive)
    2: (HashMap.java:478): 0% (0 exclusive)
  1: java.io.Win32FileSystem.canonicalize: 0% (0 exclusive)
    2: (Win32FileSystem.java:414): 0% (0 exclusive)
  1: parser.Matcher.parse: 0% (0 exclusive)
    2: (Matcher.java:133): 0% (0 exclusive)
  1: com.sun.tools.javac.comp.Enter.instance: 0% (0 exclusive)
    2: (Enter.java:114): 0% (0 exclusive)
  1: sun.misc.Resource.cachedInputStream: 0% (0 exclusive)
    2: (Resource.java:77): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Symbol$ClassSymbol.erasure: 0% (0 exclusive)
    2: (Symbol.java:774): 0% (0 exclusive)
  1: com.sun.tools.javac.jvm.ClassReader$6.read: 0% (0 exclusive)
    2: (ClassReader.java:976): 0% (0 exclusive)
  1: util.StringUtils.escape: 0% (0 exclusive)
    2: (StringUtils.java:22): 0% (0 exclusive)
  1: com.sun.tools.javac.file.ZipFileIndex$ZipDirectory.readEntry: 0% (0 exclusive)
    2: (ZipFileIndex.java:644): 0% (0 exclusive)
    2: (ZipFileIndex.java:668): 0% (0 exclusive)
  1: com.sun.tools.javac.file.RegularFileObject.inferBinaryName: 0% (0 exclusive)
    2: (RegularFileObject.java:162): 0% (0 exclusive)
    2: (RegularFileObject.java:163): 0% (0 exclusive)
    2: (RegularFileObject.java:166): 0% (0 exclusive)
  1: driver.DependencyResolver.resolve: 0% (0 exclusive)
    2: (DependencyResolver.java:61): 0% (0 exclusive)
  1: grammar.Expression$Not.accept: 0% (0 exclusive)
    2: (Expression.java:252): 0% (0 exclusive)
  1: grammar.Expression.<init>: 0% (0 exclusive)
    2: (Expression.java:77): 0% (0 exclusive)
    2: (Expression.java:84): 0% (0 exclusive)
  1: java.util.jar.Attributes.read: 0% (0 exclusive)
    2: (Attributes.java:412): 0% (0 exclusive)
  1: java.lang.ref.Reference.<init>: 0% (0 exclusive)
    2: (Reference.java:230): 0% (0 exclusive)
    2: (Reference.java:233): 0% (0 exclusive)
  1: java.io.File.isDirectory: 0% (0 exclusive)
    2: (File.java:799): 0% (0 exclusive)
  1: com.sun.tools.javac.jvm.ClassReader$11.read: 0% (0 exclusive)
    2: (ClassReader.java:1065): 0% (0 exclusive)
  1: java.util.EnumSet.of: 0% (0 exclusive)
    2: (EnumSet.java:204): 0% (0 exclusive)
    2: (EnumSet.java:323): 0% (0 exclusive)
  1: java.util.ArrayList.ensureCapacityInternal: 0% (0 exclusive)
    2: (ArrayList.java:187): 0% (0 exclusive)
  1: com.sun.tools.javac.file.ZipFileIndexArchive$ZipFileIndexFileObject.<init>: 0% (0 exclusive)
    2: (ZipFileIndexArchive.java:120): 0% (0 exclusive)
  1: java.util.regex.Pattern.matches: 0% (0 exclusive)
    2: (Pattern.java:1129): 0% (0 exclusive)
  1: java.lang.StringBuilder.<init>: 0% (0 exclusive)
    2: (StringBuilder.java:109): 0% (0 exclusive)
    2: (StringBuilder.java:85): 0% (0 exclusive)
  1: java.util.regex.Pattern.matcher: 0% (0 exclusive)
    2: (Pattern.java:1088): 0% (0 exclusive)
  1: java.util.LinkedHashMap.<init>: 0% (0 exclusive)
    2: (LinkedHashMap.java:198): 0% (0 exclusive)
  1: com.sun.tools.javac.tree.TreeMaker.forToplevel: 0% (0 exclusive)
    2: (TreeMaker.java:101): 0% (0 exclusive)
  1: com.sun.tools.javac.parser.ParserFactory.instance: 0% (0 exclusive)
    2: (ParserFactory.java:51): 0% (0 exclusive)
  1: com.sun.tools.javac.util.ListBuffer.append: 0% (0 exclusive)
    2: (ListBuffer.java:132): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Symtab.instance: 0% (0 exclusive)
    2: (Symtab.java:61): 0% (0 exclusive)
  1: com.sun.tools.javac.main.RecognizedOptions.getJavaCompilerOptions: 0% (0 exclusive)
    2: (RecognizedOptions.java:232): 0% (0 exclusive)
  1: com.sun.tools.javac.file.BaseFileObject.removeExtension: 0% (0 exclusive)
    2: (BaseFileObject.java:84): 0% (0 exclusive)
  1: grammar.GrammarDSL.str: 0% (0 exclusive)
    2: (GrammarDSL.java:110): 0% (0 exclusive)
  1: java.util.jar.JavaUtilJarAccessImpl.jarFileHasClassPathAttribute: 0% (0 exclusive)
    2: (JavaUtilJarAccessImpl.java:37): 0% (0 exclusive)
  1: java.lang.Class.newInstance0: 0% (0 exclusive)
    2: (Class.java:343): 0% (0 exclusive)
  1: java.io.File.listFiles: 0% (0 exclusive)
    2: (File.java:1133): 0% (0 exclusive)
    2: (File.java:1138): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Types$UnaryVisitor.<init>: 0% (0 exclusive)
    2: (Types.java:3790): 0% (0 exclusive)
  1: java.util.HashMap.put: 0% (0 exclusive)
    2: (HashMap.java:402): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Scope$CompoundScope$2.iterator: 0% (0 exclusive)
    2: (Scope.java:663): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Symbol.<init>: 0% (0 exclusive)
    2: (Symbol.java:116): 0% (0 exclusive)
  1: com.sun.tools.javac.file.ZipFileIndex$DirectoryEntry.access$100: 0% (0 exclusive)
    2: (ZipFileIndex.java:700): 0% (0 exclusive)
  1: java.io.File.exists: 0% (0 exclusive)
    2: (File.java:772): 0% (0 exclusive)
  1: compiler.util.Quoter$DynamicQuoteMethod.dynamicQuote: 0% (0 exclusive)
    2: (Quoter.java:81): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Type$MethodType.<init>: 0% (0 exclusive)
    2: (Type.java:872): 0% (0 exclusive)
  1: compiler.java.StringJavaFileObject.<init>: 0% (0 exclusive)
    2: (StringJavaFileObject.java:29): 0% (0 exclusive)
  1: java.util.concurrent.atomic.AtomicInteger.decrementAndGet: 0% (0 exclusive)
    2: (AtomicInteger.java:220): 0% (0 exclusive)
  1: trees.MatchSpec.<init>: 0% (0 exclusive)
    2: (MatchSpec.java:18): 0% (0 exclusive)
  1: com.sun.tools.javac.file.RegularFileObject.openInputStream: 0% (0 exclusive)
    2: (RegularFileObject.java:96): 0% (0 exclusive)
  1: com.sun.tools.javac.main.JavaCompiler.instance: 0% (0 exclusive)
    2: (JavaCompiler.java:88): 0% (0 exclusive)
  1: com.sun.tools.javac.comp.Check.instance: 0% (0 exclusive)
    2: (Check.java:86): 0% (0 exclusive)
  1: java.io.File.list: 0% (0 exclusive)
    2: (File.java:1048): 0% (0 exclusive)
  1: sun.misc.URLClassPath$JarLoader.getClassPath: 0% (0 exclusive)
    2: (URLClassPath.java:961): 0% (0 exclusive)
  1: com.sun.tools.javac.parser.JavacParser.formalParameter: 0% (0 exclusive)
    2: (JavacParser.java:2811): 0% (0 exclusive)
  1: java.lang.ref.FinalReference.<init>: 0% (0 exclusive)
    2: (FinalReference.java:34): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Types$SimpleVisitor.<init>: 0% (0 exclusive)
    2: (Types.java:3760): 0% (0 exclusive)
  1: com.sun.tools.javac.jvm.Code.emitop: 0% (0 exclusive)
    2: (Code.java:361): 0% (0 exclusive)
    2: (Code.java:364): 0% (0 exclusive)
  1: com.sun.tools.javac.file.RelativePath.<init>: 0% (0 exclusive)
    2: (RelativePath.java:47): 0% (0 exclusive)
  1: java.util.AbstractMap.<init>: 0% (0 exclusive)
    2: (AbstractMap.java:73): 0% (0 exclusive)
  1: source.SourceComposed.<init>: 0% (0 exclusive)
    2: (SourceComposed.java:17): 0% (0 exclusive)
  1: compiler.Macro.expand: 0% (0 exclusive)
    2: (Macro.java:107): 0% (0 exclusive)
  1: com.sun.tools.javac.comp.MemberEnter.visitImport: 0% (0 exclusive)
    2: (MemberEnter.java:554): 0% (0 exclusive)
  1: parser.LimitedMemo.get: 0% (0 exclusive)
    2: (LimitedMemo.java:86): 0% (0 exclusive)
    2: (LimitedMemo.java:92): 0% (0 exclusive)
    2: (LimitedMemo.java:99): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Scope.enter: 0% (0 exclusive)
    2: (Scope.java:197): 0% (0 exclusive)
    2: (Scope.java:201): 0% (0 exclusive)
    2: (Scope.java:212): 0% (0 exclusive)
    2: (Scope.java:219): 0% (0 exclusive)
  1: compiler.MacroExpander.transform: 0% (0 exclusive)
    2: (MacroExpander.java:30): 0% (0 exclusive)
    2: (MacroExpander.java:32): 0% (0 exclusive)
  1: trees.BoundedMatchIterator.<init>: 0% (0 exclusive)
    2: (BoundedMatchIterator.java:50): 0% (0 exclusive)
  1: sun.net.www.protocol.jar.Handler.parseURL: 0% (0 exclusive)
    2: (Handler.java:145): 0% (0 exclusive)
    2: (Handler.java:156): 0% (0 exclusive)
    2: (Handler.java:158): 0% (0 exclusive)
    2: (Handler.java:160): 0% (0 exclusive)
  1: com.sun.tools.javac.main.RecognizedOptions.<clinit>: 0% (0 exclusive)
    2: (RecognizedOptions.java:117): 0% (0 exclusive)
  1: trees.MatchFinder.find: 0% (0 exclusive)
    2: (MatchFinder.java:52): 0% (0 exclusive)
    2: (MatchFinder.java:55): 0% (0 exclusive)
    2: (MatchFinder.java:58): 0% (0 exclusive)
  1: java.util.AbstractList$Itr.<init>: 0% (0 exclusive)
    2: (AbstractList.java:330): 0% (0 exclusive)
  1: parser.Matcher.visitChild: 0% (0 exclusive)
    2: (Matcher.java:149): 0% (0 exclusive)
  1: com.sun.tools.javac.util.Name.getBytes: 0% (0 exclusive)
    2: (Name.java:173): 0% (0 exclusive)
  1: com.sun.tools.javac.code.DeferredLintHandler.flush: 0% (0 exclusive)
    2: (DeferredLintHandler.java:76): 0% (0 exclusive)
  1: com.sun.tools.javac.jvm.ClassReader.readAttrs: 0% (0 exclusive)
    2: (ClassReader.java:1275): 0% (0 exclusive)
  1: com.sun.tools.javac.code.Symbol$TypeSymbol.<init>: 0% (0 exclusive)
    2: (Symbol.java:518): 0% (0 exclusive)
  1: grammar.ExpressionTreeCleaner.visit: 0% (0 exclusive)
    2: (ExpressionTreeCleaner.java:200): 0% (0 exclusive)
    2: (ExpressionTreeCleaner.java:227): 0% (0 exclusive)
    2: (ExpressionTreeCleaner.java:245): 0% (0 exclusive)
    2: (ExpressionTreeCleaner.java:270): 0% (0 exclusive)
  1: java.util.HashMap.addEntry: 0% (0 exclusive)
    2: (HashMap.java:766): 0% (0 exclusive)
    2: (HashMap.java:768): 0% (0 exclusive)
  1: java.util.Collections.binarySearch: 0% (0 exclusive)
    2: (Collections.java:259): 0% (0 exclusive)
  1: java.util.zip.ZipFile$ZipFileInputStream.read: 0% (0 exclusive)
    2: (ZipFile.java:677): 0% (0 exclusive)
  1: com.sun.tools.javac.api.JavacTaskImpl.<init>: 0% (0 exclusive)
    2: (JavacTaskImpl.java:104): 0% (0 exclusive)
    2: (JavacTaskImpl.java:78): 0% (0 exclusive)
  1: sun.misc.Resource.getBytes: 0% (0 exclusive)
    2: (Resource.java:117): 0% (0 exclusive)
    2: (Resource.java:124): 0% (0 exclusive)
  1: com.sun.tools.javac.file.Paths.getPathEntries: 0% (0 exclusive)
    2: (Paths.java:220): 0% (0 exclusive)
  1: com.sun.tools.javac.util.ForwardingDiagnosticFormatter$ForwardingConfiguration.<init>: 0% (0 exclusive)
    2: (ForwardingDiagnosticFormatter.java:109): 0% (0 exclusive)
  1: java.lang.String.split: 0% (0 exclusive)
    2: (String.java:2333): 0% (0 exclusive)
    2: (String.java:2403): 0% (0 exclusive)
  1: java.io.FileInputStream.<init>: 0% (0 exclusive)
    2: (FileInputStream.java:136): 0% (0 exclusive)
    2: (FileInputStream.java:138): 0% (0 exclusive)
    2: (FileInputStream.java:56): 0% (0 exclusive)
  1: sun.misc.URLClassPath.getLoader: 0% (0 exclusive)
    2: (URLClassPath.java:331): 0% (0 exclusive)
  1: java.io.Win32FileSystem.normalize: 0% (0 exclusive)
    2: (Win32FileSystem.java:122): 0% (0 exclusive)
    2: (Win32FileSystem.java:130): 0% (0 exclusive)
    2: (Win32FileSystem.java:174): 0% (0 exclusive)
  1: compiler.MatchTreeTransformer.transformChilds: 0% (0 exclusive)
    2: (MatchTreeTransformer.java:32): 0% (0 exclusive)
    2: (MatchTreeTransformer.java:41): 0% (0 exclusive)
  1: com.sun.tools.javac.util.ListBuffer.clear: 0% (0 exclusive)
    2: (ListBuffer.java:76): 0% (0 exclusive)
